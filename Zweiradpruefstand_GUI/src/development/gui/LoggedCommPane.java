package development.gui;

import development.gui.model.InfoPaneModel;
import java.awt.Color;
import java.awt.Dimension;
import logging.Logger;
import main.BESDyno;

/**
 *
 * @author emil
 */
public class LoggedCommPane extends javax.swing.JDialog {

    private static final Logger LOG = Logger.getLogger(LoggedCommPane.class.getName());
    
    private final InfoPaneModel reqModel = new InfoPaneModel();
    private final InfoPaneModel resModel = new InfoPaneModel();

    /**
     * Creates new form LoggedCommPane
     */
    public LoggedCommPane(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setSize(new Dimension(500, 500));
        jListReq.setModel(reqModel);
        jListRes.setModel(resModel);
    }
    
    public void addRequest(String req) {
        reqModel.add(req);
    }
    
    public void addResponse(String res) {
        resModel.add(res);
    }
    
    public void rmAll() {
        reqModel.rmAll();
        resModel.rmAll();
    }
    
    public void setAppearance(boolean dark) {
        if(dark) {
            jListReq.setBackground(Color.DARK_GRAY);
            jScrollPane1.setBackground(Color.DARK_GRAY);
            jScrollPane2.setBackground(Color.DARK_GRAY);
            jListRes.setBackground(Color.DARK_GRAY);
            jPanButtons.setBackground(Color.DARK_GRAY);
            jPanTables.setBackground(Color.DARK_GRAY);
            
            jListReq.setForeground(Color.WHITE);
            jListRes.setForeground(Color.WHITE);
        } else {
            jListReq.setBackground(Color.WHITE);
            jScrollPane1.setBackground(Color.WHITE);
            jScrollPane2.setBackground(Color.WHITE);
            jListRes.setBackground(Color.WHITE);
            jPanButtons.setBackground(Color.WHITE);
            jPanTables.setBackground(Color.WHITE);
            
            jListReq.setForeground(Color.BLACK);
            jListRes.setForeground(Color.BLACK);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanButtons = new javax.swing.JPanel();
        jButSave = new javax.swing.JButton();
        jButOk = new javax.swing.JButton();
        jPanTables = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListReq = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListRes = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanButtons.setLayout(new java.awt.GridBagLayout());

        jButSave.setText("Speichern");
        jButSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanButtons.add(jButSave, gridBagConstraints);

        jButOk.setText("OK");
        jButOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButOkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanButtons.add(jButOk, gridBagConstraints);

        getContentPane().add(jPanButtons, java.awt.BorderLayout.SOUTH);

        jPanTables.setLayout(new java.awt.GridLayout(1, 0));

        jListReq.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListReq);

        jPanTables.add(jScrollPane1);

        jListRes.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jListRes);

        jPanTables.add(jScrollPane2);

        getContentPane().add(jPanTables, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButSaveActionPerformed
        try {
            BESDyno.getInstance().saveComm();
        } catch (Exception ex) {
            LOG.warning(ex);
        }
        dispose();
    }//GEN-LAST:event_jButSaveActionPerformed

    private void jButOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButOkActionPerformed
        dispose();
    }//GEN-LAST:event_jButOkActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoggedCommPane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoggedCommPane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoggedCommPane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoggedCommPane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            LoggedCommPane dialog = new LoggedCommPane(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButOk;
    private javax.swing.JButton jButSave;
    private javax.swing.JList<String> jListReq;
    private javax.swing.JList<String> jListRes;
    private javax.swing.JPanel jPanButtons;
    private javax.swing.JPanel jPanTables;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
