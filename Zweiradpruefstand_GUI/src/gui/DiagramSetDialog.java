package gui;

import data.Bike;
import data.Diagram;
import java.awt.Color;
import logging.Logger;

/**
 *
 * @author emil
 */
public class DiagramSetDialog extends javax.swing.JDialog {

    private static final Logger LOG = Logger.getLogger(DiagramSetDialog.class.getName());

    private final Diagram diagram = Diagram.getInstance();

    /**
     * Creates new form DiagramSetDialog
     */
    public DiagramSetDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        setTitle("Diagramm-Parameter");
    }
    
    public void refreshGui() {
        jcbEngPower.setSelected(true);
        jcbEngTemp.setSelected(true);
        jcbEngTorque.setSelected(true);
        jcbEnvAlt.setSelected(true);
        jcbEnvPress.setSelected(true);
        jcbEnvTemp.setSelected(true);
        jcbFumeTemp.setSelected(true);
        jcbMaxPower.setSelected(true);
        jcbMaxTorque.setSelected(true);
        jcbMaxVelocity.setSelected(true);
        jcbWheelPower.setSelected(true);
        jcbWheelTorque.setSelected(true);
        
        if (!Bike.getInstance().isMeasRpm()) {
            jrbWheelRpm.setSelected(true);
            jcbEngPower.setSelected(false);
            jcbEngTorque.setSelected(false);
            
            jrbEngRpm.setEnabled(false);
            jcbEngPower.setEnabled(false);
            jcbEngTorque.setEnabled(false);
        } else {
            jrbEngRpm.setSelected(true);
            jcbEngPower.setSelected(true);
            jcbEngTorque.setSelected(true);
            
            jrbEngRpm.setEnabled(true);
            jcbEngPower.setEnabled(true);
            jcbEngTorque.setEnabled(true);
        }
    }
    
    public void setAppearance(boolean dark) {
        if (dark) {
            jPanButtons.setBackground(Color.DARK_GRAY);
            jPanEng.setBackground(Color.DARK_GRAY);
            jPanEnv.setBackground(Color.DARK_GRAY);
            jPanMain.setBackground(Color.DARK_GRAY);
            jPanMax.setBackground(Color.DARK_GRAY);
            jPanRpm.setBackground(Color.DARK_GRAY);
            jPanWheel.setBackground(Color.DARK_GRAY);
            
            jcbEngPower.setForeground(Color.WHITE);
            jcbEngTemp.setForeground(Color.WHITE);
            jcbEngTorque.setForeground(Color.WHITE);
            jcbEnvAlt.setForeground(Color.WHITE);
            jcbEnvPress.setForeground(Color.WHITE);
            jcbEnvTemp.setForeground(Color.WHITE);
            jcbFumeTemp.setForeground(Color.WHITE);
            jcbMaxPower.setForeground(Color.WHITE);
            jcbMaxTorque.setForeground(Color.WHITE);
            jcbMaxVelocity.setForeground(Color.WHITE);
            jcbWheelTorque.setForeground(Color.WHITE);
            jcbWheelPower.setForeground(Color.WHITE);
            
            jrbEngRpm.setForeground(Color.WHITE);
            jrbWheelRpm.setForeground(Color.WHITE);
        } else {
            jPanButtons.setBackground(Color.WHITE);
            jPanEng.setBackground(Color.WHITE);
            jPanEnv.setBackground(Color.WHITE);
            jPanMain.setBackground(Color.WHITE);
            jPanMax.setBackground(Color.WHITE);
            jPanRpm.setBackground(Color.WHITE);
            jPanWheel.setBackground(Color.WHITE);
            
            jcbEngPower.setForeground(Color.BLACK);
            jcbEngTemp.setForeground(Color.BLACK);
            jcbEngTorque.setForeground(Color.BLACK);
            jcbEnvAlt.setForeground(Color.BLACK);
            jcbEnvPress.setForeground(Color.BLACK);
            jcbEnvTemp.setForeground(Color.BLACK);
            jcbFumeTemp.setForeground(Color.BLACK);
            jcbMaxPower.setForeground(Color.BLACK);
            jcbMaxTorque.setForeground(Color.BLACK);
            jcbMaxVelocity.setForeground(Color.BLACK);
            jcbWheelTorque.setForeground(Color.BLACK);
            jcbWheelPower.setForeground(Color.BLACK);
            
            jrbEngRpm.setForeground(Color.BLACK);
            jrbWheelRpm.setForeground(Color.BLACK);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jbgRpm = new javax.swing.ButtonGroup();
        jPanMain = new javax.swing.JPanel();
        jPanRpm = new javax.swing.JPanel();
        jrbEngRpm = new javax.swing.JRadioButton();
        jrbWheelRpm = new javax.swing.JRadioButton();
        jPanEng = new javax.swing.JPanel();
        jcbEngPower = new javax.swing.JCheckBox();
        jcbEngTorque = new javax.swing.JCheckBox();
        jPanWheel = new javax.swing.JPanel();
        jcbWheelPower = new javax.swing.JCheckBox();
        jcbWheelTorque = new javax.swing.JCheckBox();
        jPanEnv = new javax.swing.JPanel();
        jcbEnvTemp = new javax.swing.JCheckBox();
        jcbEnvPress = new javax.swing.JCheckBox();
        jcbEnvAlt = new javax.swing.JCheckBox();
        jcbEngTemp = new javax.swing.JCheckBox();
        jcbFumeTemp = new javax.swing.JCheckBox();
        jPanMax = new javax.swing.JPanel();
        jcbMaxPower = new javax.swing.JCheckBox();
        jcbMaxVelocity = new javax.swing.JCheckBox();
        jcbMaxTorque = new javax.swing.JCheckBox();
        jPanButtons = new javax.swing.JPanel();
        jbutOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(java.awt.Color.white);

        jPanMain.setBackground(new java.awt.Color(255, 255, 255));
        jPanMain.setLayout(new java.awt.GridBagLayout());

        jPanRpm.setBackground(new java.awt.Color(255, 255, 255));
        jPanRpm.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Drehzahl", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), java.awt.Color.red)); // NOI18N
        jPanRpm.setLayout(new java.awt.GridBagLayout());

        jbgRpm.add(jrbEngRpm);
        jrbEngRpm.setText("Motordrehzahl");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanRpm.add(jrbEngRpm, gridBagConstraints);

        jbgRpm.add(jrbWheelRpm);
        jrbWheelRpm.setText("Hinterraddrehzahl");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanRpm.add(jrbWheelRpm, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanMain.add(jPanRpm, gridBagConstraints);

        jPanEng.setBackground(new java.awt.Color(255, 255, 255));
        jPanEng.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Motorwerte", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), java.awt.Color.red)); // NOI18N
        jPanEng.setLayout(new java.awt.GridBagLayout());

        jcbEngPower.setText("Motorleistung");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanEng.add(jcbEngPower, gridBagConstraints);

        jcbEngTorque.setText("Motormoment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanEng.add(jcbEngTorque, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanMain.add(jPanEng, gridBagConstraints);

        jPanWheel.setBackground(new java.awt.Color(255, 255, 255));
        jPanWheel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hinterradwerte", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), java.awt.Color.red)); // NOI18N
        jPanWheel.setLayout(new java.awt.GridBagLayout());

        jcbWheelPower.setText("Schleppleistung");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanWheel.add(jcbWheelPower, gridBagConstraints);

        jcbWheelTorque.setText("Schleppmoment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanWheel.add(jcbWheelTorque, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanMain.add(jPanWheel, gridBagConstraints);

        jPanEnv.setBackground(new java.awt.Color(255, 255, 255));
        jPanEnv.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sensorwerte", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), java.awt.Color.red)); // NOI18N
        jPanEnv.setLayout(new java.awt.GridBagLayout());

        jcbEnvTemp.setText("Umgebungstemperatur");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanEnv.add(jcbEnvTemp, gridBagConstraints);

        jcbEnvPress.setText("Luftdruck");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanEnv.add(jcbEnvPress, gridBagConstraints);

        jcbEnvAlt.setText("Seehöhe");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanEnv.add(jcbEnvAlt, gridBagConstraints);

        jcbEngTemp.setText("Motortemperatur");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanEnv.add(jcbEngTemp, gridBagConstraints);

        jcbFumeTemp.setText("Abgastemperatur");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanEnv.add(jcbFumeTemp, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.weightx = 1.0;
        jPanMain.add(jPanEnv, gridBagConstraints);

        jPanMax.setBackground(new java.awt.Color(255, 255, 255));
        jPanMax.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Maximal-Werte", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), java.awt.Color.red)); // NOI18N
        jPanMax.setLayout(new java.awt.GridBagLayout());

        jcbMaxPower.setText("Leistung");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanMax.add(jcbMaxPower, gridBagConstraints);

        jcbMaxVelocity.setText("Geschwindigkeit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanMax.add(jcbMaxVelocity, gridBagConstraints);

        jcbMaxTorque.setText("Moment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanMax.add(jcbMaxTorque, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanMain.add(jPanMax, gridBagConstraints);

        getContentPane().add(jPanMain, java.awt.BorderLayout.CENTER);

        jPanButtons.setBackground(new java.awt.Color(255, 255, 255));
        jPanButtons.setEnabled(false);

        jbutOk.setText("OK");
        jbutOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onOK(evt);
            }
        });
        jPanButtons.add(jbutOk);

        getContentPane().add(jPanButtons, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onOK(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onOK
        diagram.setEngPower(jcbEngPower.isSelected());
        diagram.setEngRpm(jrbEngRpm.isSelected());
        diagram.setEngTemp(jcbEngTemp.isSelected());
        diagram.setEngTorque(jcbEngTorque.isSelected());
        diagram.setEnvAlt(jcbEnvAlt.isSelected());
        diagram.setEnvPress(jcbEnvPress.isSelected());
        diagram.setEnvTemp(jcbEnvTemp.isSelected());
        diagram.setFumeTemp(jcbFumeTemp.isSelected());
        diagram.setMaxPower(jcbMaxPower.isSelected());
        diagram.setMaxTorque(jcbMaxTorque.isSelected());
        diagram.setMaxVelocity(jcbMaxVelocity.isSelected());
        diagram.setWheelPower(jcbWheelPower.isSelected());
        diagram.setWheelTorque(jcbWheelTorque.isSelected());
        LOG.info("Diagram-params set");
        dispose();
    }//GEN-LAST:event_onOK

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the MAC OS X look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (System.getProperty("os.name").contains("Mac OS X")) {
                    if ("MAC OS X".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                } else {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiagramSetDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiagramSetDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiagramSetDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiagramSetDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            DiagramSetDialog dialog = new DiagramSetDialog(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanButtons;
    private javax.swing.JPanel jPanEng;
    private javax.swing.JPanel jPanEnv;
    private javax.swing.JPanel jPanMain;
    private javax.swing.JPanel jPanMax;
    private javax.swing.JPanel jPanRpm;
    private javax.swing.JPanel jPanWheel;
    private javax.swing.ButtonGroup jbgRpm;
    private javax.swing.JButton jbutOk;
    private javax.swing.JCheckBox jcbEngPower;
    private javax.swing.JCheckBox jcbEngTemp;
    private javax.swing.JCheckBox jcbEngTorque;
    private javax.swing.JCheckBox jcbEnvAlt;
    private javax.swing.JCheckBox jcbEnvPress;
    private javax.swing.JCheckBox jcbEnvTemp;
    private javax.swing.JCheckBox jcbFumeTemp;
    private javax.swing.JCheckBox jcbMaxPower;
    private javax.swing.JCheckBox jcbMaxTorque;
    private javax.swing.JCheckBox jcbMaxVelocity;
    private javax.swing.JCheckBox jcbWheelPower;
    private javax.swing.JCheckBox jcbWheelTorque;
    private javax.swing.JRadioButton jrbEngRpm;
    private javax.swing.JRadioButton jrbWheelRpm;
    // End of variables declaration//GEN-END:variables
}
