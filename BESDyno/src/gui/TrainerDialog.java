package gui;

import data.Config;
import eu.hansolo.steelseries.extras.Clock;
import eu.hansolo.steelseries.gauges.DisplayRectangular;
import eu.hansolo.steelseries.gauges.Lcd;
import eu.hansolo.steelseries.gauges.Radial;
import eu.hansolo.steelseries.tools.ColorDef;
import eu.hansolo.steelseries.tools.FrameDesign;
import eu.hansolo.steelseries.tools.KnobStyle;
import eu.hansolo.steelseries.tools.KnobType;
import eu.hansolo.steelseries.tools.ThresholdType;
import eu.hansolo.steelseries.tools.TicklabelOrientation;
import eu.hansolo.steelseries.tools.TickmarkType;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;

/**
 *
 * @author emil
 */
public class TrainerDialog extends javax.swing.JDialog {
    
    private final Radial veloGauge = new Radial();
    private final DisplayRectangular kilometers = new DisplayRectangular();
    private final Clock clock = new Clock();
    

    /**
     * Creates new form TrainerDialog
     */
    public TrainerDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("BESTrainer - Home-Trainer");
        setSize(new Dimension(750, 500));
        
        switch (Config.getInstance().getVelocity()) {
            case MIH: 
                initGauge("mi/h", 30);
                initDisplay("Meilen");
                break;
            case MPS: 
                initGauge("m/s", 15); 
                initDisplay("Kilometer");
                break;
            case KMH: 
                initGauge("km/h", 50); 
                initDisplay("Kilometer");
                break;
        }
        initClock();
    }
    
    private void initDisplay(String unit) {
        kilometers.setUnitString(unit);
        kilometers.setTitle("Gefahrene Strecke");
        kilometers.setFrameDesign(FrameDesign.BLACK_METAL);
        jPanKilometers.setSize(new Dimension(250, 250));
        jPanKilometers.add(kilometers, BorderLayout.CENTER);
    }
    
    private void initClock() {
        clock.setAutomatic(true);
        clock.init(500, 500);
        clock.setSecondMovesContinuous(true);
        clock.setFrameDesign(FrameDesign.BLACK_METAL);
        jPanClock.setSize(new Dimension(250, 250));
        jPanClock.add(clock, BorderLayout.CENTER);
    }
    
    private void initGauge(String unit, int maxValue) {
        veloGauge.setTitle("Velocity");
        veloGauge.setUnitString(unit);

        //veloGauge.setArea3DEffectVisible(true);
        if (Config.getInstance().isDark()) {
            veloGauge.setFrameDesign(FrameDesign.CHROME);
        } else {
            veloGauge.setFrameDesign(FrameDesign.BLACK_METAL);
        }

        veloGauge.setNiceScale(true);
        veloGauge.setLedVisible(false);

        veloGauge.setGlowing(true);
        veloGauge.setGlowColor(Color.ORANGE);
        veloGauge.setGlowVisible(true);

        veloGauge.setKnobStyle(KnobStyle.SILVER);
        veloGauge.setKnobType(KnobType.METAL_KNOB);

        veloGauge.setMaxValue(maxValue);
        veloGauge.setMajorTickSpacing(10);
        veloGauge.setMinorTickSpacing(1);
        veloGauge.setMajorTickmarkType(TickmarkType.TRIANGLE);
        veloGauge.setTickmarkColor(Color.RED);
        veloGauge.setTicklabelOrientation(TicklabelOrientation.HORIZONTAL);
        veloGauge.setLabelNumberFormat(eu.hansolo.steelseries.tools.NumberFormat.STANDARD);
        veloGauge.setLabelColor(Color.RED);
        veloGauge.setMaxMeasuredValueVisible(true);

        jPanVelocity.setSize(new Dimension(500, 500));
        jPanVelocity.add(veloGauge, BorderLayout.CENTER);
    }
    
    public void setAppearance(boolean dark) {
        if (dark) {
            jPanButtons.setBackground(Color.DARK_GRAY);
            jPanDistance.setBackground(Color.DARK_GRAY);
            jPanGauges.setBackground(Color.DARK_GRAY);
            jPanVelocity.setBackground(Color.DARK_GRAY);
            jPanClock.setBackground(Color.DARK_GRAY);
            jPanKilometers.setBackground(Color.DARK_GRAY);
        } else {
            jPanButtons.setBackground(Color.WHITE);
            jPanDistance.setBackground(Color.WHITE);
            jPanGauges.setBackground(Color.WHITE);
            jPanVelocity.setBackground(Color.WHITE);
            jPanClock.setBackground(Color.WHITE);
            jPanKilometers.setBackground(Color.WHITE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanButtons = new javax.swing.JPanel();
        jbutOK = new javax.swing.JButton();
        jPanGauges = new javax.swing.JPanel();
        jPanVelocity = new javax.swing.JPanel();
        jPanDistance = new javax.swing.JPanel();
        jPanClock = new javax.swing.JPanel();
        jPanKilometers = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanButtons.setBackground(new java.awt.Color(255, 255, 255));

        jbutOK.setText("Fertigstellen");
        jbutOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutOKActionPerformed(evt);
            }
        });
        jPanButtons.add(jbutOK);

        getContentPane().add(jPanButtons, java.awt.BorderLayout.SOUTH);

        jPanGauges.setLayout(new java.awt.GridLayout());

        jPanVelocity.setBackground(new java.awt.Color(255, 255, 255));
        jPanVelocity.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5), javax.swing.BorderFactory.createTitledBorder(null, "Geschwindigkeit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), java.awt.Color.red))); // NOI18N
        jPanVelocity.setLayout(new java.awt.BorderLayout());
        jPanGauges.add(jPanVelocity);

        jPanDistance.setBackground(new java.awt.Color(255, 255, 255));
        jPanDistance.setLayout(new java.awt.GridLayout(2, 1));

        jPanClock.setBackground(new java.awt.Color(255, 255, 255));
        jPanClock.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5), javax.swing.BorderFactory.createTitledBorder(null, "Uhrzeit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), java.awt.Color.red))); // NOI18N
        jPanClock.setLayout(new java.awt.BorderLayout());
        jPanDistance.add(jPanClock);

        jPanKilometers.setBackground(new java.awt.Color(255, 255, 255));
        jPanKilometers.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5), javax.swing.BorderFactory.createTitledBorder(null, "Gefahrene Strecke", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), java.awt.Color.red))); // NOI18N
        jPanKilometers.setLayout(new java.awt.BorderLayout());
        jPanDistance.add(jPanKilometers);

        jPanGauges.add(jPanDistance);

        getContentPane().add(jPanGauges, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbutOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutOKActionPerformed
        dispose();
    }//GEN-LAST:event_jbutOKActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (System.getProperty("os.name").contains("Mac OS X")) {
                    if ("MAC OS X".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                } else if (System.getProperty("os.name").startsWith("Windows ")) {
                    if ("com.sun.java.swing.plaf.windows.WindowsLookAndFeel".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                } else if (System.getProperty("os.name").startsWith("Linux")) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                } else {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrainerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrainerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrainerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrainerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            TrainerDialog dialog = new TrainerDialog(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanButtons;
    private javax.swing.JPanel jPanClock;
    private javax.swing.JPanel jPanDistance;
    private javax.swing.JPanel jPanGauges;
    private javax.swing.JPanel jPanKilometers;
    private javax.swing.JPanel jPanVelocity;
    private javax.swing.JButton jbutOK;
    // End of variables declaration//GEN-END:variables

}
