   1               		.file	"sys.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 139               	.global	sys_uart_getch
 141               	sys_uart_getch:
   1:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #include "global.h"
   2:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
   3:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #include <stdio.h>
   4:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #include <string.h>
   5:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #include <ctype.h>
   6:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #include <stdlib.h>
   7:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
   8:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #include <avr/io.h>
   9:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #include <avr/interrupt.h>
  10:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #include <avr/wdt.h>
  11:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #include <util/delay.h>
  12:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #include <avr/pgmspace.h>
  13:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #include <avr/eeprom.h>
  14:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
  15:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #include "sys.h"
  16:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #include "app.h"
  17:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #include "mon.h"
  18:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
  19:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** // defines
  20:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
  21:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef __AVR_ATmega16__
  22:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_UART_BYTE_RECEIVED (UCSRA & (1<<RXC))
  23:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_UART_UDR_IS_EMPTY (UCSRA & (1<<UDRE))
  24:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_UDR UDR
  25:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_UART_RECEIVE_VECTOR USART_RXC_vect
  26:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_TIMER0_VECTOR TIMER0_COMP_vect
  27:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #elif __AVR_ATmega324P__
  28:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_UART_BYTE_RECEIVED (UCSR0A & (1<<RXC0))
  29:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_UART_UDR_IS_EMPTY (UCSR0A & (1<<UDRE0))
  30:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_UDR UDR0
  31:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_UART_RECEIVE_VECTOR USART0_RX_vect
  32:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_TIMER0_VECTOR TIMER0_COMPA_vect
  33:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #elif __AVR_ATmega328P__
  34:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_UART_BYTE_RECEIVED (UCSR0A & (1<<RXC0))
  35:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_UART_UDR_IS_EMPTY (UCSR0A & (1<<UDRE0))
  36:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_UDR UDR0
  37:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_UART_RECEIVE_VECTOR USART_RX_vect
  38:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_TIMER0_VECTOR TIMER0_COMPA_vect
  39:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #elif __AVR_AT90CAN128__
  40:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_UART_BYTE_RECEIVED (UCSR0A & (1<<RXC0))
  41:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_UART_UDR_IS_EMPTY (UCSR0A & (1<<UDRE0))
  42:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_UDR UDR0
  43:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_UART_RECEIVE_VECTOR USART0_RX_vect
  44:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_TIMER0_VECTOR TIMER0_COMP_vect
  45:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
  46:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif
  47:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
  48:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_MONITOR
  49:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
  50:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_MONITOR_FLAG_LINEMODE 0x01
  51:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_MONITOR_FLAG_LINE     0x02
  52:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_MONITOR_FLAG_CONT     0x04
  53:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
  54:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_MONITOR_CTRL_C        0x03
  55:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_MONITOR_CTRL_X        0x18
  56:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #define SYS_MONITOR_CTRL_Y        0x19
  57:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
  58:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** struct Sys_Monitor
  59:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
  60:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint8_t flags;
  61:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint8_t lineIndex;
  62:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint8_t cursorPos;
  63:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     char cmdLine[40];
  64:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** };
  65:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** volatile struct Sys_Monitor sys_mon;
  66:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
  67:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void   sys_mon_main (void);
  68:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** int8_t sys_cmd_help (uint8_t argc, char *argv[]);
  69:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** int8_t sys_cmd_sinfo (uint8_t argc, char *argv[]);
  70:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** int8_t sys_cmd_hexdump (uint8_t argc, char *argv[]);
  71:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** int8_t sys_cmd_setmem (uint8_t argc, char *argv[]);
  72:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
  73:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** // globale Konstante im Flash
  74:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** const char SYS_PMEM_LINESTART[] PROGMEM = "\n\r>";
  75:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** const char SYS_PMEM_ERR0[] PROGMEM = "Error ";
  76:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** const char SYS_PMEM_ERR1[] PROGMEM = "Error: Unknown command\n\r";
  77:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** const char SYS_PMEM_ERR2[] PROGMEM = " -> Syntax error\n\rUsage: ";
  78:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** const char SYS_PMEM_CMD_HELP[] PROGMEM = "help\0List of all commands\0help";
  79:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** const char SYS_PMEM_CMD_SINFO[] PROGMEM = "sinfo\0Systeminformation\0sinfo";
  80:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_MONCMD_HEXDUMP
  81:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** const char SYS_PMEM_CMD_HEXDUMP[] PROGMEM = "hexdump\0Hexdump of memory content\0hexdump {f|s|e} st
  82:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif // GLOBAL_MONCMD_HEXDUMP
  83:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_MONCMD_SETMEM
  84:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** const char SYS_PMEM_CMD_SETMEM[] PROGMEM = "setmem\0Write bytes into SRAM/EEPROM\0setmem [s|e] addr
  85:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif // GLOBAL_MONCMD_SETMEM
  86:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
  87:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** const struct Sys_MonCmdInfo SYS_PMEMSTR_CMDS[] PROGMEM =
  88:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
  89:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     { SYS_PMEM_CMD_HELP, sys_cmd_help }
  90:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     , { SYS_PMEM_CMD_SINFO, sys_cmd_sinfo }
  91:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_MONCMD_HEXDUMP
  92:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     , { SYS_PMEM_CMD_HEXDUMP, sys_cmd_hexdump }
  93:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif // GLOBAL_MONCMD_HEXDUMP
  94:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_MONCMD_SETMEM
  95:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     , { SYS_PMEM_CMD_SETMEM, sys_cmd_setmem }
  96:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif // GLOBAL_MONCMD_SETMEM
  97:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** };
  98:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
  99:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif // GLOBAL_MONITOR
 100:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 101:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** /// declarations and definations
 102:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 103:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** volatile struct Sys sys;
 104:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 105:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** // // functions
 106:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** int sys_uart_putch (char c, FILE *f);
 107:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** int sys_uart_getch (FILE *f);
 108:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 109:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** static FILE mystdout = FDEV_SETUP_STREAM(sys_uart_putch, NULL, _FDEV_SETUP_WRITE);
 110:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** static FILE mystdin  = FDEV_SETUP_STREAM(NULL, sys_uart_getch, _FDEV_SETUP_READ);
 111:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 112:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_init (void)
 113:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 114:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     memset((void *)&sys, 0, sizeof(sys));
 115:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     _delay_ms(150);
 116:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 117:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef __AVR_ATmega16__
 118:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     OCR0  = (F_CPU+4)/8/10000-1;
 119:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TCCR0 = (1 << WGM01) | (1 << CS01);
 120:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TIMSK = (1 << OCIE0);
 121:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TIFR  = (1 << OCF0);
 122:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UBRRL = (F_CPU+8)/16/GLOBAL_UART_BITRATE-1;
 123:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UBRRH = 0x00;
 124:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UCSRA = 0x00;
 125:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UCSRC = (1<<URSEL) | (1 << UCSZ1) | (1 << UCSZ0);
 126:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UCSRB = (1 << RXCIE) | (1 << TXEN) | (1 << RXEN);
 127:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 128:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #elif __AVR_ATmega324P__
 129:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     OCR0A  = (F_CPU+4)/8/10000-1;
 130:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TCCR0A = (1 << WGM01);
 131:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TCCR0A = (1 << CS01);
 132:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TIMSK0 = (1 << OCIE0A);
 133:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TIFR0  = (1 << OCF0A);
 134:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UBRR0L = (F_CPU/GLOBAL_UART_BITRATE + 4)/8 - 1;
 135:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UBRR0H = 0x00;
 136:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UCSR0A = (1<<U2X0);
 137:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
 138:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UCSR0B = (1 << RXCIE0) | (1 << TXEN0) | (1 << RXEN0);
 139:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 140:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #elif __AVR_ATmega328P__
 141:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     OCR0A  = (F_CPU+4)/8/10000-1;
 142:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TCCR0A = (1 << WGM01);
 143:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TCCR0B = (1 << CS01);
 144:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TIMSK0 = (1 << OCIE0A);
 145:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TIFR0  = (1 << OCF0A);
 146:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UBRR0L = (F_CPU/GLOBAL_UART_BITRATE + 4)/8 - 1;
 147:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UBRR0H = 0x00;
 148:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UCSR0A = (1<<U2X0);
 149:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
 150:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UCSR0B = (1 << RXCIE0) | (1 << TXEN0) | (1 << RXEN0);
 151:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 152:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #elif __AVR_AT90CAN128__
 153:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     OCR0A  = (F_CPU+4)/8/10000-1;
 154:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TCCR0A = (1 << WGM01);
 155:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TCCR0A = (1 << CS01);
 156:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TIMSK0 = (1 << OCIE0A);
 157:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TIFR0  = (1 << OCF0A);
 158:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UBRR0L = (F_CPU/GLOBAL_UART_BITRATE + 4)/8 - 1;
 159:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UBRR0H = 0x00;
 160:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UCSR0A = (1<<U2X0);
 161:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
 162:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UCSR0B = (1 << RXCIE0) | (1 << TXEN0) | (1 << RXEN0);
 163:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 164:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif
 165:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 166:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef SURE
 167:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTA  =  0x0f;  // all LEDs off
 168:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     DDRA   =  0x0f;  // LEDs (PA3:0)
 169:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     DDRC  &= ~0xc0;  // Push Buttons SW1 (PC7) and SW2 (PC6)
 170:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #elif ARDUINO
 171:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     DDRB  = (1<< PB5); // LED L (yellow on pin PB5/SCK))
 172:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTB = 0x00;
 173:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #elif CRUMB128
 174:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     DDRB  = (1<< PB7); // LED1 (green on pin PB7))
 175:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTB = 0x00;
 176:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #elif ASURO
 177:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTB &= ~0x01; // green LED off
 178:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     DDRB |= 0x01;   // green LED port (PB0) is output
 179:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTD &= ~0x04; // red LED off
 180:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     DDRD |= 0x04;   // red LED port (PD2) is output
 181:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif
 182:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 183:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_SURE_LCD
 184:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTB  =    0x00;   // LCD-DATA
 185:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTD  &= ~(0x1c);  // LCD E, R/W, RS
 186:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     DDRB   =    0xff;   // LCD-Data
 187:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     DDRD   |=  (0x1c);  // LCD-Data
 188:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_init();
 189:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif
 190:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef  GLOBAL_SURE_SEG7
 191:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTA  =  0x0f;  // all LEDs off
 192:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     DDRA   =  0xff;  // LEDs (PA3:0) and 7-Seg common cathode (PA7:0)
 193:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTB  =  0x00;  // all 7-Seg anodes off
 194:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     DDRB   =  0xff;  // 7-Seg anodes
 195:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif
 196:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 197:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     // connect libc functions printf(), gets()... to UART
 198:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     // fdevopen(sys_uart_putch, sys_uart_getch);
 199:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     stdout = &mystdout;
 200:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     stdin  = &mystdin;
 201:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 202:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 203:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 204:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_main (void)
 205:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 206:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_MONITOR
 207:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_mon_main();
 208:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif
 209:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 210:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 211:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** //----------------------------------------------------------------------------
 212:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 213:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** uint8_t sys_inc8BitCnt (uint8_t count)
 214:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 215:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return count<0xff ? count+1 : count;
 216:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 217:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 218:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 219:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** uint16_t sys_inc16BitCnt (uint16_t count)
 220:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 221:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return count<0xffff ? count+1 : count;
 222:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 223:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 224:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 225:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_sei (void)
 226:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 227:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.flags_u8 & SYS_FLAG_SREG_I)
 228:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sei();
 229:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 230:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 231:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 232:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_cli (void)
 233:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 234:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys.flags_u8 |= (SREG & 0x80);
 235:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     cli();
 236:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 237:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 238:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 239:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_newline (void)
 240:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 241:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     printf("\n\r");
 242:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 243:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 244:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 245:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_printString_P (PGM_P str)
 246:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 247:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     char c;
 248:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 249:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     while (1)
 250:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
 251:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         memcpy_P(&c, str++, 1);
 252:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (!c) break;
 253:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         putchar(c);
 254:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
 255:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 256:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 257:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 258:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_puts_P (PGM_P str)
 259:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 260:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_printString_P(str);
 261:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_newline();
 262:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 263:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 264:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_MONITOR
 265:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 266:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** int16_t sys_getByte (char typ, uint16_t add)
 267:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 268:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint8_t value = 0;
 269:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 270:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     switch (typ)
 271:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
 272:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         case 'f': // flash
 273:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (add>FLASHEND) return -1;
 274:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             memcpy_P(&value, (PGM_P) add, 1);
 275:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             break;
 276:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             
 277:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         case 's': // SRAM
 278:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (add>RAMEND ) return -1;
 279:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             value = *((uint8_t *)add);
 280:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             break;
 281:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             
 282:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         case 'e': // EEPROM
 283:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (add>E2END) return -1;
 284:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             //value = eeprom_read_byte ((uint8_t *)add);
 285:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             break;
 286:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             
 287:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         default:
 288:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             return -1;
 289:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
 290:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 291:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return value;
 292:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 293:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 294:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 295:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_printBin (uint8_t value, char sep)
 296:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 297:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint8_t i;
 298:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 299:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     for (i=0; i<8; i++,value<<=1)
 300:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
 301:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         putchar(value&0x80 ? '1' : '0');
 302:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (i==3 && sep) putchar(sep);
 303:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
 304:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 305:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 306:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 307:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_printHexBin8 (uint8_t value)
 308:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 309:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     printf("0x%02x (", value);
 310:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_printBin(value, ' ');
 311:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     putchar(')');
 312:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 313:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 314:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 315:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_printHexBin16 (uint16_t value)
 316:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 317:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     printf("0x%04x (", value);
 318:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_printBin(value>>8, ' ');
 319:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     putchar(' ');
 320:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_printBin(value & 0xff, ' ');
 321:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     putchar(')');
 322:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 323:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 324:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 325:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** int8_t sys_cmd_sinfo (uint8_t argc, char *argv[])
 326:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 327:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     printf("sys.flags_u8  : ");
 328:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_printHexBin8(sys.flags_u8);
 329:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_newline();
 330:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     printf("sys.taskErr_u8: ");
 331:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_printHexBin8(sys.taskErr_u8);
 332:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_newline();
 333:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return 0;
 334:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 335:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 336:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 337:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** int16_t sys_readArgument (char *str, int16_t max)
 338:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 339:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     int16_t value;
 340:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 341:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (str[0]=='0' && str[1]=='x')
 342:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         value = strtol(str, NULL, 16);
 343:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     else
 344:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         value = strtol(str, NULL, 10);
 345:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 346:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (value>max)
 347:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         return -1;
 348:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 349:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return value;
 350:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 351:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 352:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif
 353:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 354:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** //----------------------------------------------------------------------------
 355:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 356:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** int sys_uart_getch (FILE *f)
 357:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 143               	.LM0:
 144               	.LFBB1:
 145               	/* prologue: function */
 146               	/* frame size = 0 */
 147               	/* stack size = 0 */
 148               	.L__stack_usage = 0
 358:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (f != stdin)
 150               	.LM1:
 151 0000 2091 0000 		lds r18,__iob
 152 0004 3091 0000 		lds r19,__iob+1
 153 0008 2817      		cp r18,r24
 154 000a 3907      		cpc r19,r25
 155 000c 01F4      		brne .L5
 359:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         return _FDEV_EOF;
 360:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.uart.wpos_u8 == sys.uart.rpos_u8) return _FDEV_EOF;
 157               	.LM2:
 158 000e 9091 0000 		lds r25,sys+4
 159 0012 8091 0000 		lds r24,sys+3
 160 0016 9817      		cp r25,r24
 161 0018 01F0      		breq .L5
 361:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint8_t c = sys.uart.rbuffer_u8[sys.uart.rpos_u8++];
 163               	.LM3:
 164 001a E091 0000 		lds r30,sys+3
 165 001e 81E0      		ldi r24,lo8(1)
 166 0020 8E0F      		add r24,r30
 167 0022 8093 0000 		sts sys+3,r24
 168 0026 F0E0      		ldi r31,0
 169 0028 E050      		subi r30,lo8(-(sys))
 170 002a F040      		sbci r31,hi8(-(sys))
 171 002c 8681      		ldd r24,Z+6
 362:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.uart.rpos_u8>=GLOBAL_UART_RECBUFSIZE)
 173               	.LM4:
 174 002e 9091 0000 		lds r25,sys+3
 175 0032 9031      		cpi r25,lo8(16)
 176 0034 00F0      		brlo .L3
 363:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys.uart.rpos_u8 = 0;
 178               	.LM5:
 179 0036 1092 0000 		sts sys+3,__zero_reg__
 180               	.L3:
 364:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return (int) c;
 182               	.LM6:
 183 003a 90E0      		ldi r25,0
 184 003c 0895      		ret
 185               	.L5:
 359:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         return _FDEV_EOF;
 187               	.LM7:
 188 003e 8EEF      		ldi r24,lo8(-2)
 189 0040 9FEF      		ldi r25,lo8(-1)
 365:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 191               	.LM8:
 192 0042 0895      		ret
 197               	.Lscope1:
 201               	.global	sys_uart_putch
 203               	sys_uart_putch:
 366:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 367:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 368:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** int sys_uart_putch (char c, FILE *f)
 369:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 205               	.LM9:
 206               	.LFBB2:
 207               	/* prologue: function */
 208               	/* frame size = 0 */
 209               	/* stack size = 0 */
 210               	.L__stack_usage = 0
 370:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (f != stdout)
 212               	.LM10:
 213 0044 2091 0000 		lds r18,__iob+2
 214 0048 3091 0000 		lds r19,__iob+2+1
 215 004c 6217      		cp r22,r18
 216 004e 7307      		cpc r23,r19
 217 0050 01F4      		brne .L11
 218               	.L10:
 371:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         return _FDEV_EOF;
 372:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     while (!SYS_UART_UDR_IS_EMPTY);
 220               	.LM11:
 221 0052 9091 C000 		lds r25,192
 222 0056 95FF      		sbrs r25,5
 223 0058 00C0      		rjmp .L10
 373:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     SYS_UDR = c;
 225               	.LM12:
 226 005a 8093 C600 		sts 198,r24
 374:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return (int)c;
 228               	.LM13:
 229 005e 90E0      		ldi r25,0
 230 0060 0895      		ret
 231               	.L11:
 371:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         return _FDEV_EOF;
 233               	.LM14:
 234 0062 8EEF      		ldi r24,lo8(-2)
 235 0064 9FEF      		ldi r25,lo8(-1)
 375:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 237               	.LM15:
 238 0066 0895      		ret
 240               	.Lscope2:
 242               	.global	sys_init
 244               	sys_init:
 113:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 246               	.LM16:
 247               	.LFBB3:
 248               	/* prologue: function */
 249               	/* frame size = 0 */
 250               	/* stack size = 0 */
 251               	.L__stack_usage = 0
 114:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     memset((void *)&sys, 0, sizeof(sys));
 253               	.LM17:
 254 0068 86E1      		ldi r24,lo8(22)
 255 006a E0E0      		ldi r30,lo8(sys)
 256 006c F0E0      		ldi r31,hi8(sys)
 257 006e DF01      		movw r26,r30
 258               		0:
 259 0070 1D92      		st X+,__zero_reg__
 260 0072 8A95      		dec r24
 261 0074 01F4      		brne 0b
 262               	.LBB16:
 263               	.LBB17:
 265               	.Ltext1:
   1:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   6:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   9:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  12:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      distribution.
  16:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  17:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  21:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  33:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  35:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  38:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  41:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  42:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  46:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \file */
  47:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \code
  49:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \endcode
  53:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  54:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     used.
  58:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  59:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  68:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  77:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  81:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** */
  82:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  83:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  87:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  88:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  93:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  94:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  97:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  98:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 103:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 104:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 105:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 107:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 109:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 112:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 114:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 120:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 125:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 129:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 132:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 140:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 141:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 142:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 144:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 152:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 155:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 158:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 159:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 162:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 163:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 267               	.LM18:
 268 0076 BFEF      		ldi r27,lo8(479999)
 269 0078 22E5      		ldi r18,hi8(479999)
 270 007a 87E0      		ldi r24,hlo8(479999)
 271 007c B150      		1: subi r27,1
 272 007e 2040      		sbci r18,0
 273 0080 8040      		sbci r24,0
 274 0082 01F4      		brne 1b
 275 0084 00C0      		rjmp .
 276 0086 0000      		nop
 277               	.LBE17:
 278               	.LBE16:
 280               	.Ltext2:
 141:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     OCR0A  = (F_CPU+4)/8/10000-1;
 282               	.LM19:
 283 0088 87EC      		ldi r24,lo8(-57)
 284 008a 87BD      		out 0x27,r24
 142:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TCCR0A = (1 << WGM01);
 286               	.LM20:
 287 008c 82E0      		ldi r24,lo8(2)
 288 008e 84BD      		out 0x24,r24
 143:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TCCR0B = (1 << CS01);
 290               	.LM21:
 291 0090 85BD      		out 0x25,r24
 144:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TIMSK0 = (1 << OCIE0A);
 293               	.LM22:
 294 0092 8093 6E00 		sts 110,r24
 145:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     TIFR0  = (1 << OCF0A);
 296               	.LM23:
 297 0096 85BB      		out 0x15,r24
 146:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UBRR0L = (F_CPU/GLOBAL_UART_BITRATE + 4)/8 - 1;
 299               	.LM24:
 300 0098 92E2      		ldi r25,lo8(34)
 301 009a 9093 C400 		sts 196,r25
 147:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UBRR0H = 0x00;
 303               	.LM25:
 304 009e 1092 C500 		sts 197,__zero_reg__
 148:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UCSR0A = (1<<U2X0);
 306               	.LM26:
 307 00a2 8093 C000 		sts 192,r24
 149:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
 309               	.LM27:
 310 00a6 86E0      		ldi r24,lo8(6)
 311 00a8 8093 C200 		sts 194,r24
 150:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     UCSR0B = (1 << RXCIE0) | (1 << TXEN0) | (1 << RXEN0);
 313               	.LM28:
 314 00ac 88E9      		ldi r24,lo8(-104)
 315 00ae 8093 C100 		sts 193,r24
 171:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     DDRB  = (1<< PB5); // LED L (yellow on pin PB5/SCK))
 317               	.LM29:
 318 00b2 80E2      		ldi r24,lo8(32)
 319 00b4 84B9      		out 0x4,r24
 172:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTB = 0x00;
 321               	.LM30:
 322 00b6 15B8      		out 0x5,__zero_reg__
 199:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     stdout = &mystdout;
 324               	.LM31:
 325 00b8 80E0      		ldi r24,lo8(mystdout)
 326 00ba 90E0      		ldi r25,hi8(mystdout)
 327 00bc 9093 0000 		sts __iob+2+1,r25
 328 00c0 8093 0000 		sts __iob+2,r24
 200:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     stdin  = &mystdin;
 330               	.LM32:
 331 00c4 80E0      		ldi r24,lo8(mystdin)
 332 00c6 90E0      		ldi r25,hi8(mystdin)
 333 00c8 9093 0000 		sts __iob+1,r25
 334 00cc 8093 0000 		sts __iob,r24
 335 00d0 0895      		ret
 337               	.Lscope3:
 340               	.global	sys_inc8BitCnt
 342               	sys_inc8BitCnt:
 214:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 344               	.LM33:
 345               	.LFBB4:
 346               	/* prologue: function */
 347               	/* frame size = 0 */
 348               	/* stack size = 0 */
 349               	.L__stack_usage = 0
 215:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return count<0xff ? count+1 : count;
 351               	.LM34:
 352 00d2 8F3F      		cpi r24,lo8(-1)
 353 00d4 01F0      		breq .L15
 215:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return count<0xff ? count+1 : count;
 355               	.LM35:
 356 00d6 8F5F      		subi r24,lo8(-(1))
 357 00d8 0895      		ret
 358               	.L15:
 359 00da 8FEF      		ldi r24,lo8(-1)
 216:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 361               	.LM36:
 362 00dc 0895      		ret
 364               	.Lscope4:
 367               	.global	sys_inc16BitCnt
 369               	sys_inc16BitCnt:
 220:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 371               	.LM37:
 372               	.LFBB5:
 373               	/* prologue: function */
 374               	/* frame size = 0 */
 375               	/* stack size = 0 */
 376               	.L__stack_usage = 0
 221:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return count<0xffff ? count+1 : count;
 378               	.LM38:
 379 00de 8F3F      		cpi r24,-1
 380 00e0 2FEF      		ldi r18,-1
 381 00e2 9207      		cpc r25,r18
 382 00e4 01F0      		breq .L18
 221:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return count<0xffff ? count+1 : count;
 384               	.LM39:
 385 00e6 0196      		adiw r24,1
 386 00e8 0895      		ret
 387               	.L18:
 388 00ea 8FEF      		ldi r24,lo8(-1)
 389 00ec 9FEF      		ldi r25,lo8(-1)
 222:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 391               	.LM40:
 392 00ee 0895      		ret
 394               	.Lscope5:
 396               	.global	sys_sei
 398               	sys_sei:
 226:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 400               	.LM41:
 401               	.LFBB6:
 402               	/* prologue: function */
 403               	/* frame size = 0 */
 404               	/* stack size = 0 */
 405               	.L__stack_usage = 0
 227:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.flags_u8 & SYS_FLAG_SREG_I)
 407               	.LM42:
 408 00f0 8091 0000 		lds r24,sys
 409 00f4 87FF      		sbrs r24,7
 410 00f6 00C0      		rjmp .L19
 228:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sei();
 412               	.LM43:
 413               	/* #APP */
 414               	 ;  228 "/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweira
 415 00f8 7894      		sei
 416               	 ;  0 "" 2
 417               	/* #NOAPP */
 418               	.L19:
 419 00fa 0895      		ret
 421               	.Lscope6:
 423               	.global	sys_cli
 425               	sys_cli:
 233:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 427               	.LM44:
 428               	.LFBB7:
 429               	/* prologue: function */
 430               	/* frame size = 0 */
 431               	/* stack size = 0 */
 432               	.L__stack_usage = 0
 234:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys.flags_u8 |= (SREG & 0x80);
 434               	.LM45:
 435 00fc E0E0      		ldi r30,lo8(sys)
 436 00fe F0E0      		ldi r31,hi8(sys)
 437 0100 9081      		ld r25,Z
 438 0102 8FB7      		in r24,__SREG__
 439 0104 8078      		andi r24,lo8(-128)
 440 0106 892B      		or r24,r25
 441 0108 8083      		st Z,r24
 235:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     cli();
 443               	.LM46:
 444               	/* #APP */
 445               	 ;  235 "/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweira
 446 010a F894      		cli
 447               	 ;  0 "" 2
 448               	/* #NOAPP */
 449 010c 0895      		ret
 451               	.Lscope7:
 452               		.section	.rodata.str1.1,"aMS",@progbits,1
 453               	.LC0:
 454 0000 0A0D 00   		.string	"\n\r"
 455               		.text
 457               	.global	sys_newline
 459               	sys_newline:
 240:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 461               	.LM47:
 462               	.LFBB8:
 463               	/* prologue: function */
 464               	/* frame size = 0 */
 465               	/* stack size = 0 */
 466               	.L__stack_usage = 0
 241:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     printf("\n\r");
 468               	.LM48:
 469 010e 80E0      		ldi r24,lo8(.LC0)
 470 0110 90E0      		ldi r25,hi8(.LC0)
 471 0112 9F93      		push r25
 472 0114 8F93      		push r24
 473 0116 0E94 0000 		call printf
 474 011a 0F90      		pop __tmp_reg__
 475 011c 0F90      		pop __tmp_reg__
 476 011e 0895      		ret
 478               	.Lscope8:
 481               	.global	sys_printString_P
 483               	sys_printString_P:
 246:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 485               	.LM49:
 486               	.LFBB9:
 487 0120 0F93      		push r16
 488 0122 1F93      		push r17
 489 0124 CF93      		push r28
 490 0126 DF93      		push r29
 491 0128 1F92      		push __zero_reg__
 492 012a CDB7      		in r28,__SP_L__
 493 012c DEB7      		in r29,__SP_H__
 494               	/* prologue: function */
 495               	/* frame size = 1 */
 496               	/* stack size = 5 */
 497               	.L__stack_usage = 5
 498               	.L25:
 251:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         memcpy_P(&c, str++, 1);
 500               	.LM50:
 501 012e 8C01      		movw r16,r24
 502 0130 0F5F      		subi r16,-1
 503 0132 1F4F      		sbci r17,-1
 504 0134 41E0      		ldi r20,lo8(1)
 505 0136 50E0      		ldi r21,0
 506 0138 BC01      		movw r22,r24
 507 013a CE01      		movw r24,r28
 508 013c 0196      		adiw r24,1
 509 013e 0E94 0000 		call memcpy_P
 252:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (!c) break;
 511               	.LM51:
 512 0142 8981      		ldd r24,Y+1
 513 0144 8823      		tst r24
 514 0146 01F0      		breq .L23
 253:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         putchar(c);
 516               	.LM52:
 517 0148 6091 0000 		lds r22,__iob+2
 518 014c 7091 0000 		lds r23,__iob+2+1
 519 0150 90E0      		ldi r25,0
 520 0152 0E94 0000 		call fputc
 251:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         memcpy_P(&c, str++, 1);
 522               	.LM53:
 523 0156 C801      		movw r24,r16
 254:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
 525               	.LM54:
 526 0158 00C0      		rjmp .L25
 527               	.L23:
 528               	/* epilogue start */
 255:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 530               	.LM55:
 531 015a 0F90      		pop __tmp_reg__
 532 015c DF91      		pop r29
 533 015e CF91      		pop r28
 534 0160 1F91      		pop r17
 535 0162 0F91      		pop r16
 536 0164 0895      		ret
 541               	.Lscope9:
 544               	.global	sys_puts_P
 546               	sys_puts_P:
 259:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 548               	.LM56:
 549               	.LFBB10:
 550               	/* prologue: function */
 551               	/* frame size = 0 */
 552               	/* stack size = 0 */
 553               	.L__stack_usage = 0
 260:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_printString_P(str);
 555               	.LM57:
 556 0166 0E94 0000 		call sys_printString_P
 261:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_newline();
 558               	.LM58:
 559 016a 0C94 0000 		jmp sys_newline
 561               	.Lscope10:
 565               	.global	sys_getByte
 567               	sys_getByte:
 267:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 569               	.LM59:
 570               	.LFBB11:
 571 016e CF93      		push r28
 572 0170 DF93      		push r29
 573 0172 1F92      		push __zero_reg__
 574 0174 CDB7      		in r28,__SP_L__
 575 0176 DEB7      		in r29,__SP_H__
 576               	/* prologue: function */
 577               	/* frame size = 1 */
 578               	/* stack size = 3 */
 579               	.L__stack_usage = 3
 268:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint8_t value = 0;
 581               	.LM60:
 582 0178 1982      		std Y+1,__zero_reg__
 270:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     switch (typ)
 584               	.LM61:
 585 017a 8636      		cpi r24,lo8(102)
 586 017c 01F0      		breq .L29
 587 017e 8337      		cpi r24,lo8(115)
 588 0180 01F0      		breq .L30
 589 0182 8536      		cpi r24,lo8(101)
 590 0184 01F4      		brne .L36
 591 0186 00C0      		rjmp .L38
 592               	.L29:
 273:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (add>FLASHEND) return -1;
 594               	.LM62:
 595 0188 77FD      		sbrc r23,7
 596 018a 00C0      		rjmp .L36
 274:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             memcpy_P(&value, (PGM_P) add, 1);
 598               	.LM63:
 599 018c 41E0      		ldi r20,lo8(1)
 600 018e 50E0      		ldi r21,0
 601 0190 CE01      		movw r24,r28
 602 0192 0196      		adiw r24,1
 603 0194 0E94 0000 		call memcpy_P
 275:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             break;
 605               	.LM64:
 606 0198 00C0      		rjmp .L32
 607               	.L30:
 278:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (add>RAMEND ) return -1;
 609               	.LM65:
 610 019a 6115      		cp r22,__zero_reg__
 611 019c 89E0      		ldi r24,9
 612 019e 7807      		cpc r23,r24
 613 01a0 00F4      		brsh .L36
 279:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             value = *((uint8_t *)add);
 615               	.LM66:
 616 01a2 FB01      		movw r30,r22
 617 01a4 8081      		ld r24,Z
 618 01a6 8983      		std Y+1,r24
 280:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             break;
 620               	.LM67:
 621 01a8 00C0      		rjmp .L32
 622               	.L38:
 283:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (add>E2END) return -1;
 624               	.LM68:
 625 01aa 6115      		cp r22,__zero_reg__
 626 01ac 7440      		sbci r23,4
 627 01ae 00F4      		brsh .L36
 628               	.L32:
 291:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return value;
 630               	.LM69:
 631 01b0 8981      		ldd r24,Y+1
 632 01b2 90E0      		ldi r25,0
 633 01b4 00C0      		rjmp .L28
 634               	.L36:
 273:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (add>FLASHEND) return -1;
 636               	.LM70:
 637 01b6 8FEF      		ldi r24,lo8(-1)
 638 01b8 9FEF      		ldi r25,lo8(-1)
 639               	.L28:
 640               	/* epilogue start */
 292:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 642               	.LM71:
 643 01ba 0F90      		pop __tmp_reg__
 644 01bc DF91      		pop r29
 645 01be CF91      		pop r28
 646 01c0 0895      		ret
 651               	.Lscope11:
 655               	.global	sys_printBin
 657               	sys_printBin:
 296:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 659               	.LM72:
 660               	.LFBB12:
 661 01c2 DF92      		push r13
 662 01c4 EF92      		push r14
 663 01c6 FF92      		push r15
 664 01c8 0F93      		push r16
 665 01ca 1F93      		push r17
 666 01cc CF93      		push r28
 667 01ce DF93      		push r29
 668               	/* prologue: function */
 669               	/* frame size = 0 */
 670               	/* stack size = 7 */
 671               	.L__stack_usage = 7
 672 01d0 E82E      		mov r14,r24
 673 01d2 D62E      		mov r13,r22
 299:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     for (i=0; i<8; i++,value<<=1)
 675               	.LM73:
 676 01d4 F12C      		mov r15,__zero_reg__
 301:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         putchar(value&0x80 ? '1' : '0');
 678               	.LM74:
 679 01d6 C1E3      		ldi r28,lo8(49)
 680 01d8 D0E0      		ldi r29,0
 302:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (i==3 && sep) putchar(sep);
 682               	.LM75:
 683 01da 062F      		mov r16,r22
 684 01dc 10E0      		ldi r17,0
 685               	.L43:
 301:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         putchar(value&0x80 ? '1' : '0');
 687               	.LM76:
 688 01de 6091 0000 		lds r22,__iob+2
 689 01e2 7091 0000 		lds r23,__iob+2+1
 690 01e6 2E2D      		mov r18,r14
 691 01e8 3327      		clr r19
 692 01ea 27FD      		sbrc r18,7
 693 01ec 3095      		com r19
 694 01ee 2095      		com r18
 695 01f0 3095      		com r19
 696 01f2 2227      		clr r18
 697 01f4 330F      		lsl r19
 698 01f6 221F      		rol r18
 699 01f8 3327      		clr r19
 700 01fa CE01      		movw r24,r28
 701 01fc 821B      		sub r24,r18
 702 01fe 930B      		sbc r25,r19
 703 0200 0E94 0000 		call fputc
 302:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (i==3 && sep) putchar(sep);
 705               	.LM77:
 706 0204 83E0      		ldi r24,lo8(3)
 707 0206 F812      		cpse r15,r24
 708 0208 00C0      		rjmp .L41
 302:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (i==3 && sep) putchar(sep);
 710               	.LM78:
 711 020a DD20      		tst r13
 712 020c 01F0      		breq .L41
 713 020e 6091 0000 		lds r22,__iob+2
 714 0212 7091 0000 		lds r23,__iob+2+1
 715 0216 C801      		movw r24,r16
 716 0218 0E94 0000 		call fputc
 717               	.L41:
 299:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     for (i=0; i<8; i++,value<<=1)
 719               	.LM79:
 720 021c F394      		inc r15
 721 021e EE0C      		lsl r14
 722 0220 88E0      		ldi r24,lo8(8)
 723 0222 F812      		cpse r15,r24
 724 0224 00C0      		rjmp .L43
 725               	/* epilogue start */
 304:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 727               	.LM80:
 728 0226 DF91      		pop r29
 729 0228 CF91      		pop r28
 730 022a 1F91      		pop r17
 731 022c 0F91      		pop r16
 732 022e FF90      		pop r15
 733 0230 EF90      		pop r14
 734 0232 DF90      		pop r13
 735 0234 0895      		ret
 740               	.Lscope12:
 741               		.section	.rodata.str1.1
 742               	.LC1:
 743 0003 3078 2530 		.string	"0x%02x ("
 743      3278 2028 
 743      00
 744               		.text
 747               	.global	sys_printHexBin8
 749               	sys_printHexBin8:
 308:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 751               	.LM81:
 752               	.LFBB13:
 753 0236 CF93      		push r28
 754               	/* prologue: function */
 755               	/* frame size = 0 */
 756               	/* stack size = 1 */
 757               	.L__stack_usage = 1
 758 0238 C82F      		mov r28,r24
 309:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     printf("0x%02x (", value);
 760               	.LM82:
 761 023a 1F92      		push __zero_reg__
 762 023c 8F93      		push r24
 763 023e 20E0      		ldi r18,lo8(.LC1)
 764 0240 30E0      		ldi r19,hi8(.LC1)
 765 0242 3F93      		push r19
 766 0244 2F93      		push r18
 767 0246 0E94 0000 		call printf
 310:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_printBin(value, ' ');
 769               	.LM83:
 770 024a 60E2      		ldi r22,lo8(32)
 771 024c 8C2F      		mov r24,r28
 772 024e 0E94 0000 		call sys_printBin
 311:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     putchar(')');
 774               	.LM84:
 775 0252 0F90      		pop __tmp_reg__
 776 0254 0F90      		pop __tmp_reg__
 777 0256 0F90      		pop __tmp_reg__
 778 0258 0F90      		pop __tmp_reg__
 779 025a 6091 0000 		lds r22,__iob+2
 780 025e 7091 0000 		lds r23,__iob+2+1
 781 0262 89E2      		ldi r24,lo8(41)
 782 0264 90E0      		ldi r25,0
 783               	/* epilogue start */
 312:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 785               	.LM85:
 786 0266 CF91      		pop r28
 311:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     putchar(')');
 788               	.LM86:
 789 0268 0C94 0000 		jmp fputc
 791               	.Lscope13:
 792               		.section	.rodata.str1.1
 793               	.LC2:
 794 000c 7379 732E 		.string	"sys.flags_u8  : "
 794      666C 6167 
 794      735F 7538 
 794      2020 3A20 
 794      00
 795               	.LC3:
 796 001d 7379 732E 		.string	"sys.taskErr_u8: "
 796      7461 736B 
 796      4572 725F 
 796      7538 3A20 
 796      00
 797               		.text
 801               	.global	sys_cmd_sinfo
 803               	sys_cmd_sinfo:
 326:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 805               	.LM87:
 806               	.LFBB14:
 807               	/* prologue: function */
 808               	/* frame size = 0 */
 809               	/* stack size = 0 */
 810               	.L__stack_usage = 0
 327:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     printf("sys.flags_u8  : ");
 812               	.LM88:
 813 026c 80E0      		ldi r24,lo8(.LC2)
 814 026e 90E0      		ldi r25,hi8(.LC2)
 815 0270 9F93      		push r25
 816 0272 8F93      		push r24
 817 0274 0E94 0000 		call printf
 328:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_printHexBin8(sys.flags_u8);
 819               	.LM89:
 820 0278 8091 0000 		lds r24,sys
 821 027c 0E94 0000 		call sys_printHexBin8
 329:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_newline();
 823               	.LM90:
 824 0280 0E94 0000 		call sys_newline
 330:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     printf("sys.taskErr_u8: ");
 826               	.LM91:
 827 0284 80E0      		ldi r24,lo8(.LC3)
 828 0286 90E0      		ldi r25,hi8(.LC3)
 829 0288 9F93      		push r25
 830 028a 8F93      		push r24
 831 028c 0E94 0000 		call printf
 331:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_printHexBin8(sys.taskErr_u8);
 833               	.LM92:
 834 0290 8091 0000 		lds r24,sys+1
 835 0294 0E94 0000 		call sys_printHexBin8
 332:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_newline();
 837               	.LM93:
 838 0298 0E94 0000 		call sys_newline
 333:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return 0;
 840               	.LM94:
 841 029c 0F90      		pop __tmp_reg__
 842 029e 0F90      		pop __tmp_reg__
 843 02a0 0F90      		pop __tmp_reg__
 844 02a2 0F90      		pop __tmp_reg__
 334:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 846               	.LM95:
 847 02a4 80E0      		ldi r24,0
 848 02a6 0895      		ret
 850               	.Lscope14:
 851               		.section	.rodata.str1.1
 852               	.LC4:
 853 002e 3078 2530 		.string	"0x%04x ("
 853      3478 2028 
 853      00
 854               		.text
 856               	.global	sys_printHexBin16
 858               	sys_printHexBin16:
 316:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 860               	.LM96:
 861               	.LFBB15:
 862 02a8 1F93      		push r17
 863 02aa CF93      		push r28
 864 02ac DF93      		push r29
 865               	/* prologue: function */
 866               	/* frame size = 0 */
 867               	/* stack size = 3 */
 868               	.L__stack_usage = 3
 869 02ae 182F      		mov r17,r24
 870 02b0 C92F      		mov r28,r25
 317:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     printf("0x%04x (", value);
 872               	.LM97:
 873 02b2 9F93      		push r25
 874 02b4 8F93      		push r24
 875 02b6 20E0      		ldi r18,lo8(.LC4)
 876 02b8 30E0      		ldi r19,hi8(.LC4)
 877 02ba 3F93      		push r19
 878 02bc 2F93      		push r18
 879 02be 0E94 0000 		call printf
 318:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_printBin(value>>8, ' ');
 881               	.LM98:
 882 02c2 60E2      		ldi r22,lo8(32)
 883 02c4 8C2F      		mov r24,r28
 884 02c6 0E94 0000 		call sys_printBin
 319:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     putchar(' ');
 886               	.LM99:
 887 02ca C0E0      		ldi r28,lo8(__iob+2)
 888 02cc D0E0      		ldi r29,hi8(__iob+2)
 889 02ce 6881      		ld r22,Y
 890 02d0 7981      		ldd r23,Y+1
 891 02d2 80E2      		ldi r24,lo8(32)
 892 02d4 90E0      		ldi r25,0
 893 02d6 0E94 0000 		call fputc
 320:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_printBin(value & 0xff, ' ');
 895               	.LM100:
 896 02da 60E2      		ldi r22,lo8(32)
 897 02dc 812F      		mov r24,r17
 898 02de 0E94 0000 		call sys_printBin
 321:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     putchar(')');
 900               	.LM101:
 901 02e2 0F90      		pop __tmp_reg__
 902 02e4 0F90      		pop __tmp_reg__
 903 02e6 0F90      		pop __tmp_reg__
 904 02e8 0F90      		pop __tmp_reg__
 905 02ea 6881      		ld r22,Y
 906 02ec 7981      		ldd r23,Y+1
 907 02ee 89E2      		ldi r24,lo8(41)
 908 02f0 90E0      		ldi r25,0
 909               	/* epilogue start */
 322:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 911               	.LM102:
 912 02f2 DF91      		pop r29
 913 02f4 CF91      		pop r28
 914 02f6 1F91      		pop r17
 321:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     putchar(')');
 916               	.LM103:
 917 02f8 0C94 0000 		jmp fputc
 919               	.Lscope15:
 923               	.global	sys_readArgument
 925               	sys_readArgument:
 338:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 927               	.LM104:
 928               	.LFBB16:
 929 02fc CF93      		push r28
 930 02fe DF93      		push r29
 931               	/* prologue: function */
 932               	/* frame size = 0 */
 933               	/* stack size = 2 */
 934               	.L__stack_usage = 2
 935 0300 EB01      		movw r28,r22
 341:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (str[0]=='0' && str[1]=='x')
 937               	.LM105:
 938 0302 FC01      		movw r30,r24
 939 0304 2081      		ld r18,Z
 940 0306 2033      		cpi r18,lo8(48)
 941 0308 01F4      		brne .L52
 341:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (str[0]=='0' && str[1]=='x')
 943               	.LM106:
 944 030a 2181      		ldd r18,Z+1
 945 030c 2837      		cpi r18,lo8(120)
 946 030e 01F4      		brne .L52
 342:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         value = strtol(str, NULL, 16);
 948               	.LM107:
 949 0310 40E1      		ldi r20,lo8(16)
 950 0312 50E0      		ldi r21,0
 951 0314 00C0      		rjmp .L56
 952               	.L52:
 344:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         value = strtol(str, NULL, 10);
 954               	.LM108:
 955 0316 4AE0      		ldi r20,lo8(10)
 956 0318 50E0      		ldi r21,0
 957               	.L56:
 958 031a 60E0      		ldi r22,0
 959 031c 70E0      		ldi r23,0
 960 031e 0E94 0000 		call strtol
 346:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (value>max)
 962               	.LM109:
 963 0322 C617      		cp r28,r22
 964 0324 D707      		cpc r29,r23
 965 0326 04F4      		brge .L55
 347:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         return -1;
 967               	.LM110:
 968 0328 8FEF      		ldi r24,lo8(-1)
 969 032a 9FEF      		ldi r25,lo8(-1)
 970 032c 00C0      		rjmp .L54
 971               	.L55:
 972 032e CB01      		movw r24,r22
 973               	.L54:
 974               	/* epilogue start */
 350:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 976               	.LM111:
 977 0330 DF91      		pop r29
 978 0332 CF91      		pop r28
 979 0334 0895      		ret
 984               	.Lscope16:
 986               	.global	sys_uart_available
 988               	sys_uart_available:
 376:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 377:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 378:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** uint8_t sys_uart_available (void)
 379:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 990               	.LM112:
 991               	.LFBB17:
 992               	/* prologue: function */
 993               	/* frame size = 0 */
 994               	/* stack size = 0 */
 995               	.L__stack_usage = 0
 380:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return sys.uart.wpos_u8 >= sys.uart.rpos_u8
 997               	.LM113:
 998 0336 9091 0000 		lds r25,sys+4
 999 033a 8091 0000 		lds r24,sys+3
 1000 033e 9817      		cp r25,r24
 1001 0340 00F0      		brlo .L58
 1002               	.LBB20:
 1003               	.LBB21:
 381:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     ? sys.uart.wpos_u8 - sys.uart.rpos_u8
 1005               	.LM114:
 1006 0342 8091 0000 		lds r24,sys+4
 1007 0346 9091 0000 		lds r25,sys+3
 1008 034a 00C0      		rjmp .L60
 1009               	.L58:
 1010               	.LBE21:
 1011               	.LBE20:
 382:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     : ((int16_t)sys.uart.wpos_u8) + GLOBAL_UART_RECBUFSIZE - sys.uart.rpos_u8;
 1013               	.LM115:
 1014 034c 8091 0000 		lds r24,sys+4
 1015 0350 9091 0000 		lds r25,sys+3
 380:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return sys.uart.wpos_u8 >= sys.uart.rpos_u8
 1017               	.LM116:
 1018 0354 805F      		subi r24,lo8(-(16))
 1019               	.L60:
 1020 0356 891B      		sub r24,r25
 383:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 1022               	.LM117:
 1023 0358 0895      		ret
 1025               	.Lscope17:
 1028               	.global	sys_uart_getBufferByte
 1030               	sys_uart_getBufferByte:
 384:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 385:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 386:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** //----------------------------------------------------------------------------
 387:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 388:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** int16_t sys_uart_getBufferByte (uint8_t pos)
 389:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 1032               	.LM118:
 1033               	.LFBB18:
 1034 035a CF93      		push r28
 1035 035c DF93      		push r29
 1036               	/* prologue: function */
 1037               	/* frame size = 0 */
 1038               	/* stack size = 2 */
 1039               	.L__stack_usage = 2
 1040 035e C82F      		mov r28,r24
 390:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     int16_t value;
 391:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_cli();
 1042               	.LM119:
 1043 0360 0E94 0000 		call sys_cli
 392:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 393:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (pos >= sys_uart_available())
 1045               	.LM120:
 1046 0364 0E94 0000 		call sys_uart_available
 1047 0368 C817      		cp r28,r24
 1048 036a 00F4      		brsh .L64
 1049               	.LBB22:
 394:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         value = -1;
 395:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     else
 396:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
 397:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         uint8_t bufpos = sys.uart.rpos_u8 + pos;
 1051               	.LM121:
 1052 036c E091 0000 		lds r30,sys+3
 1053 0370 EC0F      		add r30,r28
 398:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (bufpos >= GLOBAL_UART_RECBUFSIZE)
 1055               	.LM122:
 1056 0372 E031      		cpi r30,lo8(16)
 1057 0374 00F0      		brlo .L63
 399:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             bufpos -= GLOBAL_UART_RECBUFSIZE;
 1059               	.LM123:
 1060 0376 E051      		subi r30,lo8(-(-16))
 1061               	.L63:
 400:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         value = sys.uart.rbuffer_u8[bufpos];
 1063               	.LM124:
 1064 0378 F0E0      		ldi r31,0
 1065 037a E050      		subi r30,lo8(-(sys))
 1066 037c F040      		sbci r31,hi8(-(sys))
 1067 037e C681      		ldd r28,Z+6
 1068 0380 D0E0      		ldi r29,0
 1069 0382 00C0      		rjmp .L62
 1070               	.L64:
 1071               	.LBE22:
 394:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         value = -1;
 1073               	.LM125:
 1074 0384 CFEF      		ldi r28,lo8(-1)
 1075 0386 DFEF      		ldi r29,lo8(-1)
 1076               	.L62:
 401:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
 402:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 403:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_sei();
 1078               	.LM126:
 1079 0388 0E94 0000 		call sys_sei
 404:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return value;
 405:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 1081               	.LM127:
 1082 038c CE01      		movw r24,r28
 1083               	/* epilogue start */
 1084 038e DF91      		pop r29
 1085 0390 CF91      		pop r28
 1086 0392 0895      		ret
 1094               	.Lscope18:
 1096               	.global	sys_uart_flush
 1098               	sys_uart_flush:
 406:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 407:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 408:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_uart_flush (void)
 409:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 1100               	.LM128:
 1101               	.LFBB19:
 1102               	/* prologue: function */
 1103               	/* frame size = 0 */
 1104               	/* stack size = 0 */
 1105               	.L__stack_usage = 0
 410:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_cli();
 1107               	.LM129:
 1108 0394 0E94 0000 		call sys_cli
 1109               	.L66:
 411:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     while (SYS_UART_BYTE_RECEIVED)
 1111               	.LM130:
 1112 0398 8091 C000 		lds r24,192
 1113 039c 87FF      		sbrs r24,7
 1114 039e 00C0      		rjmp .L68
 412:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys.uart.rbuffer_u8[0] = SYS_UDR;
 1116               	.LM131:
 1117 03a0 8091 C600 		lds r24,198
 1118 03a4 8093 0000 		sts sys+6,r24
 1119 03a8 00C0      		rjmp .L66
 1120               	.L68:
 413:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 414:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys.uart.rpos_u8 = 0;
 1122               	.LM132:
 1123 03aa 1092 0000 		sts sys+3,__zero_reg__
 415:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys.uart.wpos_u8 = 0;
 1125               	.LM133:
 1126 03ae 1092 0000 		sts sys+4,__zero_reg__
 416:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys.uart.errcnt_u8 = 0;
 1128               	.LM134:
 1129 03b2 1092 0000 		sts sys+5,__zero_reg__
 417:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_sei();
 1131               	.LM135:
 1132 03b6 0C94 0000 		jmp sys_sei
 1134               	.Lscope19:
 1137               	.global	sys_setEvent
 1139               	sys_setEvent:
 418:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 419:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 420:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 421:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** //****************************************************************************
 422:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** // Event Handling
 423:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** //****************************************************************************
 424:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 425:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** Sys_Event sys_setEvent (Sys_Event event)
 426:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 1141               	.LM136:
 1142               	.LFBB20:
 1143 03ba CF93      		push r28
 1144 03bc DF93      		push r29
 1145               	/* prologue: function */
 1146               	/* frame size = 0 */
 1147               	/* stack size = 2 */
 1148               	.L__stack_usage = 2
 1149 03be C82F      		mov r28,r24
 427:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint8_t eventIsPending = 0;
 428:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_cli();
 1151               	.LM137:
 1152 03c0 0E94 0000 		call sys_cli
 429:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.eventFlag & event)
 1154               	.LM138:
 1155 03c4 D091 0000 		lds r29,sys+2
 430:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         eventIsPending = 1;
 431:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys.eventFlag |= event;
 1157               	.LM139:
 1158 03c8 9091 0000 		lds r25,sys+2
 1159 03cc 9C2B      		or r25,r28
 1160 03ce 9093 0000 		sts sys+2,r25
 432:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_sei();
 1162               	.LM140:
 1163 03d2 0E94 0000 		call sys_sei
 429:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.eventFlag & event)
 1165               	.LM141:
 1166 03d6 CD23      		and r28,r29
 1167 03d8 81E0      		ldi r24,lo8(1)
 1168 03da 01F4      		brne .L70
 1169 03dc 80E0      		ldi r24,0
 1170               	.L70:
 1171               	/* epilogue start */
 433:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 434:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return eventIsPending;
 435:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 1173               	.LM142:
 1174 03de DF91      		pop r29
 1175 03e0 CF91      		pop r28
 1176 03e2 0895      		ret
 1178               	.Lscope20:
 1181               	.global	sys_clearEvent
 1183               	sys_clearEvent:
 436:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 437:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 438:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** Sys_Event sys_clearEvent (Sys_Event event)
 439:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 1185               	.LM143:
 1186               	.LFBB21:
 1187 03e4 CF93      		push r28
 1188 03e6 DF93      		push r29
 1189               	/* prologue: function */
 1190               	/* frame size = 0 */
 1191               	/* stack size = 2 */
 1192               	.L__stack_usage = 2
 1193 03e8 C82F      		mov r28,r24
 440:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint8_t eventIsPending = 0;
 441:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_cli();
 1195               	.LM144:
 1196 03ea 0E94 0000 		call sys_cli
 442:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.eventFlag & event)
 1198               	.LM145:
 1199 03ee D091 0000 		lds r29,sys+2
 443:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         eventIsPending = 1;
 444:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys.eventFlag &= ~event;
 1201               	.LM146:
 1202 03f2 8091 0000 		lds r24,sys+2
 1203 03f6 9C2F      		mov r25,r28
 1204 03f8 9095      		com r25
 1205 03fa 9823      		and r25,r24
 1206 03fc 9093 0000 		sts sys+2,r25
 445:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_sei();
 1208               	.LM147:
 1209 0400 0E94 0000 		call sys_sei
 442:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.eventFlag & event)
 1211               	.LM148:
 1212 0404 CD23      		and r28,r29
 1213 0406 81E0      		ldi r24,lo8(1)
 1214 0408 01F4      		brne .L72
 1215 040a 80E0      		ldi r24,0
 1216               	.L72:
 1217               	/* epilogue start */
 446:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 447:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return eventIsPending;
 448:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 1219               	.LM149:
 1220 040c DF91      		pop r29
 1221 040e CF91      		pop r28
 1222 0410 0895      		ret
 1224               	.Lscope21:
 1227               	.global	sys_isEventPending
 1229               	sys_isEventPending:
 449:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 450:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 451:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** Sys_Event sys_isEventPending (Sys_Event event)
 452:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 1231               	.LM150:
 1232               	.LFBB22:
 1233               	/* prologue: function */
 1234               	/* frame size = 0 */
 1235               	/* stack size = 0 */
 1236               	.L__stack_usage = 0
 453:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return (sys.eventFlag & event) != 0;
 1238               	.LM151:
 1239 0412 9091 0000 		lds r25,sys+2
 1240 0416 9823      		and r25,r24
 1241 0418 81E0      		ldi r24,lo8(1)
 1242 041a 01F4      		brne .L74
 1243 041c 80E0      		ldi r24,0
 1244               	.L74:
 454:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 1246               	.LM152:
 1247 041e 0895      		ret
 1249               	.Lscope22:
 1252               	.global	sys_setLed
 1254               	sys_setLed:
 455:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 456:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 457:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 458:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** //****************************************************************************
 459:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** // 7 Segment Handling for Sure DEM2 Board
 460:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** //****************************************************************************
 461:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 462:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_SURE_SEG7
 463:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 464:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** const uint8_t sys_mask_seg7[19] = { 0x00,
 465:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07,
 466:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     0x7f, 0x6f, 0x77, 0x7c, 0x39, 0x5e, 0x79, 0x71,
 467:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     0x40, 0x08 };
 468:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 469:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_7seg_refresh ()
 470:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 471:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     static uint8_t refresh = 0;
 472:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 473:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     refresh = (refresh + 1) % 4;
 474:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTA &= ~0xf0;
 475:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTB = sys_mask_seg7[sys.seg7.digit_u8[refresh]];
 476:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.seg7.point_u8 & (1<<refresh))
 477:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         PORTB |= 0x80;
 478:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTA |= (0x80 >> refresh);
 479:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 480:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 481:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 482:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_7seg_setDigit (uint8_t index, uint8_t digitValue)
 483:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 484:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (index>3) return;
 485:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_SURE_LCD
 486:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.lcd.status == 1)
 487:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         return;
 488:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif
 489:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     digitValue++;
 490:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (digitValue >= sizeof(sys_mask_seg7))
 491:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         digitValue = 0; // -> digit is switched off
 492:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys.seg7.digit_u8[index] = digitValue;
 493:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 494:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 495:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 496:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_7seg_setPoint (uint8_t index, uint8_t pointState)
 497:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 498:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_SURE_LCD
 499:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.lcd.status == 1)
 500:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         return;
 501:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif
 502:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (pointState)
 503:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys.seg7.point_u8 |= (1<<index);
 504:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     else
 505:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys.seg7.point_u8 &= ~(1<<index);
 506:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 507:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 508:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 509:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_7seg_setString (const char *str)
 510:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 511:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     int8_t i;
 512:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 513:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_SURE_LCD
 514:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.lcd.status == 1)
 515:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         return;
 516:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif
 517:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 518:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     for (i=3; i>=0 && *str; i--)
 519:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
 520:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (*str>='0' && *str<='9')
 521:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_7seg_setDigit(i, *str-'0');
 522:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         else if (*str>='a' && *str<='f')
 523:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_7seg_setDigit(i, *str-'a');
 524:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         else if (*str>='A' && *str<='Z')
 525:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_7seg_setDigit(i, *str-'A');
 526:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         else if (*str=='-')
 527:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_7seg_setDigit(i, SYS_SEG7_DIGIT_MINUS);
 528:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         else
 529:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_7seg_setDigit(i, SYS_SEG7_DIGIT_UNDERLINE);
 530:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         str++;
 531:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
 532:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 533:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 534:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif // GLOBAL_SURE_SEG7
 535:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 536:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 537:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** //****************************************************************************
 538:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** // LCD Handling (only for SURE Board)
 539:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** //****************************************************************************
 540:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 541:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_SURE_LCD
 542:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 543:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_lcd_init (void)
 544:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 545:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint8_t i;
 546:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 547:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     //_delay_ms(16);
 548:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys.lcd.status = 0;
 549:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     for (i=0; i<4; i++)
 550:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
 551:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys_lcd_setRegister(SYS_LCD_CMD_SET_FUNCTION | 0x18); // 8 Bit, 2 Zeilen, 5x7
 552:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (i==0) _delay_ms(5); else _delay_us(100);
 553:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
 554:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 555:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_setRegister(SYS_LCD_CMD_DISPLAY_ON_OFF | 0x04); // display on, cursor off
 556:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (!sys_lcd_isReady(50)) { sys.lcd.status = -1; return; }
 557:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 558:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_setRegister(SYS_LCD_CMD_DISPLAY_ON_OFF | 0x04); // display on, cursor off
 559:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (!sys_lcd_isReady(50)) { sys.lcd.status = -3; return; }
 560:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 561:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_setRegister(SYS_LCD_CMD_DISPLAY_CLEAR);
 562:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (!sys_lcd_isReady(1200)) { sys.lcd.status = -4; return; }
 563:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 564:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys.lcd.status = 1;
 565:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 566:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 567:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 568:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** uint8_t sys_lcd_isReady (uint16_t us)
 569:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 570:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.lcd.status<0) return 0;
 571:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 572:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint8_t busy;
 573:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTB = 0xff;
 574:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     DDRB = 0x00;  // Direction Port LCD-Data to Input
 575:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     do
 576:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
 577:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         SYS_LCD_SET_RW;
 578:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         SYS_LCD_CLR_RS;
 579:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         _delay_us(1);
 580:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         SYS_LCD_SET_E;
 581:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         _delay_us(SYS_LCD_PULSE_LENGTH);
 582:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys.lcd.data = PINB;
 583:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         busy = sys.lcd.data & SYS_LCD_BUSY_FLAG;
 584:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         SYS_LCD_CLR_E;
 585:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         SYS_LCD_CLR_RW;
 586:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         us = (us>=11) ? us-11 : 0;
 587:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
 588:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     while (us>0 && busy);
 589:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 590:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.lcd.status== 1 && busy)
 591:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys.lcd.status = -5;
 592:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 593:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     DDRB = 0xff;  // Direction Port LCD-Data to Input
 594:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 595:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return busy == 0;
 596:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 597:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 598:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 599:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_lcd_setRegister (uint8_t cmd)
 600:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 601:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTD &= ~0x1c; //  E=0, R/W=0, RS=0
 602:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTB = cmd;
 603:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     DDRB = 0xff;    // Direction Port LCD-Data to Output
 604:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     SYS_LCD_SET_E;
 605:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     _delay_us(SYS_LCD_PULSE_LENGTH);
 606:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     SYS_LCD_CLR_E;
 607:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     _delay_us(1);
 608:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 609:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 610:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 611:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_lcd_waitOnReady (void)
 612:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 613:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if(sys_lcd_isReady(50)==0)
 614:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys.lcd.status = -6;
 615:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 616:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 617:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 618:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_lcd_setDisplayOff (void)
 619:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 620:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_waitOnReady();
 621:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_setRegister(SYS_LCD_CMD_DISPLAY_ON_OFF); // display off
 622:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_waitOnReady();
 623:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 624:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 625:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 626:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_lcd_setDisplayOn (void)
 627:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 628:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_waitOnReady();
 629:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_setRegister(SYS_LCD_CMD_DISPLAY_ON_OFF | 0x04); // display on
 630:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_waitOnReady();
 631:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 632:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 633:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 634:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_lcd_clear (void)
 635:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 636:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_waitOnReady();
 637:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_setRegister(SYS_LCD_CMD_DISPLAY_CLEAR);
 638:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     while (!sys_lcd_isReady(1200));
 639:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 640:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 641:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 642:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_lcd_setDRAddr (uint8_t address)
 643:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 644:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_waitOnReady();
 645:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_setRegister(SYS_LCD_CMD_SET_DDRAM_ADDR | address);
 646:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_waitOnReady();
 647:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 648:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 649:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 650:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** // 1.Line->rowIndex=0, 1.Column->colIndex=0
 651:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_lcd_setCursorPosition (uint8_t rowIndex, uint8_t columnIndex)
 652:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 653:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.lcd.status!=1 || rowIndex>1) return;
 654:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (rowIndex)
 655:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys_lcd_setDRAddr(0x40 + columnIndex);
 656:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     else
 657:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys_lcd_setDRAddr(columnIndex);
 658:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 659:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 660:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 661:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** inline void sys_lcd_putc (char c, FILE *stream)
 662:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 663:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_putchar(c);
 664:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 665:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 666:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 667:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_lcd_putchar (int character)
 668:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 669:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.lcd.status!=1) return;
 670:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_waitOnReady();
 671:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 672:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     DDRB = 0xff;
 673:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTB = (uint8_t) character;
 674:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     SYS_LCD_SET_RS;
 675:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     SYS_LCD_CLR_RW;
 676:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     SYS_LCD_SET_E;
 677:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     _delay_us(SYS_LCD_PULSE_LENGTH);
 678:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     SYS_LCD_CLR_E;
 679:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     _delay_us(10);
 680:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     DDRB = 0x00;
 681:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 682:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 683:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 684:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_lcd_putString (const char * str)
 685:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 686:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     while (*str && sys.lcd.status==1)
 687:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
 688:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys_lcd_putchar(*str++);
 689:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
 690:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_lcd_waitOnReady();
 691:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 692:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 693:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif // GLOBAL_SURE_LCD
 694:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 695:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 696:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** //****************************************************************************
 697:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** // LED Handling
 698:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** //****************************************************************************
 699:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 700:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef SURE
 701:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 702:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_setAllLeds (uint8_t ledState)
 703:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 704:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (ledState)
 705:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
 706:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         PORTA = 0xf0;
 707:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         PORTB = 0xff;
 708:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
 709:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     else
 710:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
 711:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         PORTA = 0x0f;
 712:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         PORTB = 0x00;
 713:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
 714:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 715:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 716:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 717:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_setLed (uint8_t index, uint8_t ledState)
 718:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 719:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (index>3) return;
 720:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (ledState)
 721:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         PORTA &= ~(1<<index);
 722:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     else
 723:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         PORTA |= (1<<index);
 724:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 725:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 726:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 727:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_toggleLed (uint8_t index)
 728:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 729:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (index>3) return;
 730:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTA ^=  (1<<index);
 731:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 732:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 733:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif // SURE
 734:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 735:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef ARDUINO
 736:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 737:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_setLed (uint8_t ledState)
 738:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 1256               	.LM153:
 1257               	.LFBB23:
 1258               	/* prologue: function */
 1259               	/* frame size = 0 */
 1260               	/* stack size = 0 */
 1261               	.L__stack_usage = 0
 739:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (ledState)
 1263               	.LM154:
 1264 0420 8823      		tst r24
 1265 0422 01F0      		breq .L76
 740:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         PORTB |= (1<<PB5);
 1267               	.LM155:
 1268 0424 2D9A      		sbi 0x5,5
 1269 0426 0895      		ret
 1270               	.L76:
 741:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     else
 742:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         PORTB &= ~(1<<PB5);
 1272               	.LM156:
 1273 0428 2D98      		cbi 0x5,5
 1274 042a 0895      		ret
 1276               	.Lscope23:
 1278               	.global	sys_toggleLed
 1280               	sys_toggleLed:
 743:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 744:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 745:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_toggleLed (void)
 746:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 1282               	.LM157:
 1283               	.LFBB24:
 1284               	/* prologue: function */
 1285               	/* frame size = 0 */
 1286               	/* stack size = 0 */
 1287               	.L__stack_usage = 0
 747:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTB ^= (1<<PB5);
 1289               	.LM158:
 1290 042c 85B1      		in r24,0x5
 1291 042e 90E2      		ldi r25,lo8(32)
 1292 0430 8927      		eor r24,r25
 1293 0432 85B9      		out 0x5,r24
 1294 0434 0895      		ret
 1296               	.Lscope24:
 1299               	.global	sys_getMonCmdInfo
 1301               	sys_getMonCmdInfo:
 748:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 749:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 750:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif
 751:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 752:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef CRUMB128
 753:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 754:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_setLed (uint8_t ledState)
 755:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 756:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (ledState)
 757:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         PORTB |= (1<<PB7);
 758:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     else
 759:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         PORTB &= ~(1<<PB7);
 760:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 761:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 762:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_toggleLed (void)
 763:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 764:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTB ^= (1<<PB7);
 765:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 766:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 767:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif
 768:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 769:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef ASURO
 770:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 771:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_setGreenLed (uint8_t ledState)
 772:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 773:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (ledState)
 774:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         PORTB |= 0x01;
 775:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     else
 776:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         PORTB &= ~0x01;
 777:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 778:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 779:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 780:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_setRedLed (uint8_t ledState)
 781:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 782:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (ledState)
 783:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         PORTD |= 0x04;
 784:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     else
 785:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         PORTD &= ~0x04;
 786:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 787:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 788:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 789:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_toggleGreenLed (void)
 790:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 791:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTB ^= 0x01;
 792:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 793:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 794:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 795:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_toggleRedLed (void)
 796:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 797:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PORTD ^= 0x04;
 798:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 799:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 800:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif // ASURO
 801:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 802:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 803:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_MONITOR
 804:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 805:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** //****************************************************************************
 806:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** // Monitor Handling
 807:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** //****************************************************************************
 808:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 809:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** struct Sys_MonCmdInfo sys_getMonCmdInfo (uint8_t index)
 810:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 1303               	.LM159:
 1304               	.LFBB25:
 1305 0436 1F93      		push r17
 1306 0438 CF93      		push r28
 1307 043a DF93      		push r29
 1308 043c 00D0      		rcall .
 1309 043e 00D0      		rcall .
 1310 0440 CDB7      		in r28,__SP_L__
 1311 0442 DEB7      		in r29,__SP_H__
 1312               	/* prologue: function */
 1313               	/* frame size = 4 */
 1314               	/* stack size = 7 */
 1315               	.L__stack_usage = 7
 811:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     struct Sys_MonCmdInfo ci = { NULL, NULL} ;
 1317               	.LM160:
 1318 0444 1A82      		std Y+2,__zero_reg__
 1319 0446 1982      		std Y+1,__zero_reg__
 1320 0448 1C82      		std Y+4,__zero_reg__
 1321 044a 1B82      		std Y+3,__zero_reg__
 812:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PGM_P p;
 813:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 814:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (index < sizeof(SYS_PMEMSTR_CMDS)/sizeof(struct Sys_MonCmdInfo))
 1323               	.LM161:
 1324 044c 8230      		cpi r24,lo8(2)
 1325 044e 00F4      		brsh .L80
 815:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         p = (PGM_P)&(SYS_PMEMSTR_CMDS[index]);
 1327               	.LM162:
 1328 0450 94E0      		ldi r25,lo8(4)
 1329 0452 899F      		mul r24,r25
 1330 0454 B001      		movw r22,r0
 1331 0456 1124      		clr __zero_reg__
 1332 0458 6050      		subi r22,lo8(-(SYS_PMEMSTR_CMDS))
 1333 045a 7040      		sbci r23,hi8(-(SYS_PMEMSTR_CMDS))
 1334 045c 00C0      		rjmp .L81
 1335               	.L80:
 816:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         else
 817:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         {
 818:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             index -= sizeof(SYS_PMEMSTR_CMDS)/sizeof(struct Sys_MonCmdInfo);
 1337               	.LM163:
 1338 045e 1EEF      		ldi r17,lo8(-2)
 1339 0460 180F      		add r17,r24
 819:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (index >= mon_getCmdCount())
 1341               	.LM164:
 1342 0462 0E94 0000 		call mon_getCmdCount
 1343 0466 1817      		cp r17,r24
 1344 0468 00F4      		brsh .L84
 820:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 return ci;
 821:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             p = (PGM_P)&(MON_PMEMSTR_CMDS[index]);
 1346               	.LM165:
 1347 046a 84E0      		ldi r24,lo8(4)
 1348 046c 189F      		mul r17,r24
 1349 046e B001      		movw r22,r0
 1350 0470 1124      		clr __zero_reg__
 1351 0472 6050      		subi r22,lo8(-(MON_PMEMSTR_CMDS))
 1352 0474 7040      		sbci r23,hi8(-(MON_PMEMSTR_CMDS))
 1353               	.L81:
 822:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         }
 823:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 824:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     memcpy_P(&ci, p, sizeof(struct Sys_MonCmdInfo));
 1355               	.LM166:
 1356 0476 44E0      		ldi r20,lo8(4)
 1357 0478 50E0      		ldi r21,0
 1358 047a CE01      		movw r24,r28
 1359 047c 0196      		adiw r24,1
 1360 047e 0E94 0000 		call memcpy_P
 1361               	.L84:
 825:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return ci;
 1363               	.LM167:
 1364 0482 6981      		ldd r22,Y+1
 1365 0484 7A81      		ldd r23,Y+2
 1366 0486 8B81      		ldd r24,Y+3
 1367 0488 9C81      		ldd r25,Y+4
 1368               	/* epilogue start */
 826:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 1370               	.LM168:
 1371 048a 0F90      		pop __tmp_reg__
 1372 048c 0F90      		pop __tmp_reg__
 1373 048e 0F90      		pop __tmp_reg__
 1374 0490 0F90      		pop __tmp_reg__
 1375 0492 DF91      		pop r29
 1376 0494 CF91      		pop r28
 1377 0496 1F91      		pop r17
 1378 0498 0895      		ret
 1384               	.Lscope25:
 1388               	.global	sys_cmd_help
 1390               	sys_cmd_help:
 827:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 828:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 829:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_mon_printUsageInfo (struct Sys_MonCmdInfo *pCmdInfo)
 830:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 831:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PGM_P p = pCmdInfo->pInfo;
 832:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 833:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint8_t i;
 834:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     for (i=0; i<2; i++)
 835:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
 836:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         char c;
 837:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         do
 838:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         {
 839:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             memcpy_P(&c, p++, 1);
 840:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         }
 841:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         while (c != 0);
 842:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
 843:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_printString_P(p);
 844:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 845:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 846:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 847:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_mon_ExecuteCmd (void)
 848:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 849:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     struct Sys_Monitor *pmon = (struct Sys_Monitor *)&sys_mon;
 850:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_newline();
 851:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 852:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint8_t i;
 853:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     char *argv[GLOBAL_MON_MAXARGV];
 854:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint8_t argc;
 855:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 856:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     char *ps = pmon->cmdLine;
 857:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     argc = 0;
 858:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 859:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     i = 0;
 860:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     for (i=0; i<GLOBAL_MON_MAXARGV && *ps; i++)
 861:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
 862:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         while(*ps==' ') ps++; // ignore leading spaces
 863:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (*ps == 0) break;
 864:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         argv[i] = ps;
 865:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         argc++;
 866:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         while (*ps != ' ' && *ps)
 867:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             ps++;
 868:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (*ps==' ')
 869:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             *ps++ = 0;
 870:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
 871:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     for (;i<GLOBAL_MON_MAXARGV; i++)
 872:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         argv[i] = NULL;
 873:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 874:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     /*
 875:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****      printf("\n\rargc=%d\n\r", argc);
 876:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****      for (i=0; i<GLOBAL_MON_MAXARGV; i++)
 877:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****      {
 878:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****      printf("  argv[%d]=0x%04x", i, (uint16_t)argv[i]);
 879:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****      if (argv[i])
 880:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****      printf(" len=%d cmd='%s'", strlen(argv[i]), argv[i]);
 881:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****      sys_newline();
 882:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****      }
 883:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****      */
 884:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 885:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (argc>0 && *argv[0])
 886:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
 887:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         i = 0;
 888:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         while (1)
 889:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         {
 890:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             struct Sys_MonCmdInfo ci = sys_getMonCmdInfo(i++);
 891:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (ci.pFunction == NULL)
 892:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             {
 893:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_printString_P(SYS_PMEM_ERR1);
 894:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 break;
 895:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             }
 896:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (strcmp_P(pmon->cmdLine, ci.pInfo)==0)
 897:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             {
 898:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 if (argc==2 && strcmp_P(argv[1], SYS_PMEM_CMD_HELP)==0)
 899:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                     sys_mon_printUsageInfo(&ci);
 900:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 else
 901:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 {
 902:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                     int8_t retCode = (*ci.pFunction)(argc, argv);
 903:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                     if (retCode)
 904:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                     {
 905:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                         sys_printString_P(SYS_PMEM_ERR0);
 906:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                         printf("%d", retCode);
 907:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                         if (retCode<0)
 908:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                         {
 909:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                             sys_printString_P(SYS_PMEM_ERR2);
 910:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                             sys_mon_printUsageInfo(&ci);
 911:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                         }
 912:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                     }
 913:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 }
 914:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_newline();
 915:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 break;
 916:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             }
 917:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         }
 918:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
 919:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 920:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_printString_P(SYS_PMEM_LINESTART);
 921:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     pmon->cursorPos = 0;
 922:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     pmon->cmdLine[0] = 0;
 923:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 924:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 925:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 926:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_mon_CmdLineBack (void)
 927:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 928:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     struct Sys_Monitor *pmon = (struct Sys_Monitor *)&sys_mon;
 929:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (pmon->cursorPos==0) return;
 930:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     printf("\b \b");
 931:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     pmon->cmdLine[--pmon->cursorPos] = 0;
 932:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 933:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 934:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_putnchar (char c, uint8_t count)
 935:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 936:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     for (; count>0; count--)
 937:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         putchar(c);
 938:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 939:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 940:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
 941:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** void sys_mon_main (void)
 942:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 943:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     struct Sys_Monitor *pmon = (struct Sys_Monitor *)&sys_mon;
 944:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     char c = 0;
 945:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     int8_t incLineIndex = 0;
 946:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     static uint8_t lastbyte = 0;
 947:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
 948:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys_mon.flags & SYS_MONITOR_FLAG_LINEMODE)
 949:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
 950:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         while (sys_uart_available()>0)
 951:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         {
 952:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             c = getchar();
 953:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (lastbyte != '\n' && c == '\r')
 954:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 c = '\n';
 955:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else
 956:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 lastbyte = c;
 957:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (c=='\n')
 958:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             {
 959:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_mon.flags &= ~(SYS_MONITOR_FLAG_LINEMODE | SYS_MONITOR_FLAG_LINE);
 960:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 printf("\n\n\r>");
 961:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 return;
 962:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             }
 963:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         }
 964:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (c==SYS_MONITOR_CTRL_X)
 965:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         {
 966:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             incLineIndex = 1;
 967:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_mon.flags &= ~SYS_MONITOR_FLAG_LINE;
 968:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         }
 969:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         else if (c==SYS_MONITOR_CTRL_Y)
 970:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         {
 971:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             incLineIndex = -1;
 972:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_mon.flags &= ~SYS_MONITOR_FLAG_LINE;
 973:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         }
 974:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         else if (c==SYS_MONITOR_CTRL_C)
 975:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         {
 976:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (sys_mon.flags & SYS_MONITOR_FLAG_CONT)
 977:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_mon.flags &= ~(SYS_MONITOR_FLAG_CONT | SYS_MONITOR_FLAG_LINE);
 978:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else
 979:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_mon.flags |= SYS_MONITOR_FLAG_CONT;
 980:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         }
 981:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         
 982:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (sys_mon.flags & SYS_MONITOR_FLAG_LINE)
 983:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         {
 984:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             int8_t lenSpaces = mon_printLine(sys_mon.lineIndex, c);
 985:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_putnchar(' ', lenSpaces);
 986:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             printf("\r");
 987:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (sys_mon.flags & SYS_MONITOR_FLAG_CONT)
 988:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 printf("\n");
 989:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         }
 990:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         else
 991:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         {
 992:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             int8_t len;
 993:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             
 994:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             printf("\n\n\r");
 995:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             do
 996:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             {
 997:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 if (incLineIndex)
 998:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                     sys_mon.lineIndex = incLineIndex>0 ? sys_mon.lineIndex+1 : sys_mon.lineIndex-1;
 999:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 len = mon_printLineHeader(sys_mon.lineIndex);
1000:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             }
1001:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             while (len<0 && sys_mon.lineIndex!=0);
1002:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             
1003:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_newline();
1004:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (len>0)
1005:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_putnchar('-', len);
1006:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_newline();
1007:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_mon.flags |= SYS_MONITOR_FLAG_LINE;
1008:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         }
1009:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
1010:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     else
1011:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
1012:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         while (sys_uart_available()>0)
1013:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         {
1014:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             c = getchar();
1015:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (lastbyte != '\n' && c == '\r')
1016:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 c = '\n';
1017:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else
1018:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 lastbyte = c;
1019:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             
1020:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (c==SYS_MONITOR_CTRL_X || c==SYS_MONITOR_CTRL_Y)
1021:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_mon.flags |= SYS_MONITOR_FLAG_LINEMODE;
1022:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (c=='\n')
1023:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_mon_ExecuteCmd();
1024:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (c==127)
1025:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 ; // ignore Taste 'Entf' -> maybe implemented later
1026:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (c=='\b')
1027:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_mon_CmdLineBack();
1028:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (c<' ' || c>126)
1029:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 ; // ignore control codes
1030:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (pmon->cursorPos<(sizeof(pmon->cmdLine)-1))
1031:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             {
1032:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_MON_ONLYLOCASE
1033:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 c = tolower(c);
1034:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif
1035:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 pmon->cmdLine[pmon->cursorPos++] = c;
1036:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 pmon->cmdLine[pmon->cursorPos] = 0;
1037:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 putchar(c);
1038:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             }
1039:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         }
1040:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
1041:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
1042:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
1043:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
1044:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** //****************************************************************************
1045:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** // Monitor Commands
1046:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** //****************************************************************************
1047:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
1048:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** int8_t sys_cmd_help (uint8_t argc, char *argv[])
1049:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 1392               	.LM169:
 1393               	.LFBB26:
 1394 049a 8F92      		push r8
 1395 049c 9F92      		push r9
 1396 049e AF92      		push r10
 1397 04a0 BF92      		push r11
 1398 04a2 CF92      		push r12
 1399 04a4 DF92      		push r13
 1400 04a6 EF92      		push r14
 1401 04a8 FF92      		push r15
 1402 04aa 0F93      		push r16
 1403 04ac 1F93      		push r17
 1404 04ae CF93      		push r28
 1405 04b0 DF93      		push r29
 1406               	/* prologue: function */
 1407               	/* frame size = 0 */
 1408               	/* stack size = 12 */
 1409               	.L__stack_usage = 12
1050:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     // struct Sys_Monitor *pmon = (struct Sys_Monitor *)&sys_mon;
1051:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint8_t i, j, max;
1052:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1053:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     i = 0; max = 0;
 1411               	.LM170:
 1412 04b2 C0E0      		ldi r28,0
 1413 04b4 80E0      		ldi r24,0
 1414               	.L88:
 1415               	.LBB23:
1054:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     while (1)
1055:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
1056:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         struct Sys_MonCmdInfo ci = sys_getMonCmdInfo(i++);
 1417               	.LM171:
 1418 04b6 D1E0      		ldi r29,lo8(1)
 1419 04b8 D80F      		add r29,r24
 1420 04ba 0E94 0000 		call sys_getMonCmdInfo
1057:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (ci.pFunction == NULL)
 1422               	.LM172:
 1423 04be 892B      		or r24,r25
 1424 04c0 01F0      		breq .L86
 1425               	.LBB24:
 1426               	.LBB25:
 1428               	.Ltext3:
   1:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /* Copyright (c) 2002-2007  Marek Michalkiewicz
   2:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Copyright (c) 2006, Carlos Lamas
   3:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Copyright (c) 2009-2010, Jan Waclawek
   4:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    All rights reserved.
   5:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
   6:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
   9:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      the documentation and/or other materials provided with the
  14:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      distribution.
  15:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      contributors may be used to endorse or promote products derived
  17:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      from this software without specific prior written permission.
  18:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
  19:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****   POSSIBILITY OF SUCH DAMAGE. */
  30:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
  31:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /* $Id$ */
  32:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
  33:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /*
  34:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    pgmspace.h
  35:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
  36:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Contributors:
  37:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      Created by Marek Michalkiewicz <marekm@linux.org.pl>
  38:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      Eric B. Weddington <eric@ecentral.com>
  39:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      Wolfgang Haidinger <wh@vmars.tuwien.ac.at> (pgm_read_dword())
  40:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      Ivanov Anton <anton@arc.com.ru> (pgm_read_float())
  41:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****  */
  42:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
  43:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \file */
  44:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \defgroup avr_pgmspace <avr/pgmspace.h>: Program Space Utilities
  45:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \code
  46:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     #include <avr/io.h>
  47:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     #include <avr/pgmspace.h>
  48:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \endcode
  49:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
  50:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     The functions in this module provide interfaces for a program to access
  51:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     data stored in program space (flash memory) of the device.  In order to
  52:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     use these functions, the target device must support either the \c LPM or
  53:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \c ELPM instructions.
  54:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
  55:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note These functions are an attempt to provide some compatibility with
  56:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     header files that come with IAR C, to make porting applications between
  57:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     different compilers easier.  This is not 100% compatibility though (GCC
  58:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     does not have full support for multiple address spaces yet).
  59:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
  60:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note If you are working with strings which are completely based in ram,
  61:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     use the standard string functions described in \ref avr_string.
  62:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
  63:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note If possible, put your constant tables in the lower 64 KB and use
  64:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     pgm_read_byte_near() or pgm_read_word_near() instead of
  65:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     pgm_read_byte_far() or pgm_read_word_far() since it is more efficient that
  66:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     way, and you can still use the upper 64K for executable code.
  67:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     All functions that are suffixed with a \c _P \e require their
  68:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     arguments to be in the lower 64 KB of the flash ROM, as they do
  69:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     not use ELPM instructions.  This is normally not a big concern as
  70:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     the linker setup arranges any program space constants declared
  71:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     using the macros from this header file so they are placed right after
  72:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     the interrupt vectors, and in front of any executable code.  However,
  73:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     it can become a problem if there are too many of these constants, or
  74:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     for bootloaders on devices with more than 64 KB of ROM.
  75:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     <em>All these functions will not work in that situation.</em>
  76:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
  77:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note For <b>Xmega</b> devices, make sure the NVM controller
  78:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     command register (\c NVM.CMD or \c NVM_CMD) is set to 0x00 (NOP)
  79:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     before using any of these functions.
  80:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** */
  81:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
  82:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #ifndef __PGMSPACE_H_
  83:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __PGMSPACE_H_ 1
  84:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
  85:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __need_size_t
  86:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #include <inttypes.h>
  87:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #include <stddef.h>
  88:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #include <avr/io.h>
  89:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
  90:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #ifndef __ATTR_CONST__
  91:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ATTR_CONST__ __attribute__((__const__))
  92:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif
  93:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
  94:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #ifndef __ATTR_PROGMEM__
  95:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ATTR_PROGMEM__ __attribute__((__progmem__))
  96:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif
  97:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
  98:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #ifndef __ATTR_PURE__
  99:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ATTR_PURE__ __attribute__((__pure__))
 100:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif
 101:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 102:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /**
 103:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 104:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \def PROGMEM
 105:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 106:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Attribute to use in order to declare an object being located in
 107:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    flash ROM.
 108:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****  */
 109:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define PROGMEM __ATTR_PROGMEM__
 110:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 111:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #ifdef __cplusplus
 112:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern "C" {
 113:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif
 114:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 115:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #if defined(__DOXYGEN__)
 116:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /*
 117:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****  * Doxygen doesn't grok the appended attribute syntax of
 118:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****  * GCC, and confuses the typedefs with function decls, so
 119:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****  * supply a doxygen-friendly view.
 120:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****  */
 121:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 122:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /**
 123:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 124:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \typedef prog_void
 125:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 126:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 127:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 128:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 129:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 130:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    now the recommended usage.
 131:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 132:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 133:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 134:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    #define directive, or by a -D compiler option.)
 135:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 136:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Type of a "void" object located in flash ROM.  Does not make much
 137:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    sense by itself, but can be used to declare a "void *" object in
 138:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    flash ROM.
 139:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** */
 140:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef void PROGMEM prog_void;
 141:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 142:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /**
 143:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 144:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \typedef prog_char
 145:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 146:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 147:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 148:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 149:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 150:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    now the recommended usage.
 151:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 152:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 153:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 154:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    #define directive, or by a -D compiler option.)
 155:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 156:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Type of a "char" object located in flash ROM.
 157:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** */
 158:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef char PROGMEM prog_char;
 159:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 160:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /**
 161:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 162:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \typedef prog_uchar
 163:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 164:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 165:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 166:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 167:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 168:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    now the recommended usage.
 169:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 170:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 171:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 172:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    #define directive, or by a -D compiler option.)
 173:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 174:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Type of an "unsigned char" object located in flash ROM.
 175:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** */
 176:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef unsigned char PROGMEM prog_uchar;
 177:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 178:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /**
 179:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 180:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \typedef prog_int8_t
 181:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 182:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 183:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 184:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 185:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 186:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    now the recommended usage.
 187:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 188:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 189:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 190:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    #define directive, or by a -D compiler option.)
 191:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 192:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Type of an "int8_t" object located in flash ROM.
 193:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** */
 194:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef int8_t PROGMEM prog_int8_t;
 195:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 196:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /**
 197:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 198:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \typedef prog_uint8_t
 199:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 200:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 201:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 202:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 203:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 204:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    now the recommended usage.
 205:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 206:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 207:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 208:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    #define directive, or by a -D compiler option.)
 209:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 210:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Type of an "uint8_t" object located in flash ROM.
 211:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** */
 212:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef uint8_t PROGMEM prog_uint8_t;
 213:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 214:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /**
 215:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 216:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \typedef prog_int16_t
 217:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 218:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 219:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 220:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 221:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 222:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    now the recommended usage.
 223:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 224:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 225:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 226:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    #define directive, or by a -D compiler option.)
 227:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 228:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Type of an "int16_t" object located in flash ROM.
 229:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** */
 230:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef int16_t PROGMEM prog_int16_t;
 231:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 232:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /**
 233:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 234:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \typedef prog_uint16_t
 235:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 236:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 237:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 238:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 239:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 240:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    now the recommended usage.
 241:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 242:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 243:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 244:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    #define directive, or by a -D compiler option.)
 245:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 246:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Type of an "uint16_t" object located in flash ROM.
 247:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** */
 248:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef uint16_t PROGMEM prog_uint16_t;
 249:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 250:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /**
 251:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 252:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \typedef prog_int32_t
 253:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 254:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 255:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 256:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 257:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 258:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    now the recommended usage.
 259:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 260:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 261:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 262:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    #define directive, or by a -D compiler option.)
 263:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 264:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Type of an "int32_t" object located in flash ROM.
 265:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** */
 266:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef int32_t PROGMEM prog_int32_t;
 267:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 268:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /**
 269:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 270:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \typedef prog_uint32_t
 271:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 272:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 273:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 274:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 275:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 276:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    now the recommended usage.
 277:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 278:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 279:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 280:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    #define directive, or by a -D compiler option.)
 281:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 282:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Type of an "uint32_t" object located in flash ROM.
 283:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** */
 284:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef uint32_t PROGMEM prog_uint32_t;
 285:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 286:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /**
 287:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 288:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \typedef prog_int64_t
 289:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 290:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 291:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 292:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 293:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 294:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    now the recommended usage.
 295:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 296:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 297:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 298:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    #define directive, or by a -D compiler option.)
 299:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 300:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Type of an "int64_t" object located in flash ROM.
 301:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 302:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \note This type is not available when the compiler
 303:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    option -mint8 is in effect.
 304:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** */
 305:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef int64_t PROGMEM prog_int64_t;
 306:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 307:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /**
 308:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 309:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \typedef prog_uint64_t
 310:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 311:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 312:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 313:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 314:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 315:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    now the recommended usage.
 316:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 317:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 318:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 319:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    #define directive, or by a -D compiler option.)
 320:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 321:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Type of an "uint64_t" object located in flash ROM.
 322:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 323:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    \note This type is not available when the compiler
 324:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    option -mint8 is in effect.
 325:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** */
 326:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef uint64_t PROGMEM prog_uint64_t;
 327:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 328:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 329:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def PGM_P
 330:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 331:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Used to declare a variable that is a pointer to a string in program
 332:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     space. */
 333:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 334:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #ifndef PGM_P
 335:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define PGM_P const char *
 336:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif
 337:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 338:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 339:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def PGM_VOID_P
 340:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 341:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Used to declare a generic pointer to an object in program space. */
 342:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 343:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #ifndef PGM_VOID_P
 344:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define PGM_VOID_P const void *
 345:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif
 346:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 347:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #elif defined(__PROG_TYPES_COMPAT__)  /* !DOXYGEN */
 348:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 349:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef void prog_void __attribute__((__progmem__,deprecated("prog_void type is deprecated.")));
 350:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef char prog_char __attribute__((__progmem__,deprecated("prog_char type is deprecated.")));
 351:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef unsigned char prog_uchar __attribute__((__progmem__,deprecated("prog_uchar type is deprecat
 352:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef int8_t    prog_int8_t   __attribute__((__progmem__,deprecated("prog_int8_t type is deprecat
 353:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef uint8_t   prog_uint8_t  __attribute__((__progmem__,deprecated("prog_uint8_t type is depreca
 354:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef int16_t   prog_int16_t  __attribute__((__progmem__,deprecated("prog_int16_t type is depreca
 355:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef uint16_t  prog_uint16_t __attribute__((__progmem__,deprecated("prog_uint16_t type is deprec
 356:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef int32_t   prog_int32_t  __attribute__((__progmem__,deprecated("prog_int32_t type is depreca
 357:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef uint32_t  prog_uint32_t __attribute__((__progmem__,deprecated("prog_uint32_t type is deprec
 358:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #if !__USING_MINT8
 359:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef int64_t   prog_int64_t  __attribute__((__progmem__,deprecated("prog_int64_t type is depreca
 360:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** typedef uint64_t  prog_uint64_t __attribute__((__progmem__,deprecated("prog_uint64_t type is deprec
 361:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif
 362:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 363:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #ifndef PGM_P
 364:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define PGM_P const prog_char *
 365:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif
 366:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 367:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #ifndef PGM_VOID_P
 368:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define PGM_VOID_P const prog_void *
 369:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif
 370:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 371:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #else /* !defined(__DOXYGEN__), !defined(__PROG_TYPES_COMPAT__) */
 372:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 373:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #ifndef PGM_P
 374:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define PGM_P const char *
 375:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif
 376:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 377:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #ifndef PGM_VOID_P
 378:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define PGM_VOID_P const void *
 379:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif
 380:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif /* defined(__DOXYGEN__), defined(__PROG_TYPES_COMPAT__) */
 381:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 382:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /* Although in C, we can get away with just using __c, it does not work in
 383:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    C++. We need to use &__c[0] to avoid the compiler puking. Dave Hylands
 384:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    explaned it thusly,
 385:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 386:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      Let's suppose that we use PSTR("Test"). In this case, the type returned
 387:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      by __c is a prog_char[5] and not a prog_char *. While these are
 388:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      compatible, they aren't the same thing (especially in C++). The type
 389:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      returned by &__c[0] is a prog_char *, which explains why it works
 390:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      fine. */
 391:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 392:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #if defined(__DOXYGEN__)
 393:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /*
 394:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****  * The #define below is just a dummy that serves documentation
 395:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****  * purposes only.
 396:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****  */
 397:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 398:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def PSTR(s)
 399:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 400:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Used to declare a static pointer to a string in program space. */
 401:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** # define PSTR(s) ((const PROGMEM char *)(s))
 402:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #else  /* !DOXYGEN */
 403:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /* The real thing. */
 404:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** # define PSTR(s) (__extension__({static const char __c[] PROGMEM = (s); &__c[0];}))
 405:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif /* DOXYGEN */
 406:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 407:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_classic__(addr)   \
 408:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                \
 409:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr); \
 410:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint8_t __result;           \
 411:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__        \
 412:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                           \
 413:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm" "\n\t"            \
 414:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %0, r0" "\n\t"     \
 415:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result)       \
 416:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "z" (__addr16)        \
 417:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r0"                  \
 418:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                          \
 419:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                   \
 420:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 421:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 422:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_tiny__(addr)      \
 423:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                \
 424:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr) + __AVR_TINY_PM_BASE_ADDRESS__; \
 425:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint8_t __result;           \
 426:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__                     \
 427:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                           \
 428:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "ld %0, z" "\n\t"       \
 429:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result)       \
 430:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "z" (__addr16)        \
 431:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                          \
 432:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                   \
 433:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 434:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 435:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_enhanced__(addr)  \
 436:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                \
 437:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr); \
 438:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint8_t __result;           \
 439:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__        \
 440:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                           \
 441:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm %0, Z" "\n\t"      \
 442:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result)       \
 443:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "z" (__addr16)        \
 444:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                          \
 445:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                   \
 446:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 447:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 448:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_word_classic__(addr)          \
 449:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                            \
 450:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr);   \
 451:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __result;                      \
 452:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                    \
 453:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                       \
 454:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 455:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %A0, r0"   "\n\t"              \
 456:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adiw r30, 1"   "\n\t"              \
 457:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 458:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %B0, r0"   "\n\t"              \
 459:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result), "=z" (__addr16)  \
 460:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "1" (__addr16)                    \
 461:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r0"                              \
 462:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                      \
 463:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                               \
 464:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 465:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 466:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_word_tiny__(addr)             \
 467:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                            \
 468:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr) + __AVR_TINY_PM_BASE_ADDRESS__; \
 469:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __result;                      \
 470:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__                                 \
 471:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                       \
 472:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "ld %A0, z+"     "\n\t"             \
 473:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "ld %B0, z"      "\n\t"             \
 474:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result), "=z" (__addr16)  \
 475:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "1" (__addr16)                    \
 476:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                      \
 477:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                               \
 478:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 479:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 480:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_word_enhanced__(addr)         \
 481:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                            \
 482:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr);   \
 483:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __result;                      \
 484:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                    \
 485:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                       \
 486:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm %A0, Z+"   "\n\t"              \
 487:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm %B0, Z"    "\n\t"              \
 488:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result), "=z" (__addr16)  \
 489:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "1" (__addr16)                    \
 490:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                      \
 491:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                               \
 492:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 493:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 494:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_dword_classic__(addr)         \
 495:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                            \
 496:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr);   \
 497:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __result;                      \
 498:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                    \
 499:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                       \
 500:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 501:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %A0, r0"   "\n\t"              \
 502:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adiw r30, 1"   "\n\t"              \
 503:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 504:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %B0, r0"   "\n\t"              \
 505:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adiw r30, 1"   "\n\t"              \
 506:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 507:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %C0, r0"   "\n\t"              \
 508:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adiw r30, 1"   "\n\t"              \
 509:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 510:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %D0, r0"   "\n\t"              \
 511:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result), "=z" (__addr16)  \
 512:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "1" (__addr16)                    \
 513:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r0"                              \
 514:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                      \
 515:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                               \
 516:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 517:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 518:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_dword_tiny__(addr)            \
 519:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                            \
 520:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr) + __AVR_TINY_PM_BASE_ADDRESS__; \
 521:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __result;                      \
 522:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__                                 \
 523:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                       \
 524:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "ld %A0, z+"    "\n\t"              \
 525:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "ld %B0, z+"    "\n\t"              \
 526:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "ld %C0, z+"    "\n\t"              \
 527:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "ld %D0, z"     "\n\t"              \
 528:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result), "=z" (__addr16)  \
 529:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "1" (__addr16)                    \
 530:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                      \
 531:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                               \
 532:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 533:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 534:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_dword_enhanced__(addr)        \
 535:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                            \
 536:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr);   \
 537:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __result;                      \
 538:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                    \
 539:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                       \
 540:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm %A0, Z+"   "\n\t"              \
 541:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm %B0, Z+"   "\n\t"              \
 542:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm %C0, Z+"   "\n\t"              \
 543:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm %D0, Z"    "\n\t"              \
 544:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result), "=z" (__addr16)  \
 545:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "1" (__addr16)                    \
 546:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                      \
 547:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                               \
 548:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 549:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 550:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_float_classic__(addr)         \
 551:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                            \
 552:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr);   \
 553:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     float __result;                         \
 554:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                    \
 555:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                       \
 556:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 557:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %A0, r0"   "\n\t"              \
 558:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adiw r30, 1"   "\n\t"              \
 559:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 560:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %B0, r0"   "\n\t"              \
 561:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adiw r30, 1"   "\n\t"              \
 562:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 563:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %C0, r0"   "\n\t"              \
 564:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adiw r30, 1"   "\n\t"              \
 565:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 566:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %D0, r0"   "\n\t"              \
 567:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result), "=z" (__addr16)  \
 568:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "1" (__addr16)                    \
 569:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r0"                              \
 570:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                      \
 571:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                               \
 572:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 573:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 574:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_float_tiny__(addr)            \
 575:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                            \
 576:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr) + __AVR_TINY_PM_BASE_ADDRESS__; \
 577:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     float __result;                         \
 578:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__                                 \
 579:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                       \
 580:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "ld %A0, z+"   "\n\t"               \
 581:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "ld %B0, z+"   "\n\t"               \
 582:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "ld %C0, z+"   "\n\t"               \
 583:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "ld %D0, z"    "\n\t"               \
 584:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result), "=z" (__addr16)  \
 585:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "1" (__addr16)                    \
 586:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                      \
 587:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                               \
 588:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 589:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 590:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_float_enhanced__(addr)        \
 591:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                            \
 592:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr);   \
 593:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     float __result;                         \
 594:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                    \
 595:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                       \
 596:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm %A0, Z+"   "\n\t"              \
 597:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm %B0, Z+"   "\n\t"              \
 598:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm %C0, Z+"   "\n\t"              \
 599:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "lpm %D0, Z"    "\n\t"              \
 600:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result), "=z" (__addr16)  \
 601:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "1" (__addr16)                    \
 602:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                      \
 603:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                               \
 604:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 605:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 606:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #if defined (__AVR_HAVE_LPMX__)
 607:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM(addr)         __LPM_enhanced__(addr)
 608:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_word(addr)    __LPM_word_enhanced__(addr)
 609:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_dword(addr)   __LPM_dword_enhanced__(addr)
 610:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_float(addr)   __LPM_float_enhanced__(addr)
 611:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /*
 612:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** Macro to read data from program memory for avr tiny parts(tiny 4/5/9/10/20/40).
 613:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** why:
 614:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** - LPM instruction is not available in AVR_TINY instruction set.
 615:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** - Programs are executed starting from address 0x0000 in program memory.
 616:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** But it must be addressed starting from 0x4000 when accessed via data memory.
 617:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** Reference: TINY device (ATTiny 4,5,9,10,20 and 40) datasheets
 618:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** Bug: avrtc-536
 619:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** */
 620:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #elif defined (__AVR_TINY__)
 621:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM(addr)         __LPM_tiny__(addr)
 622:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_word(addr)    __LPM_word_tiny__(addr)
 623:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_dword(addr)   __LPM_dword_tiny__(addr)
 624:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_float(addr)   __LPM_float_tiny__(addr)
 625:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #else
 626:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM(addr)         __LPM_classic__(addr)
 627:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_word(addr)    __LPM_word_classic__(addr)
 628:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_dword(addr)   __LPM_dword_classic__(addr)
 629:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __LPM_float(addr)   __LPM_float_classic__(addr)
 630:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif
 631:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 632:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 633:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def pgm_read_byte_near(address_short)
 634:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Read a byte from the program space with a 16-bit (near) address. 
 635:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note The address is a byte address.
 636:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 637:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 638:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define pgm_read_byte_near(address_short) __LPM((uint16_t)(address_short))
 639:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 640:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 641:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def pgm_read_word_near(address_short)
 642:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Read a word from the program space with a 16-bit (near) address. 
 643:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
 644:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 645:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 646:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define pgm_read_word_near(address_short) __LPM_word((uint16_t)(address_short))
 647:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 648:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 649:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def pgm_read_dword_near(address_short)
 650:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Read a double word from the program space with a 16-bit (near) address. 
 651:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
 652:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 653:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 654:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define pgm_read_dword_near(address_short) \
 655:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __LPM_dword((uint16_t)(address_short))
 656:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 657:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 658:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def pgm_read_float_near(address_short)
 659:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Read a float from the program space with a 16-bit (near) address. 
 660:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
 661:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 662:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 663:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define pgm_read_float_near(address_short) \
 664:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __LPM_float((uint16_t)(address_short))
 665:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 666:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 667:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def pgm_read_ptr_near(address_short)
 668:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Read a pointer from the program space with a 16-bit (near) address. 
 669:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
 670:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 671:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 672:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define pgm_read_ptr_near(address_short) \
 673:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (void*)__LPM_word((uint16_t)(address_short))
 674:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 675:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #if defined(RAMPZ) || defined(__DOXYGEN__)
 676:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 677:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /* Only for devices with more than 64K of program memory.
 678:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    RAMPZ must be defined (see iom103.h, iom128.h).
 679:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** */
 680:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 681:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /* The classic functions are needed for ATmega103. */
 682:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 683:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_classic__(addr)      \
 684:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                    \
 685:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 686:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint8_t __result;               \
 687:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__            \
 688:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                               \
 689:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, %C1" "\n\t"        \
 690:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov r31, %B1" "\n\t"       \
 691:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov r30, %A1" "\n\t"       \
 692:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm" "\n\t"               \
 693:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %0, r0" "\n\t"         \
 694:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result)           \
 695:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r" (__addr32),           \
 696:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ)) \
 697:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r0", "r30", "r31"        \
 698:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                              \
 699:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                       \
 700:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 701:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 702:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_enhanced__(addr)     \
 703:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                    \
 704:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 705:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint8_t __result;               \
 706:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__            \
 707:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                               \
 708:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, %C1" "\n\t"        \
 709:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "movw r30, %1" "\n\t"       \
 710:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %0, Z+" "\n\t"        \
 711:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result)           \
 712:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r" (__addr32),           \
 713:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ)) \
 714:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r30", "r31"              \
 715:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                              \
 716:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                       \
 717:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 718:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 719:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_xmega__(addr)        \
 720:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                    \
 721:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 722:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint8_t __result;               \
 723:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__            \
 724:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                               \
 725:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "in __tmp_reg__, %2" "\n\t" \
 726:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, %C1" "\n\t"        \
 727:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "movw r30, %1" "\n\t"       \
 728:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %0, Z+" "\n\t"        \
 729:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, __tmp_reg__"       \
 730:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result)           \
 731:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r" (__addr32),           \
 732:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ)) \
 733:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r30", "r31"              \
 734:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                              \
 735:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                       \
 736:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 737:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 738:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_word_classic__(addr)     \
 739:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                        \
 740:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 741:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __result;                  \
 742:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                \
 743:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                   \
 744:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, %C1"   "\n\t"          \
 745:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov r31, %B1"  "\n\t"          \
 746:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov r30, %A1"  "\n\t"          \
 747:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm"          "\n\t"          \
 748:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %A0, r0"   "\n\t"          \
 749:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "in r0, %2"     "\n\t"          \
 750:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adiw r30, 1"   "\n\t"          \
 751:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adc r0, __zero_reg__" "\n\t"   \
 752:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, r0"    "\n\t"          \
 753:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm"          "\n\t"          \
 754:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %B0, r0"   "\n\t"          \
 755:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result)               \
 756:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r" (__addr32),               \
 757:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))     \
 758:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r0", "r30", "r31"            \
 759:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                  \
 760:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                           \
 761:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 762:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 763:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_word_enhanced__(addr)    \
 764:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                        \
 765:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 766:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __result;                  \
 767:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                \
 768:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                   \
 769:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, %C1"   "\n\t"          \
 770:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "movw r30, %1"  "\n\t"          \
 771:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %A0, Z+"  "\n\t"          \
 772:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %B0, Z"   "\n\t"          \
 773:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result)               \
 774:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r" (__addr32),               \
 775:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))     \
 776:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r30", "r31"                  \
 777:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                  \
 778:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                           \
 779:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 780:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 781:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_word_xmega__(addr)       \
 782:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                        \
 783:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 784:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint16_t __result;                  \
 785:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                \
 786:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                   \
 787:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "in __tmp_reg__, %2" "\n\t"     \
 788:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, %C1"   "\n\t"          \
 789:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "movw r30, %1"  "\n\t"          \
 790:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %A0, Z+"  "\n\t"          \
 791:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %B0, Z"   "\n\t"          \
 792:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, __tmp_reg__"           \
 793:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result)               \
 794:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r" (__addr32),               \
 795:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))     \
 796:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r30", "r31"                  \
 797:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                  \
 798:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                           \
 799:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 800:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 801:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_dword_classic__(addr)      \
 802:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                          \
 803:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 804:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __result;                    \
 805:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                  \
 806:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                     \
 807:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, %C1"          "\n\t"     \
 808:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov r31, %B1"         "\n\t"     \
 809:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov r30, %A1"         "\n\t"     \
 810:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm"                 "\n\t"     \
 811:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %A0, r0"          "\n\t"     \
 812:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "in r0, %2"            "\n\t"     \
 813:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adiw r30, 1"          "\n\t"     \
 814:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adc r0, __zero_reg__" "\n\t"     \
 815:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, r0"           "\n\t"     \
 816:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm"                 "\n\t"     \
 817:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %B0, r0"          "\n\t"     \
 818:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "in r0, %2"            "\n\t"     \
 819:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adiw r30, 1"          "\n\t"     \
 820:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adc r0, __zero_reg__" "\n\t"     \
 821:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, r0"           "\n\t"     \
 822:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm"                 "\n\t"     \
 823:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %C0, r0"          "\n\t"     \
 824:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "in r0, %2"            "\n\t"     \
 825:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adiw r30, 1"          "\n\t"     \
 826:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adc r0, __zero_reg__" "\n\t"     \
 827:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, r0"           "\n\t"     \
 828:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm"                 "\n\t"     \
 829:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %D0, r0"          "\n\t"     \
 830:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result)                 \
 831:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r" (__addr32),                 \
 832:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))       \
 833:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r0", "r30", "r31"              \
 834:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                    \
 835:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                             \
 836:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 837:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 838:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_dword_enhanced__(addr)     \
 839:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                          \
 840:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 841:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __result;                    \
 842:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                  \
 843:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                     \
 844:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, %C1"   "\n\t"            \
 845:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "movw r30, %1"  "\n\t"            \
 846:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %A0, Z+"  "\n\t"            \
 847:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %B0, Z+"  "\n\t"            \
 848:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %C0, Z+"  "\n\t"            \
 849:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %D0, Z"   "\n\t"            \
 850:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result)                 \
 851:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r" (__addr32),                 \
 852:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))       \
 853:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r30", "r31"                    \
 854:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                    \
 855:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                             \
 856:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 857:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 858:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_dword_xmega__(addr)        \
 859:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                          \
 860:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 861:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __result;                    \
 862:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                  \
 863:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                     \
 864:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "in __tmp_reg__, %2" "\n\t"       \
 865:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, %C1"   "\n\t"            \
 866:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "movw r30, %1"  "\n\t"            \
 867:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %A0, Z+"  "\n\t"            \
 868:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %B0, Z+"  "\n\t"            \
 869:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %C0, Z+"  "\n\t"            \
 870:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %D0, Z"   "\n\t"            \
 871:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, __tmp_reg__"             \
 872:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result)                 \
 873:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r" (__addr32),                 \
 874:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))       \
 875:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r30", "r31"                    \
 876:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                    \
 877:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                             \
 878:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 879:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 880:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_float_classic__(addr)      \
 881:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                          \
 882:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 883:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     float __result;                       \
 884:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                  \
 885:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                     \
 886:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, %C1"          "\n\t"     \
 887:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov r31, %B1"         "\n\t"     \
 888:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov r30, %A1"         "\n\t"     \
 889:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm"                 "\n\t"     \
 890:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %A0, r0"          "\n\t"     \
 891:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "in r0, %2"            "\n\t"     \
 892:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adiw r30, 1"          "\n\t"     \
 893:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adc r0, __zero_reg__" "\n\t"     \
 894:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, r0"           "\n\t"     \
 895:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm"                 "\n\t"     \
 896:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %B0, r0"          "\n\t"     \
 897:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "in r0, %2"            "\n\t"     \
 898:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adiw r30, 1"          "\n\t"     \
 899:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adc r0, __zero_reg__" "\n\t"     \
 900:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, r0"           "\n\t"     \
 901:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm"                 "\n\t"     \
 902:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %C0, r0"          "\n\t"     \
 903:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "in r0, %2"            "\n\t"     \
 904:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adiw r30, 1"          "\n\t"     \
 905:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "adc r0, __zero_reg__" "\n\t"     \
 906:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, r0"           "\n\t"     \
 907:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm"                 "\n\t"     \
 908:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "mov %D0, r0"          "\n\t"     \
 909:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result)                 \
 910:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r" (__addr32),                 \
 911:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))       \
 912:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r0", "r30", "r31"              \
 913:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                    \
 914:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                             \
 915:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 916:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 917:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_float_enhanced__(addr)     \
 918:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                          \
 919:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 920:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     float __result;                       \
 921:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                  \
 922:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                     \
 923:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, %C1"   "\n\t"            \
 924:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "movw r30, %1"  "\n\t"            \
 925:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %A0, Z+"  "\n\t"            \
 926:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %B0, Z+"  "\n\t"            \
 927:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %C0, Z+"  "\n\t"            \
 928:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %D0, Z"   "\n\t"            \
 929:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result)                 \
 930:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r" (__addr32),                 \
 931:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))       \
 932:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r30", "r31"                    \
 933:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                    \
 934:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                             \
 935:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 936:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 937:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_float_xmega__(addr)        \
 938:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** (__extension__({                          \
 939:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 940:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     float __result;                       \
 941:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                  \
 942:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     (                                     \
 943:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "in __tmp_reg__, %2" "\n\t"       \
 944:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, %C1"   "\n\t"            \
 945:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "movw r30, %1"  "\n\t"            \
 946:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %A0, Z+"  "\n\t"            \
 947:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %B0, Z+"  "\n\t"            \
 948:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %C0, Z+"  "\n\t"            \
 949:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "elpm %D0, Z"   "\n\t"            \
 950:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         "out %2, __tmp_reg__"             \
 951:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "=r" (__result)                 \
 952:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r" (__addr32),                 \
 953:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))       \
 954:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****         : "r30", "r31"                    \
 955:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     );                                    \
 956:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     __result;                             \
 957:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** }))
 958:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 959:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /* 
 960:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** Check for architectures that implement RAMPD (avrxmega3, avrxmega5, 
 961:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** avrxmega7) as they need to save/restore RAMPZ for ELPM macros so it does
 962:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** not interfere with data accesses. 
 963:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** */
 964:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #if defined (__AVR_HAVE_RAMPD__)
 965:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 966:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM(addr)        __ELPM_xmega__(addr)
 967:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_word(addr)   __ELPM_word_xmega__(addr)
 968:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_dword(addr)  __ELPM_dword_xmega__(addr)
 969:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_float(addr)  __ELPM_float_xmega__(addr)
 970:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 971:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #else
 972:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 973:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #if defined (__AVR_HAVE_LPMX__)
 974:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 975:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM(addr)        __ELPM_enhanced__(addr)
 976:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_word(addr)   __ELPM_word_enhanced__(addr)
 977:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_dword(addr)  __ELPM_dword_enhanced__(addr)
 978:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_float(addr)  __ELPM_float_enhanced__(addr)
 979:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 980:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #else
 981:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 982:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM(addr)        __ELPM_classic__(addr)
 983:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_word(addr)   __ELPM_word_classic__(addr)
 984:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_dword(addr)  __ELPM_dword_classic__(addr)
 985:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define __ELPM_float(addr)  __ELPM_float_classic__(addr)
 986:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 987:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif  /* __AVR_HAVE_LPMX__ */
 988:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 989:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif  /* __AVR_HAVE_RAMPD__ */
 990:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 991:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 992:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 993:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def pgm_read_byte_far(address_long)
 994:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Read a byte from the program space with a 32-bit (far) address. 
 995:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 996:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
 997:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 998:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
 999:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define pgm_read_byte_far(address_long)  __ELPM((uint32_t)(address_long))
1000:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1001:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1002:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def pgm_read_word_far(address_long)
1003:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Read a word from the program space with a 32-bit (far) address. 
1004:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1005:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note The address is a byte address.
1006:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     The address is in the program space. */
1007:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1008:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define pgm_read_word_far(address_long)  __ELPM_word((uint32_t)(address_long))
1009:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1010:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1011:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def pgm_read_dword_far(address_long)
1012:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Read a double word from the program space with a 32-bit (far) address. 
1013:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1014:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note The address is a byte address.
1015:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     The address is in the program space. */
1016:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1017:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define pgm_read_dword_far(address_long) __ELPM_dword((uint32_t)(address_long))
1018:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1019:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1020:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def pgm_read_float_far(address_long)
1021:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Read a float from the program space with a 32-bit (far) address. 
1022:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1023:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note The address is a byte address.
1024:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     The address is in the program space. */
1025:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1026:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define pgm_read_float_far(address_long) __ELPM_float((uint32_t)(address_long))
1027:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1028:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1029:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def pgm_read_ptr_far(address_long)
1030:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Read a pointer from the program space with a 32-bit (far) address. 
1031:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1032:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note The address is a byte address.
1033:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     The address is in the program space. */
1034:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1035:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define pgm_read_ptr_far(address_long) (void*)__ELPM_word((uint32_t)(address_long))
1036:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1037:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #endif /* RAMPZ or __DOXYGEN__ */
1038:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1039:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1040:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def pgm_read_byte(address_short)
1041:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Read a byte from the program space with a 16-bit (near) address. 
1042:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1043:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
1044:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     The address is in the program space. */
1045:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1046:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define pgm_read_byte(address_short)    pgm_read_byte_near(address_short)
1047:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1048:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1049:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def pgm_read_word(address_short)
1050:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Read a word from the program space with a 16-bit (near) address. 
1051:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1052:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
1053:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     The address is in the program space. */
1054:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1055:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define pgm_read_word(address_short)    pgm_read_word_near(address_short)
1056:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1057:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1058:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def pgm_read_dword(address_short)
1059:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Read a double word from the program space with a 16-bit (near) address. 
1060:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1061:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
1062:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     The address is in the program space. */
1063:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1064:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define pgm_read_dword(address_short)   pgm_read_dword_near(address_short)
1065:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1066:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1067:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def pgm_read_float(address_short)
1068:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Read a float from the program space with a 16-bit (near) address. 
1069:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1070:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
1071:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     The address is in the program space. */
1072:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1073:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define pgm_read_float(address_short)   pgm_read_float_near(address_short)
1074:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1075:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1076:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \def pgm_read_ptr(address_short)
1077:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     Read a pointer from the program space with a 16-bit (near) address. 
1078:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1079:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
1080:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****     The address is in the program space. */
1081:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1082:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define pgm_read_ptr(address_short)     pgm_read_ptr_near(address_short)
1083:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1084:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** /* pgm_get_far_address() macro
1085:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1086:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    This macro facilitates the obtention of a 32 bit "far" pointer (only 24 bits
1087:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    used) to data even passed the 64KB limit for the 16 bit ordinary pointer. It
1088:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    is similar to the '&' operator, with some limitations.
1089:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1090:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    Comments:
1091:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1092:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    - The overhead is minimal and it's mainly due to the 32 bit size operation.
1093:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1094:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    - 24 bit sizes guarantees the code compatibility for use in future devices.
1095:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1096:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    - hh8() is an undocumented feature but seems to give the third significant byte
1097:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      of a 32 bit data and accepts symbols, complementing the functionality of hi8()
1098:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      and lo8(). There is not an equivalent assembler function to get the high
1099:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      significant byte.
1100:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1101:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    - 'var' has to be resolved at linking time as an existing symbol, i.e, a simple
1102:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      type variable name, an array name (not an indexed element of the array, if the
1103:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      index is a constant the compiler does not complain but fails to get the address
1104:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      if optimization is enabled), a struct name or a struct field name, a function
1105:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      identifier, a linker defined identifier,...
1106:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1107:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****    - The returned value is the identifier's VMA (virtual memory address) determined
1108:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      by the linker and falls in the corresponding memory region. The AVR Harvard
1109:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      architecture requires non overlapping VMA areas for the multiple address spaces
1110:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      in the processor: Flash ROM, RAM, and EEPROM. Typical offset for this are
1111:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      0x00000000, 0x00800xx0, and 0x00810000 respectively, derived from the linker
1112:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 	 script used and linker options. The value returned can be seen then as a
1113:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      universal pointer.
1114:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1115:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** */
1116:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1117:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** #define pgm_get_far_address(var)                          \
1118:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** ({                                                    \
1119:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 	uint_farptr_t tmp;                                \
1120:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****                                                       \
1121:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 	__asm__ __volatile__(                             \
1122:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****                                                       \
1123:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 			"ldi	%A0, lo8(%1)"           "\n\t"    \
1124:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 			"ldi	%B0, hi8(%1)"           "\n\t"    \
1125:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 			"ldi	%C0, hh8(%1)"           "\n\t"    \
1126:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 			"clr	%D0"                    "\n\t"    \
1127:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 		:                                             \
1128:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 			"=d" (tmp)                                \
1129:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 		:                                             \
1130:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 			"p"  (&(var))                             \
1131:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 	);                                                \
1132:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 	tmp;                                              \
1133:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** })
1134:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1135:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1136:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1137:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern const void * memchr_P(const void *, int __val, size_t __len) __ATTR_CONST__;
1138:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern int memcmp_P(const void *, const void *, size_t) __ATTR_PURE__;
1139:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern void *memccpy_P(void *, const void *, int __val, size_t);
1140:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern void *memcpy_P(void *, const void *, size_t);
1141:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern void *memmem_P(const void *, size_t, const void *, size_t) __ATTR_PURE__;
1142:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern const void * memrchr_P(const void *, int __val, size_t __len) __ATTR_CONST__;
1143:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern char *strcat_P(char *, const char *);
1144:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern const char * strchr_P(const char *, int __val) __ATTR_CONST__;
1145:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern const char * strchrnul_P(const char *, int __val) __ATTR_CONST__;
1146:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern int strcmp_P(const char *, const char *) __ATTR_PURE__;
1147:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern char *strcpy_P(char *, const char *);
1148:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern int strcasecmp_P(const char *, const char *) __ATTR_PURE__;
1149:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern char *strcasestr_P(const char *, const char *) __ATTR_PURE__;
1150:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern size_t strcspn_P(const char *__s, const char * __reject) __ATTR_PURE__;
1151:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern size_t strlcat_P (char *, const char *, size_t );
1152:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern size_t strlcpy_P (char *, const char *, size_t );
1153:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern size_t __strlen_P(const char *) __ATTR_CONST__;  /* program memory can't change */
1154:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern size_t strnlen_P(const char *, size_t) __ATTR_CONST__; /* program memory can't change */
1155:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern int strncmp_P(const char *, const char *, size_t) __ATTR_PURE__;
1156:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern int strncasecmp_P(const char *, const char *, size_t) __ATTR_PURE__;
1157:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern char *strncat_P(char *, const char *, size_t);
1158:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern char *strncpy_P(char *, const char *, size_t);
1159:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern char *strpbrk_P(const char *__s, const char * __accept) __ATTR_PURE__;
1160:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern const char * strrchr_P(const char *, int __val) __ATTR_CONST__;
1161:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern char *strsep_P(char **__sp, const char * __delim);
1162:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern size_t strspn_P(const char *__s, const char * __accept) __ATTR_PURE__;
1163:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern char *strstr_P(const char *, const char *) __ATTR_PURE__;
1164:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern char *strtok_P(char *__s, const char * __delim);
1165:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern char *strtok_rP(char *__s, const char * __delim, char **__last);
1166:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1167:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern size_t strlen_PF (uint_farptr_t src) __ATTR_CONST__; /* program memory can't change */
1168:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern size_t strnlen_PF (uint_farptr_t src, size_t len) __ATTR_CONST__; /* program memory can't ch
1169:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern void *memcpy_PF (void *dest, uint_farptr_t src, size_t len);
1170:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern char *strcpy_PF (char *dest, uint_farptr_t src);
1171:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern char *strncpy_PF (char *dest, uint_farptr_t src, size_t len);
1172:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern char *strcat_PF (char *dest, uint_farptr_t src);
1173:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern size_t strlcat_PF (char *dst, uint_farptr_t src, size_t siz);
1174:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern char *strncat_PF (char *dest, uint_farptr_t src, size_t len);
1175:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern int strcmp_PF (const char *s1, uint_farptr_t s2) __ATTR_PURE__;
1176:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern int strncmp_PF (const char *s1, uint_farptr_t s2, size_t n) __ATTR_PURE__;
1177:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern int strcasecmp_PF (const char *s1, uint_farptr_t s2) __ATTR_PURE__;
1178:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern int strncasecmp_PF (const char *s1, uint_farptr_t s2, size_t n) __ATTR_PURE__;
1179:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern char *strstr_PF (const char *s1, uint_farptr_t s2);
1180:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern size_t strlcpy_PF (char *dst, uint_farptr_t src, size_t siz);
1181:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** extern int memcmp_PF(const void *, uint_farptr_t, size_t) __ATTR_PURE__;
1182:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1183:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** 
1184:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** __attribute__((__always_inline__)) static inline size_t strlen_P(const char * s);
1185:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h **** static inline size_t strlen_P(const char *s) {
1186:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****   return __builtin_constant_p(__builtin_strlen(s))
1187:/usr/local/CrossPack-AVR-20131216/avr/include/avr/pgmspace.h ****      ? __builtin_strlen(s) : __strlen_P(s);
 1430               	.LM173:
 1431 04c2 CB01      		movw r24,r22
 1432 04c4 0E94 0000 		call __strlen_P
 1433               	.LBE25:
 1434               	.LBE24:
 1436               	.Ltext4:
1058:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             break;
1059:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         uint8_t len = strlen_P(ci.pInfo);
1060:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         max = (len>max) ? len : max;
 1438               	.LM174:
 1439 04c8 C817      		cp r28,r24
 1440 04ca 00F4      		brsh .L87
 1441 04cc C82F      		mov r28,r24
 1442               	.L87:
1056:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         struct Sys_MonCmdInfo ci = sys_getMonCmdInfo(i++);
 1444               	.LM175:
 1445 04ce 8D2F      		mov r24,r29
 1446               	.LBE23:
1061:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
 1448               	.LM176:
 1449 04d0 00C0      		rjmp .L88
 1450               	.L86:
1062:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1063:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     i = 0;
 1452               	.LM177:
 1453 04d2 80E0      		ldi r24,0
 1454               	.LBB26:
1064:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     while (1)
1065:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
1066:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         struct Sys_MonCmdInfo ci = sys_getMonCmdInfo(i++);
1067:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (ci.pFunction == NULL)
1068:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             break;
1069:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         
1070:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys_printString_P(ci.pInfo);
1071:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         for (j=strlen_P(ci.pInfo); j<max+2; j++)
 1456               	.LM178:
 1457 04d4 D0E0      		ldi r29,0
 1458 04d6 2196      		adiw r28,1
 1459               	.L92:
1066:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         struct Sys_MonCmdInfo ci = sys_getMonCmdInfo(i++);
 1461               	.LM179:
 1462 04d8 9924      		clr r9
 1463 04da 9394      		inc r9
 1464 04dc 980E      		add r9,r24
 1465 04de 0E94 0000 		call sys_getMonCmdInfo
 1466 04e2 6B01      		movw r12,r22
 1467 04e4 7C01      		movw r14,r24
1067:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (ci.pFunction == NULL)
 1469               	.LM180:
 1470 04e6 EF28      		or r14,r15
 1471 04e8 01F0      		breq .L89
1070:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys_printString_P(ci.pInfo);
 1473               	.LM181:
 1474 04ea CB01      		movw r24,r22
 1475 04ec 0E94 0000 		call sys_printString_P
 1476               	.LBB27:
 1477               	.LBB28:
 1479               	.Ltext5:
 1481               	.LM182:
 1482 04f0 C601      		movw r24,r12
 1483 04f2 0E94 0000 		call __strlen_P
 1484 04f6 5C01      		movw r10,r24
 1485               	.LBE28:
 1486               	.LBE27:
 1488               	.Ltext6:
 1490               	.LM183:
 1491 04f8 882E      		mov r8,r24
 1492 04fa 00E0      		ldi r16,0
 1493 04fc 10E0      		ldi r17,0
 1494               	.L90:
 1495 04fe 882D      		mov r24,r8
 1496 0500 800F      		add r24,r16
 1498               	.LM184:
 1499 0502 90E0      		ldi r25,0
 1500 0504 0F5F      		subi r16,-1
 1501 0506 1F4F      		sbci r17,-1
 1502 0508 C817      		cp r28,r24
 1503 050a D907      		cpc r29,r25
 1504 050c 04F0      		brlt .L93
1072:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             putchar(' ');
 1506               	.LM185:
 1507 050e 6091 0000 		lds r22,__iob+2
 1508 0512 7091 0000 		lds r23,__iob+2+1
 1509 0516 80E2      		ldi r24,lo8(32)
 1510 0518 90E0      		ldi r25,0
 1511 051a 0E94 0000 		call fputc
 1512 051e 00C0      		rjmp .L90
 1513               	.L93:
1073:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys_puts_P(ci.pInfo + strlen_P(ci.pInfo) + 1);
 1515               	.LM186:
 1516 0520 C501      		movw r24,r10
 1517 0522 0196      		adiw r24,1
 1518 0524 8C0D      		add r24,r12
 1519 0526 9D1D      		adc r25,r13
 1520 0528 0E94 0000 		call sys_puts_P
1066:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         struct Sys_MonCmdInfo ci = sys_getMonCmdInfo(i++);
 1522               	.LM187:
 1523 052c 892D      		mov r24,r9
 1524               	.LBE26:
1074:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
 1526               	.LM188:
 1527 052e 00C0      		rjmp .L92
 1528               	.L89:
1075:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1076:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return 0;
1077:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 1530               	.LM189:
 1531 0530 80E0      		ldi r24,0
 1532               	/* epilogue start */
 1533 0532 DF91      		pop r29
 1534 0534 CF91      		pop r28
 1535 0536 1F91      		pop r17
 1536 0538 0F91      		pop r16
 1537 053a FF90      		pop r15
 1538 053c EF90      		pop r14
 1539 053e DF90      		pop r13
 1540 0540 CF90      		pop r12
 1541 0542 BF90      		pop r11
 1542 0544 AF90      		pop r10
 1543 0546 9F90      		pop r9
 1544 0548 8F90      		pop r8
 1545 054a 0895      		ret
 1557               	.Lscope26:
 1560               	.global	sys_mon_printUsageInfo
 1562               	sys_mon_printUsageInfo:
 830:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 1564               	.LM190:
 1565               	.LFBB27:
 1566 054c EF92      		push r14
 1567 054e FF92      		push r15
 1568 0550 0F93      		push r16
 1569 0552 1F93      		push r17
 1570 0554 CF93      		push r28
 1571 0556 DF93      		push r29
 1572 0558 1F92      		push __zero_reg__
 1573 055a CDB7      		in r28,__SP_L__
 1574 055c DEB7      		in r29,__SP_H__
 1575               	/* prologue: function */
 1576               	/* frame size = 1 */
 1577               	/* stack size = 7 */
 1578               	.L__stack_usage = 7
 831:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     PGM_P p = pCmdInfo->pInfo;
 1580               	.LM191:
 1581 055e FC01      		movw r30,r24
 1582 0560 6081      		ld r22,Z
 1583 0562 7181      		ldd r23,Z+1
 1584               	.L96:
 1585               	.LBB29:
 839:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             memcpy_P(&c, p++, 1);
 1587               	.LM192:
 1588 0564 8B01      		movw r16,r22
 1589 0566 0F5F      		subi r16,-1
 1590 0568 1F4F      		sbci r17,-1
 1591 056a 41E0      		ldi r20,lo8(1)
 1592 056c 50E0      		ldi r21,0
 1593 056e CE01      		movw r24,r28
 1594 0570 0196      		adiw r24,1
 1595 0572 0E94 0000 		call memcpy_P
 841:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         while (c != 0);
 1597               	.LM193:
 1598 0576 8981      		ldd r24,Y+1
 1599 0578 8823      		tst r24
 1600 057a 01F0      		breq .L98
 839:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             memcpy_P(&c, p++, 1);
 1602               	.LM194:
 1603 057c B801      		movw r22,r16
 1604 057e 00C0      		rjmp .L96
 1605               	.L98:
 839:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             memcpy_P(&c, p++, 1);
 1607               	.LM195:
 1608 0580 7801      		movw r14,r16
 1609 0582 FFEF      		ldi r31,-1
 1610 0584 EF1A      		sub r14,r31
 1611 0586 FF0A      		sbc r15,r31
 1612 0588 41E0      		ldi r20,lo8(1)
 1613 058a 50E0      		ldi r21,0
 1614 058c B801      		movw r22,r16
 1615 058e CE01      		movw r24,r28
 1616 0590 0196      		adiw r24,1
 1617 0592 0E94 0000 		call memcpy_P
 841:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         while (c != 0);
 1619               	.LM196:
 1620 0596 8981      		ldd r24,Y+1
 1621 0598 8823      		tst r24
 1622 059a 01F0      		breq .L97
 839:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             memcpy_P(&c, p++, 1);
 1624               	.LM197:
 1625 059c 8701      		movw r16,r14
 1626 059e 00C0      		rjmp .L98
 1627               	.L97:
 1628               	.LBE29:
 843:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_printString_P(p);
 1630               	.LM198:
 1631 05a0 C701      		movw r24,r14
 1632 05a2 0E94 0000 		call sys_printString_P
 1633               	/* epilogue start */
 844:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 1635               	.LM199:
 1636 05a6 0F90      		pop __tmp_reg__
 1637 05a8 DF91      		pop r29
 1638 05aa CF91      		pop r28
 1639 05ac 1F91      		pop r17
 1640 05ae 0F91      		pop r16
 1641 05b0 FF90      		pop r15
 1642 05b2 EF90      		pop r14
 1643 05b4 0895      		ret
 1648               	.Lscope27:
 1649               		.section	.rodata.str1.1
 1650               	.LC5:
 1651 0037 2564 00   		.string	"%d"
 1652               		.text
 1654               	.global	sys_mon_ExecuteCmd
 1656               	sys_mon_ExecuteCmd:
 848:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 1658               	.LM200:
 1659               	.LFBB28:
 1660 05b6 CF92      		push r12
 1661 05b8 DF92      		push r13
 1662 05ba EF92      		push r14
 1663 05bc FF92      		push r15
 1664 05be 0F93      		push r16
 1665 05c0 1F93      		push r17
 1666 05c2 CF93      		push r28
 1667 05c4 DF93      		push r29
 1668 05c6 CDB7      		in r28,__SP_L__
 1669 05c8 DEB7      		in r29,__SP_H__
 1670 05ca 2C97      		sbiw r28,12
 1671 05cc 0FB6      		in __tmp_reg__,__SREG__
 1672 05ce F894      		cli
 1673 05d0 DEBF      		out __SP_H__,r29
 1674 05d2 0FBE      		out __SREG__,__tmp_reg__
 1675 05d4 CDBF      		out __SP_L__,r28
 1676               	/* prologue: function */
 1677               	/* frame size = 12 */
 1678               	/* stack size = 20 */
 1679               	.L__stack_usage = 20
 850:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_newline();
 1681               	.LM201:
 1682 05d6 0E94 0000 		call sys_newline
 1683 05da 9E01      		movw r18,r28
 1684 05dc 2F5F      		subi r18,-1
 1685 05de 3F4F      		sbci r19,-1
 856:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     char *ps = pmon->cmdLine;
 1687               	.LM202:
 1688 05e0 E0E0      		ldi r30,lo8(sys_mon+3)
 1689 05e2 F0E0      		ldi r31,hi8(sys_mon+3)
 857:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     argc = 0;
 1691               	.LM203:
 1692 05e4 D12C      		mov r13,__zero_reg__
 1693 05e6 122F      		mov r17,r18
 1694 05e8 032F      		mov r16,r19
 1695               	.L101:
 860:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     for (i=0; i<GLOBAL_MON_MAXARGV && *ps; i++)
 1697               	.LM204:
 1698 05ea 8081      		ld r24,Z
 1699 05ec 8823      		tst r24
 1700 05ee 01F0      		breq .L103
 1701               	.L107:
 1702 05f0 DF01      		movw r26,r30
 862:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         while(*ps==' ') ps++; // ignore leading spaces
 1704               	.LM205:
 1705 05f2 8191      		ld r24,Z+
 1706 05f4 8032      		cpi r24,lo8(32)
 1707 05f6 01F0      		breq .L107
 863:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (*ps == 0) break;
 1709               	.LM206:
 1710 05f8 8823      		tst r24
 1711 05fa 01F0      		breq .L103
 864:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         argv[i] = ps;
 1713               	.LM207:
 1714 05fc F901      		movw r30,r18
 1715 05fe A193      		st Z+,r26
 1716 0600 B193      		st Z+,r27
 1717 0602 9F01      		movw r18,r30
 865:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         argc++;
 1719               	.LM208:
 1720 0604 D394      		inc r13
 1721               	.L104:
 1722 0606 FD01      		movw r30,r26
 866:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         while (*ps != ' ' && *ps)
 1724               	.LM209:
 1725 0608 8D91      		ld r24,X+
 1726 060a 8032      		cpi r24,lo8(32)
 1727 060c 01F4      		brne .+2
 1728 060e 00C0      		rjmp .L105
 866:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         while (*ps != ' ' && *ps)
 1730               	.LM210:
 1731 0610 8111      		cpse r24,__zero_reg__
 1732 0612 00C0      		rjmp .L104
 1733               	.L119:
 860:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     for (i=0; i<GLOBAL_MON_MAXARGV && *ps; i++)
 1735               	.LM211:
 1736 0614 84E0      		ldi r24,lo8(4)
 1737 0616 D812      		cpse r13,r24
 1738 0618 00C0      		rjmp .L101
 1739               	.L103:
 857:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     argc = 0;
 1741               	.LM212:
 1742 061a 8D2D      		mov r24,r13
 1743               	.L108:
 871:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     for (;i<GLOBAL_MON_MAXARGV; i++)
 1745               	.LM213:
 1746 061c 8430      		cpi r24,lo8(4)
 1747 061e 00F4      		brsh .L138
 872:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         argv[i] = NULL;
 1749               	.LM214:
 1750 0620 E12F      		mov r30,r17
 1751 0622 F02F      		mov r31,r16
 1752 0624 E80F      		add r30,r24
 1753 0626 F11D      		adc r31,__zero_reg__
 1754 0628 E80F      		add r30,r24
 1755 062a F11D      		adc r31,__zero_reg__
 1756 062c 1182      		std Z+1,__zero_reg__
 1757 062e 1082      		st Z,__zero_reg__
 871:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     for (;i<GLOBAL_MON_MAXARGV; i++)
 1759               	.LM215:
 1760 0630 8F5F      		subi r24,lo8(-(1))
 1761 0632 00C0      		rjmp .L108
 1762               	.L138:
 885:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (argc>0 && *argv[0])
 1764               	.LM216:
 1765 0634 DD20      		tst r13
 1766 0636 01F4      		brne .+2
 1767 0638 00C0      		rjmp .L110
 885:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (argc>0 && *argv[0])
 1769               	.LM217:
 1770 063a E981      		ldd r30,Y+1
 1771 063c FA81      		ldd r31,Y+2
 1772 063e 8081      		ld r24,Z
 1773 0640 8823      		tst r24
 1774 0642 01F4      		brne .+2
 1775 0644 00C0      		rjmp .L110
 885:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (argc>0 && *argv[0])
 1777               	.LM218:
 1778 0646 80E0      		ldi r24,0
 1779               	.L118:
 1780               	.LBB30:
 890:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             struct Sys_MonCmdInfo ci = sys_getMonCmdInfo(i++);
 1782               	.LM219:
 1783 0648 CC24      		clr r12
 1784 064a C394      		inc r12
 1785 064c C80E      		add r12,r24
 1786 064e 0E94 0000 		call sys_getMonCmdInfo
 1787 0652 6987      		std Y+9,r22
 1788 0654 7A87      		std Y+10,r23
 1789 0656 8B87      		std Y+11,r24
 1790 0658 9C87      		std Y+12,r25
 891:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (ci.pFunction == NULL)
 1792               	.LM220:
 1793 065a EB84      		ldd r14,Y+11
 1794 065c FC84      		ldd r15,Y+12
 1795 065e E114      		cp r14,__zero_reg__
 1796 0660 F104      		cpc r15,__zero_reg__
 1797 0662 01F4      		brne .L111
 893:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_printString_P(SYS_PMEM_ERR1);
 1799               	.LM221:
 1800 0664 80E0      		ldi r24,lo8(SYS_PMEM_ERR1)
 1801 0666 90E0      		ldi r25,hi8(SYS_PMEM_ERR1)
 1802 0668 0E94 0000 		call sys_printString_P
 894:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 break;
 1804               	.LM222:
 1805 066c 00C0      		rjmp .L110
 1806               	.L111:
 896:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (strcmp_P(pmon->cmdLine, ci.pInfo)==0)
 1808               	.LM223:
 1809 066e 6985      		ldd r22,Y+9
 1810 0670 7A85      		ldd r23,Y+10
 1811 0672 80E0      		ldi r24,lo8(sys_mon+3)
 1812 0674 90E0      		ldi r25,hi8(sys_mon+3)
 1813 0676 0E94 0000 		call strcmp_P
 1814 067a 892B      		or r24,r25
 1815 067c 01F4      		brne .L113
 898:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 if (argc==2 && strcmp_P(argv[1], SYS_PMEM_CMD_HELP)==0)
 1817               	.LM224:
 1818 067e E2E0      		ldi r30,lo8(2)
 1819 0680 DE12      		cpse r13,r30
 1820 0682 00C0      		rjmp .L114
 898:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 if (argc==2 && strcmp_P(argv[1], SYS_PMEM_CMD_HELP)==0)
 1822               	.LM225:
 1823 0684 60E0      		ldi r22,lo8(SYS_PMEM_CMD_HELP)
 1824 0686 70E0      		ldi r23,hi8(SYS_PMEM_CMD_HELP)
 1825 0688 8B81      		ldd r24,Y+3
 1826 068a 9C81      		ldd r25,Y+4
 1827 068c 0E94 0000 		call strcmp_P
 1828 0690 892B      		or r24,r25
 1829 0692 01F0      		breq .L137
 1830               	.L114:
 1831               	.LBB31:
 902:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                     int8_t retCode = (*ci.pFunction)(argc, argv);
 1833               	.LM226:
 1834 0694 612F      		mov r22,r17
 1835 0696 702F      		mov r23,r16
 1836 0698 8D2D      		mov r24,r13
 1837 069a F701      		movw r30,r14
 1838 069c 0995      		icall
 1839 069e 182F      		mov r17,r24
 903:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                     if (retCode)
 1841               	.LM227:
 1842 06a0 8823      		tst r24
 1843 06a2 01F0      		breq .L115
 905:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                         sys_printString_P(SYS_PMEM_ERR0);
 1845               	.LM228:
 1846 06a4 80E0      		ldi r24,lo8(SYS_PMEM_ERR0)
 1847 06a6 90E0      		ldi r25,hi8(SYS_PMEM_ERR0)
 1848 06a8 0E94 0000 		call sys_printString_P
 906:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                         printf("%d", retCode);
 1850               	.LM229:
 1851 06ac 212F      		mov r18,r17
 1852 06ae 3327      		clr r19
 1853 06b0 27FD      		sbrc r18,7
 1854 06b2 3095      		com r19
 1855 06b4 3F93      		push r19
 1856 06b6 1F93      		push r17
 1857 06b8 20E0      		ldi r18,lo8(.LC5)
 1858 06ba 30E0      		ldi r19,hi8(.LC5)
 1859 06bc 3F93      		push r19
 1860 06be 2F93      		push r18
 1861 06c0 0E94 0000 		call printf
 907:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                         if (retCode<0)
 1863               	.LM230:
 1864 06c4 0F90      		pop __tmp_reg__
 1865 06c6 0F90      		pop __tmp_reg__
 1866 06c8 0F90      		pop __tmp_reg__
 1867 06ca 0F90      		pop __tmp_reg__
 1868 06cc 17FF      		sbrs r17,7
 1869 06ce 00C0      		rjmp .L115
 909:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                             sys_printString_P(SYS_PMEM_ERR2);
 1871               	.LM231:
 1872 06d0 80E0      		ldi r24,lo8(SYS_PMEM_ERR2)
 1873 06d2 90E0      		ldi r25,hi8(SYS_PMEM_ERR2)
 1874 06d4 0E94 0000 		call sys_printString_P
 1875               	.L137:
 910:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                             sys_mon_printUsageInfo(&ci);
 1877               	.LM232:
 1878 06d8 CE01      		movw r24,r28
 1879 06da 0996      		adiw r24,9
 1880 06dc 0E94 0000 		call sys_mon_printUsageInfo
 1881               	.L115:
 1882               	.LBE31:
 914:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_newline();
 1884               	.LM233:
 1885 06e0 0E94 0000 		call sys_newline
 915:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 break;
 1887               	.LM234:
 1888 06e4 00C0      		rjmp .L110
 1889               	.L113:
 890:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             struct Sys_MonCmdInfo ci = sys_getMonCmdInfo(i++);
 1891               	.LM235:
 1892 06e6 8C2D      		mov r24,r12
 1893               	.LBE30:
 917:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         }
 1895               	.LM236:
 1896 06e8 00C0      		rjmp .L118
 1897               	.L110:
 920:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_printString_P(SYS_PMEM_LINESTART);
 1899               	.LM237:
 1900 06ea 80E0      		ldi r24,lo8(SYS_PMEM_LINESTART)
 1901 06ec 90E0      		ldi r25,hi8(SYS_PMEM_LINESTART)
 1902 06ee 0E94 0000 		call sys_printString_P
 921:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     pmon->cursorPos = 0;
 1904               	.LM238:
 1905 06f2 1092 0000 		sts sys_mon+2,__zero_reg__
 922:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     pmon->cmdLine[0] = 0;
 1907               	.LM239:
 1908 06f6 1092 0000 		sts sys_mon+3,__zero_reg__
 1909               	/* epilogue start */
 923:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 1911               	.LM240:
 1912 06fa 2C96      		adiw r28,12
 1913 06fc 0FB6      		in __tmp_reg__,__SREG__
 1914 06fe F894      		cli
 1915 0700 DEBF      		out __SP_H__,r29
 1916 0702 0FBE      		out __SREG__,__tmp_reg__
 1917 0704 CDBF      		out __SP_L__,r28
 1918 0706 DF91      		pop r29
 1919 0708 CF91      		pop r28
 1920 070a 1F91      		pop r17
 1921 070c 0F91      		pop r16
 1922 070e FF90      		pop r15
 1923 0710 EF90      		pop r14
 1924 0712 DF90      		pop r13
 1925 0714 CF90      		pop r12
 1926 0716 0895      		ret
 1927               	.L105:
 869:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             *ps++ = 0;
 1929               	.LM241:
 1930 0718 1082      		st Z,__zero_reg__
 1931 071a FD01      		movw r30,r26
 1932 071c 00C0      		rjmp .L119
 1943               	.Lscope28:
 1944               		.section	.rodata.str1.1
 1945               	.LC6:
 1946 003a 0820 0800 		.string	"\b \b"
 1947               		.text
 1949               	.global	sys_mon_CmdLineBack
 1951               	sys_mon_CmdLineBack:
 927:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 1953               	.LM242:
 1954               	.LFBB29:
 1955               	/* prologue: function */
 1956               	/* frame size = 0 */
 1957               	/* stack size = 0 */
 1958               	.L__stack_usage = 0
 929:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (pmon->cursorPos==0) return;
 1960               	.LM243:
 1961 071e 8091 0000 		lds r24,sys_mon+2
 1962 0722 8823      		tst r24
 1963 0724 01F0      		breq .L139
 930:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     printf("\b \b");
 1965               	.LM244:
 1966 0726 80E0      		ldi r24,lo8(.LC6)
 1967 0728 90E0      		ldi r25,hi8(.LC6)
 1968 072a 9F93      		push r25
 1969 072c 8F93      		push r24
 1970 072e 0E94 0000 		call printf
 931:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     pmon->cmdLine[--pmon->cursorPos] = 0;
 1972               	.LM245:
 1973 0732 E091 0000 		lds r30,sys_mon+2
 1974 0736 E150      		subi r30,lo8(-(-1))
 1975 0738 E093 0000 		sts sys_mon+2,r30
 1976 073c F0E0      		ldi r31,0
 1977 073e E050      		subi r30,lo8(-(sys_mon))
 1978 0740 F040      		sbci r31,hi8(-(sys_mon))
 1979 0742 1382      		std Z+3,__zero_reg__
 1980 0744 0F90      		pop __tmp_reg__
 1981 0746 0F90      		pop __tmp_reg__
 1982               	.L139:
 1983 0748 0895      		ret
 1985               	.Lscope29:
 1989               	.global	sys_putnchar
 1991               	sys_putnchar:
 935:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 1993               	.LM246:
 1994               	.LFBB30:
 1995 074a 1F93      		push r17
 1996 074c CF93      		push r28
 1997 074e DF93      		push r29
 1998               	/* prologue: function */
 1999               	/* frame size = 0 */
 2000               	/* stack size = 3 */
 2001               	.L__stack_usage = 3
 2002 0750 162F      		mov r17,r22
 937:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         putchar(c);
 2004               	.LM247:
 2005 0752 C82F      		mov r28,r24
 2006 0754 D0E0      		ldi r29,0
 2007               	.L145:
 936:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     for (; count>0; count--)
 2009               	.LM248:
 2010 0756 1123      		tst r17
 2011 0758 01F0      		breq .L147
 937:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         putchar(c);
 2013               	.LM249:
 2014 075a 6091 0000 		lds r22,__iob+2
 2015 075e 7091 0000 		lds r23,__iob+2+1
 2016 0762 CE01      		movw r24,r28
 2017 0764 0E94 0000 		call fputc
 936:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     for (; count>0; count--)
 2019               	.LM250:
 2020 0768 1150      		subi r17,lo8(-(-1))
 2021 076a 00C0      		rjmp .L145
 2022               	.L147:
 2023               	/* epilogue start */
 938:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 2025               	.LM251:
 2026 076c DF91      		pop r29
 2027 076e CF91      		pop r28
 2028 0770 1F91      		pop r17
 2029 0772 0895      		ret
 2031               	.Lscope30:
 2032               		.section	.rodata.str1.1
 2033               	.LC7:
 2034 003e 0A0A 0D3E 		.string	"\n\n\r>"
 2034      00
 2035               	.LC8:
 2036 0043 0A0A 0D00 		.string	"\n\n\r"
 2037               		.text
 2039               	.global	sys_mon_main
 2041               	sys_mon_main:
 942:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 2043               	.LM252:
 2044               	.LFBB31:
 2045 0774 1F93      		push r17
 2046 0776 CF93      		push r28
 2047 0778 DF93      		push r29
 2048 077a 1F92      		push __zero_reg__
 2049 077c CDB7      		in r28,__SP_L__
 2050 077e DEB7      		in r29,__SP_H__
 2051               	/* prologue: function */
 2052               	/* frame size = 1 */
 2053               	/* stack size = 4 */
 2054               	.L__stack_usage = 4
 948:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys_mon.flags & SYS_MONITOR_FLAG_LINEMODE)
 2056               	.LM253:
 2057 0780 8091 0000 		lds r24,sys_mon
 2058 0784 80FF      		sbrs r24,0
 2059 0786 00C0      		rjmp .L150
 2060 0788 60E0      		ldi r22,0
 2061               	.L154:
 950:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         while (sys_uart_available()>0)
 2063               	.LM254:
 2064 078a 6983      		std Y+1,r22
 2065 078c 0E94 0000 		call sys_uart_available
 2066 0790 6981      		ldd r22,Y+1
 2067 0792 8823      		tst r24
 2068 0794 01F0      		breq .L199
 952:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             c = getchar();
 2070               	.LM255:
 2071 0796 8091 0000 		lds r24,__iob
 2072 079a 9091 0000 		lds r25,__iob+1
 2073 079e 0E94 0000 		call fgetc
 2074 07a2 682F      		mov r22,r24
 953:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (lastbyte != '\n' && c == '\r')
 2076               	.LM256:
 2077 07a4 8091 0000 		lds r24,lastbyte.2559
 2078 07a8 8A30      		cpi r24,lo8(10)
 2079 07aa 01F0      		breq .L151
 953:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (lastbyte != '\n' && c == '\r')
 2081               	.LM257:
 2082 07ac 6D30      		cpi r22,lo8(13)
 2083 07ae 01F4      		brne .L151
 2084               	.L153:
 959:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_mon.flags &= ~(SYS_MONITOR_FLAG_LINEMODE | SYS_MONITOR_FLAG_LINE);
 2086               	.LM258:
 2087 07b0 8091 0000 		lds r24,sys_mon
 2088 07b4 8C7F      		andi r24,lo8(-4)
 2089 07b6 8093 0000 		sts sys_mon,r24
 960:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 printf("\n\n\r>");
 2091               	.LM259:
 2092 07ba 80E0      		ldi r24,lo8(.LC7)
 2093 07bc 90E0      		ldi r25,hi8(.LC7)
 2094 07be 9F93      		push r25
 2095 07c0 8F93      		push r24
 2096 07c2 0E94 0000 		call printf
 961:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 return;
 2098               	.LM260:
 2099 07c6 0F90      		pop __tmp_reg__
 2100 07c8 0F90      		pop __tmp_reg__
 2101 07ca 00C0      		rjmp .L148
 2102               	.L151:
 956:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 lastbyte = c;
 2104               	.LM261:
 2105 07cc 6093 0000 		sts lastbyte.2559,r22
 957:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (c=='\n')
 2107               	.LM262:
 2108 07d0 6A30      		cpi r22,lo8(10)
 2109 07d2 01F4      		brne .L154
 2110 07d4 00C0      		rjmp .L153
 2111               	.L199:
 964:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (c==SYS_MONITOR_CTRL_X)
 2113               	.LM263:
 2114 07d6 6831      		cpi r22,lo8(24)
 2115 07d8 01F4      		brne .L156
 967:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_mon.flags &= ~SYS_MONITOR_FLAG_LINE;
 2117               	.LM264:
 2118 07da 8091 0000 		lds r24,sys_mon
 2119 07de 8D7F      		andi r24,lo8(-3)
 2120 07e0 8093 0000 		sts sys_mon,r24
 966:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             incLineIndex = 1;
 2122               	.LM265:
 2123 07e4 11E0      		ldi r17,lo8(1)
 2124 07e6 00C0      		rjmp .L157
 2125               	.L156:
 969:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         else if (c==SYS_MONITOR_CTRL_Y)
 2127               	.LM266:
 2128 07e8 6931      		cpi r22,lo8(25)
 2129 07ea 01F4      		brne .L158
 972:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_mon.flags &= ~SYS_MONITOR_FLAG_LINE;
 2131               	.LM267:
 2132 07ec 8091 0000 		lds r24,sys_mon
 2133 07f0 8D7F      		andi r24,lo8(-3)
 2134 07f2 8093 0000 		sts sys_mon,r24
 971:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             incLineIndex = -1;
 2136               	.LM268:
 2137 07f6 1FEF      		ldi r17,lo8(-1)
 2138 07f8 00C0      		rjmp .L157
 2139               	.L158:
 974:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         else if (c==SYS_MONITOR_CTRL_C)
 2141               	.LM269:
 2142 07fa 6330      		cpi r22,lo8(3)
 2143 07fc 01F4      		brne .L178
 976:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (sys_mon.flags & SYS_MONITOR_FLAG_CONT)
 2145               	.LM270:
 2146 07fe 8091 0000 		lds r24,sys_mon
 2147 0802 82FF      		sbrs r24,2
 2148 0804 00C0      		rjmp .L159
 977:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_mon.flags &= ~(SYS_MONITOR_FLAG_CONT | SYS_MONITOR_FLAG_LINE);
 2150               	.LM271:
 2151 0806 8091 0000 		lds r24,sys_mon
 2152 080a 897F      		andi r24,lo8(-7)
 2153 080c 00C0      		rjmp .L198
 2154               	.L159:
 979:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_mon.flags |= SYS_MONITOR_FLAG_CONT;
 2156               	.LM272:
 2157 080e 8091 0000 		lds r24,sys_mon
 2158 0812 8460      		ori r24,lo8(4)
 2159               	.L198:
 2160 0814 8093 0000 		sts sys_mon,r24
 2161               	.L178:
 945:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     int8_t incLineIndex = 0;
 2163               	.LM273:
 2164 0818 10E0      		ldi r17,0
 2165               	.L157:
 982:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (sys_mon.flags & SYS_MONITOR_FLAG_LINE)
 2167               	.LM274:
 2168 081a 8091 0000 		lds r24,sys_mon
 2169 081e 81FF      		sbrs r24,1
 2170 0820 00C0      		rjmp .L160
 2171               	.LBB32:
 984:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             int8_t lenSpaces = mon_printLine(sys_mon.lineIndex, c);
 2173               	.LM275:
 2174 0822 8091 0000 		lds r24,sys_mon+1
 2175 0826 0E94 0000 		call mon_printLine
 985:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_putnchar(' ', lenSpaces);
 2177               	.LM276:
 2178 082a 682F      		mov r22,r24
 2179 082c 80E2      		ldi r24,lo8(32)
 2180 082e 0E94 0000 		call sys_putnchar
 986:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             printf("\r");
 2182               	.LM277:
 2183 0832 8DE0      		ldi r24,lo8(13)
 2184 0834 90E0      		ldi r25,0
 2185 0836 0E94 0000 		call putchar
 987:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (sys_mon.flags & SYS_MONITOR_FLAG_CONT)
 2187               	.LM278:
 2188 083a 8091 0000 		lds r24,sys_mon
 2189 083e 82FF      		sbrs r24,2
 2190 0840 00C0      		rjmp .L148
 988:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 printf("\n");
 2192               	.LM279:
 2193 0842 8AE0      		ldi r24,lo8(10)
 2194 0844 90E0      		ldi r25,0
 2195               	/* epilogue start */
 2196               	.LBE32:
1041:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 2198               	.LM280:
 2199 0846 0F90      		pop __tmp_reg__
 2200 0848 DF91      		pop r29
 2201 084a CF91      		pop r28
 2202 084c 1F91      		pop r17
 2203               	.LBB33:
 988:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 printf("\n");
 2205               	.LM281:
 2206 084e 0C94 0000 		jmp putchar
 2207               	.L160:
 2208               	.LBE33:
 2209               	.LBB34:
 994:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             printf("\n\n\r");
 2211               	.LM282:
 2212 0852 80E0      		ldi r24,lo8(.LC8)
 2213 0854 90E0      		ldi r25,hi8(.LC8)
 2214 0856 9F93      		push r25
 2215 0858 8F93      		push r24
 2216 085a 0E94 0000 		call printf
 2217 085e 0F90      		pop __tmp_reg__
 2218 0860 0F90      		pop __tmp_reg__
 2219               	.L169:
 997:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 if (incLineIndex)
 2221               	.LM283:
 2222 0862 1123      		tst r17
 2223 0864 01F0      		breq .L162
 998:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                     sys_mon.lineIndex = incLineIndex>0 ? sys_mon.lineIndex+1 : sys_mon.lineIndex-1;
 2225               	.LM284:
 2226 0866 8091 0000 		lds r24,sys_mon+1
 2227 086a 1130      		cpi r17,lo8(1)
 2228 086c 01F4      		brne .L163
 998:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                     sys_mon.lineIndex = incLineIndex>0 ? sys_mon.lineIndex+1 : sys_mon.lineIndex-1;
 2230               	.LM285:
 2231 086e 8F5F      		subi r24,lo8(-(1))
 2232 0870 00C0      		rjmp .L164
 2233               	.L163:
 998:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                     sys_mon.lineIndex = incLineIndex>0 ? sys_mon.lineIndex+1 : sys_mon.lineIndex-1;
 2235               	.LM286:
 2236 0872 8150      		subi r24,lo8(-(-1))
 2237               	.L164:
 998:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                     sys_mon.lineIndex = incLineIndex>0 ? sys_mon.lineIndex+1 : sys_mon.lineIndex-1;
 2239               	.LM287:
 2240 0874 8093 0000 		sts sys_mon+1,r24
 2241               	.L162:
 999:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 len = mon_printLineHeader(sys_mon.lineIndex);
 2243               	.LM288:
 2244 0878 8091 0000 		lds r24,sys_mon+1
 2245 087c 0E94 0000 		call mon_printLineHeader
1001:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             while (len<0 && sys_mon.lineIndex!=0);
 2247               	.LM289:
 2248 0880 87FD      		sbrc r24,7
 2249 0882 00C0      		rjmp .L165
 2250               	.L168:
1003:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_newline();
 2252               	.LM290:
 2253 0884 8983      		std Y+1,r24
 2254 0886 0E94 0000 		call sys_newline
1004:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (len>0)
 2256               	.LM291:
 2257 088a 8981      		ldd r24,Y+1
 2258 088c 1816      		cp __zero_reg__,r24
 2259 088e 04F4      		brge .L167
1005:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_putnchar('-', len);
 2261               	.LM292:
 2262 0890 682F      		mov r22,r24
 2263 0892 8DE2      		ldi r24,lo8(45)
 2264 0894 0E94 0000 		call sys_putnchar
 2265 0898 00C0      		rjmp .L167
 2266               	.L165:
1001:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             while (len<0 && sys_mon.lineIndex!=0);
 2268               	.LM293:
 2269 089a 9091 0000 		lds r25,sys_mon+1
 2270 089e 9111      		cpse r25,__zero_reg__
 2271 08a0 00C0      		rjmp .L169
 2272 08a2 00C0      		rjmp .L168
 2273               	.L167:
1006:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_newline();
 2275               	.LM294:
 2276 08a4 0E94 0000 		call sys_newline
1007:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_mon.flags |= SYS_MONITOR_FLAG_LINE;
 2278               	.LM295:
 2279 08a8 8091 0000 		lds r24,sys_mon
 2280 08ac 8260      		ori r24,lo8(2)
 2281 08ae 8093 0000 		sts sys_mon,r24
 2282 08b2 00C0      		rjmp .L148
 2283               	.L176:
 2284               	.LBE34:
1014:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             c = getchar();
 2286               	.LM296:
 2287 08b4 8091 0000 		lds r24,__iob
 2288 08b8 9091 0000 		lds r25,__iob+1
 2289 08bc 0E94 0000 		call fgetc
1015:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (lastbyte != '\n' && c == '\r')
 2291               	.LM297:
 2292 08c0 9091 0000 		lds r25,lastbyte.2559
 2293 08c4 9A30      		cpi r25,lo8(10)
 2294 08c6 01F4      		brne .L200
 2295               	.L170:
1018:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 lastbyte = c;
 2297               	.LM298:
 2298 08c8 8093 0000 		sts lastbyte.2559,r24
 2299               	.L171:
1020:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (c==SYS_MONITOR_CTRL_X || c==SYS_MONITOR_CTRL_Y)
 2301               	.LM299:
 2302 08cc 98EE      		ldi r25,lo8(-24)
 2303 08ce 980F      		add r25,r24
 2304 08d0 9230      		cpi r25,lo8(2)
 2305 08d2 00F4      		brsh .L172
1021:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_mon.flags |= SYS_MONITOR_FLAG_LINEMODE;
 2307               	.LM300:
 2308 08d4 8091 0000 		lds r24,sys_mon
 2309 08d8 8160      		ori r24,lo8(1)
 2310 08da 8093 0000 		sts sys_mon,r24
 2311               	.L150:
1012:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         while (sys_uart_available()>0)
 2313               	.LM301:
 2314 08de 0E94 0000 		call sys_uart_available
 2315 08e2 8111      		cpse r24,__zero_reg__
 2316 08e4 00C0      		rjmp .L176
 2317 08e6 00C0      		rjmp .L148
 2318               	.L200:
1015:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (lastbyte != '\n' && c == '\r')
 2320               	.LM302:
 2321 08e8 8D30      		cpi r24,lo8(13)
 2322 08ea 01F4      		brne .L170
1016:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 c = '\n';
 2324               	.LM303:
 2325 08ec 8AE0      		ldi r24,lo8(10)
 2326 08ee 00C0      		rjmp .L171
 2327               	.L172:
1022:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (c=='\n')
 2329               	.LM304:
 2330 08f0 8A30      		cpi r24,lo8(10)
 2331 08f2 01F4      		brne .L174
1023:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_mon_ExecuteCmd();
 2333               	.LM305:
 2334 08f4 0E94 0000 		call sys_mon_ExecuteCmd
 2335 08f8 00C0      		rjmp .L150
 2336               	.L174:
1024:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (c==127)
 2338               	.LM306:
 2339 08fa 8F37      		cpi r24,lo8(127)
 2340 08fc 01F0      		breq .L150
1026:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (c=='\b')
 2342               	.LM307:
 2343 08fe 8830      		cpi r24,lo8(8)
 2344 0900 01F4      		brne .L175
1027:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_mon_CmdLineBack();
 2346               	.LM308:
 2347 0902 0E94 0000 		call sys_mon_CmdLineBack
 2348 0906 00C0      		rjmp .L150
 2349               	.L175:
1028:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (c<' ' || c>126)
 2351               	.LM309:
 2352 0908 90EE      		ldi r25,lo8(-32)
 2353 090a 980F      		add r25,r24
 2354 090c 9F35      		cpi r25,lo8(95)
 2355 090e 00F4      		brsh .L150
1030:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (pmon->cursorPos<(sizeof(pmon->cmdLine)-1))
 2357               	.LM310:
 2358 0910 A091 0000 		lds r26,sys_mon+2
 2359 0914 A732      		cpi r26,lo8(39)
 2360 0916 00F4      		brsh .L150
1035:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 pmon->cmdLine[pmon->cursorPos++] = c;
 2362               	.LM311:
 2363 0918 E1E0      		ldi r30,lo8(1)
 2364 091a EA0F      		add r30,r26
 2365 091c E093 0000 		sts sys_mon+2,r30
 2366 0920 B0E0      		ldi r27,0
 2367 0922 A050      		subi r26,lo8(-(sys_mon))
 2368 0924 B040      		sbci r27,hi8(-(sys_mon))
 2369 0926 1396      		adiw r26,3
 2370 0928 8C93      		st X,r24
1036:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 pmon->cmdLine[pmon->cursorPos] = 0;
 2372               	.LM312:
 2373 092a F0E0      		ldi r31,0
 2374 092c E050      		subi r30,lo8(-(sys_mon))
 2375 092e F040      		sbci r31,hi8(-(sys_mon))
 2376 0930 1382      		std Z+3,__zero_reg__
1037:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 putchar(c);
 2378               	.LM313:
 2379 0932 6091 0000 		lds r22,__iob+2
 2380 0936 7091 0000 		lds r23,__iob+2+1
 2381 093a 90E0      		ldi r25,0
 2382 093c 0E94 0000 		call fputc
 2383 0940 00C0      		rjmp .L150
 2384               	.L148:
 2385               	/* epilogue start */
1041:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 2387               	.LM314:
 2388 0942 0F90      		pop __tmp_reg__
 2389 0944 DF91      		pop r29
 2390 0946 CF91      		pop r28
 2391 0948 1F91      		pop r17
 2392 094a 0895      		ret
 2407               	.Lscope31:
 2409               	.global	sys_main
 2411               	sys_main:
 205:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 2413               	.LM315:
 2414               	.LFBB32:
 2415               	/* prologue: function */
 2416               	/* frame size = 0 */
 2417               	/* stack size = 0 */
 2418               	.L__stack_usage = 0
 207:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys_mon_main();
 2420               	.LM316:
 2421 094c 0C94 0000 		jmp sys_mon_main
 2423               	.Lscope32:
 2425               	.global	__vector_18
 2427               	__vector_18:
1078:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
1079:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
1080:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_MONCMD_SETMEM
1081:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** int8_t sys_cmd_setmem (uint8_t argc, char *argv[])
1082:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
1083:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     char     typ;    // 1st parameter (s='SRAM | 'e'=EEPROM)
1084:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint16_t add;   // 2nd parameter (address)
1085:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint16_t value; // 3rd parameter (value)
1086:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     char     *padd, *pval;
1087:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1088:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (argc==3)
1089:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
1090:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         typ = 's'; // default is set of SRAM-Byte
1091:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         padd = argv[1];
1092:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         pval = argv[2];
1093:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
1094:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     else if (argc==4)
1095:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
1096:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         typ = argv[1][0];
1097:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         padd = argv[2];
1098:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         pval = argv[3];
1099:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
1100:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     else
1101:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         return -1; // Syntax Error
1102:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1103:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     add = sys_readArgument(padd, RAMEND);
1104:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     value = sys_readArgument(pval, 255);
1105:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (value<0) return -2;
1106:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1107:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     printf("set 0x%02x to address 0x%04x\n\r", value, add);
1108:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1109:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     switch (typ)
1110:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
1111:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         case 's':
1112:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             *((uint8_t *)add) = value;
1113:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             break;
1114:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             
1115:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         case 'e':
1116:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             eeprom_write_byte((uint8_t *)add, value);
1117:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             eeprom_busy_wait();
1118:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             break;
1119:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
1120:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1121:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return 0;
1122:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
1123:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif // GLOBAL_MONCMD_SETMEM
1124:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
1125:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
1126:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_MONCMD_HEXDUMP
1127:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** int8_t sys_cmd_hexdump (uint8_t argc, char *argv[])
1128:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
1129:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (argc<3 || argc>4) return -1;
1130:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1131:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     char     typ; // 1st parameter ('s'=SRAM | 'f'=FLASH | 'e'=EEPROM)
1132:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint16_t add; // 2nd parameter (start address of hexdump)
1133:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint16_t len; // [3rd parameter] (number of bytes to dump)
1134:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1135:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     typ = argv[1][0];
1136:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (typ!='f' && typ!='s' && typ!='e')
1137:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         return -1;
1138:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (argv[2][0]=='0' && argv[2][1]=='x')
1139:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         add = strtol(&argv[2][2], NULL, 16);
1140:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     else
1141:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         add = strtol(argv[2], NULL, 10);
1142:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1143:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (argc==4)
1144:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
1145:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (argv[3][0]=='0' && argv[3][1]=='x')
1146:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             len = strtol(&argv[3][2], NULL, 16);
1147:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         else
1148:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             len = strtol(&argv[3][0], NULL, 10);
1149:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
1150:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     else
1151:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         len = 32;
1152:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1153:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     char s[19] = "  ";
1154:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     s[18] = 0;
1155:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint16_t i;
1156:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1157:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     for (i=0; i<len; add++, i++)
1158:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
1159:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         int16_t i16 = sys_getByte(typ, add);
1160:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (i16<0) break;
1161:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         uint8_t value = (uint8_t)i16;
1162:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         
1163:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (i%16==0)
1164:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             printf("0x%04x: ", add);
1165:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         else if (i%4==0)
1166:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             putchar(' ');
1167:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         
1168:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         s[(i%16)+2] = value>=32 && value<127 ? value : '.';
1169:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         printf("%02x ", value);
1170:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (i%16==15)
1171:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         {
1172:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             printf(s);
1173:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys_newline();
1174:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         }
1175:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         
1176:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
1177:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1178:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if ((i%16)!=0)
1179:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
1180:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         for (;(i%16)!=0; i++)
1181:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         {
1182:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             printf("   ");
1183:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             s[(i%16)+2] = ' ';
1184:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if (i%4==0) putchar(' ');
1185:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         }
1186:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         printf(s);
1187:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys_newline();
1188:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
1189:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1190:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return 0;
1191:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
1192:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif // GLOBAL_MONCMD_HEXDUMP
1193:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
1194:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif // GLOBAL_MONITOR
1195:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
1196:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
1197:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** // ------------------------------------
1198:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** // Interrupt Service Routinen
1199:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** // ------------------------------------
1200:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
1201:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** ISR (SYS_UART_RECEIVE_VECTOR)
1202:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 2429               	.LM317:
 2430               	.LFBB33:
 2431 0950 1F92      		push r1
 2432 0952 0F92      		push r0
 2433 0954 0FB6      		in r0,__SREG__
 2434 0956 0F92      		push r0
 2435 0958 1124      		clr __zero_reg__
 2436 095a 2F93      		push r18
 2437 095c 8F93      		push r24
 2438 095e 9F93      		push r25
 2439 0960 EF93      		push r30
 2440 0962 FF93      		push r31
 2441               	/* prologue: Signal */
 2442               	/* frame size = 0 */
 2443               	/* stack size = 8 */
 2444               	.L__stack_usage = 8
1203:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     static uint8_t lastChar;
1204:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     uint8_t c = SYS_UDR;
 2446               	.LM318:
 2447 0964 8091 C600 		lds r24,198
1205:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1206:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (c=='R' && lastChar=='@')
 2449               	.LM319:
 2450 0968 8235      		cpi r24,lo8(82)
 2451 096a 01F4      		brne .L203
 2453               	.LM320:
 2454 096c 9091 0000 		lds r25,lastChar.2592
 2455 0970 9034      		cpi r25,lo8(64)
 2456 0972 01F4      		brne .L203
1207:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
1208:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         wdt_enable(WDTO_15MS);
 2458               	.LM321:
 2459 0974 28E0      		ldi r18,lo8(8)
 2460 0976 88E1      		ldi r24,lo8(24)
 2461 0978 90E0      		ldi r25,0
 2462               	/* #APP */
 2463               	 ;  1208 "/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweir
 2464 097a 0FB6      		in __tmp_reg__,__SREG__
 2465 097c F894      		cli
 2466 097e A895      		wdr
 2467 0980 8093 6000 		sts 96,r24
 2468 0984 0FBE      		out __SREG__,__tmp_reg__
 2469 0986 2093 6000 		sts 96,r18
 2470               		
 2471               	 ;  0 "" 2
1209:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         wdt_reset();
 2473               	.LM322:
 2474               	 ;  1209 "/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweir
 2475 098a A895      		wdr
 2476               	 ;  0 "" 2
 2477               	/* #NOAPP */
 2478               	.L204:
 2479 098c 00C0      		rjmp .L204
 2480               	.L203:
1210:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         while(1) {};
1211:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
1212:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     lastChar = c;
 2482               	.LM323:
 2483 098e 8093 0000 		sts lastChar.2592,r24
1213:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1214:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys.uart.rbuffer_u8[sys.uart.wpos_u8++] = c;
 2485               	.LM324:
 2486 0992 E091 0000 		lds r30,sys+4
 2487 0996 91E0      		ldi r25,lo8(1)
 2488 0998 9E0F      		add r25,r30
 2489 099a 9093 0000 		sts sys+4,r25
 2490 099e F0E0      		ldi r31,0
 2491 09a0 E050      		subi r30,lo8(-(sys))
 2492 09a2 F040      		sbci r31,hi8(-(sys))
 2493 09a4 8683      		std Z+6,r24
1215:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.uart.wpos_u8 >= GLOBAL_UART_RECBUFSIZE)
 2495               	.LM325:
 2496 09a6 8091 0000 		lds r24,sys+4
 2497 09aa 8031      		cpi r24,lo8(16)
 2498 09ac 00F0      		brlo .L205
1216:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys.uart.wpos_u8 = 0;
 2500               	.LM326:
 2501 09ae 1092 0000 		sts sys+4,__zero_reg__
 2502               	.L205:
1217:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (sys.uart.wpos_u8 == sys.uart.rpos_u8)
 2504               	.LM327:
 2505 09b2 9091 0000 		lds r25,sys+4
 2506 09b6 8091 0000 		lds r24,sys+3
 2507 09ba 9813      		cpse r25,r24
 2508 09bc 00C0      		rjmp .L206
1218:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
1219:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys.uart.wpos_u8 == 0 ? sys.uart.wpos_u8 = GLOBAL_UART_RECBUFSIZE-1 : sys.uart.wpos_u8--;
 2510               	.LM328:
 2511 09be 8091 0000 		lds r24,sys+4
 2512 09c2 8111      		cpse r24,__zero_reg__
 2513 09c4 00C0      		rjmp .L207
 2515               	.LM329:
 2516 09c6 8FE0      		ldi r24,lo8(15)
 2517 09c8 00C0      		rjmp .L211
 2518               	.L207:
 2520               	.LM330:
 2521 09ca 8091 0000 		lds r24,sys+4
 2522 09ce 8150      		subi r24,lo8(-(-1))
 2523               	.L211:
 2524 09d0 8093 0000 		sts sys+4,r24
1220:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         sys.uart.errcnt_u8 = sys_inc8BitCnt(sys.uart.errcnt_u8);
 2526               	.LM331:
 2527 09d4 8091 0000 		lds r24,sys+5
 2528               	.LBB35:
 2529               	.LBB36:
 215:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return count<0xff ? count+1 : count;
 2531               	.LM332:
 2532 09d8 8F3F      		cpi r24,lo8(-1)
 2533 09da 01F0      		breq .L210
 215:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return count<0xff ? count+1 : count;
 2535               	.LM333:
 2536 09dc 8F5F      		subi r24,lo8(-(1))
 2537 09de 00C0      		rjmp .L209
 2538               	.L210:
 2539 09e0 8FEF      		ldi r24,lo8(-1)
 2540               	.L209:
 2541               	.LBE36:
 2542               	.LBE35:
 2544               	.LM334:
 2545 09e2 8093 0000 		sts sys+5,r24
 2546               	.L206:
1221:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
1222:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     sys.uart.rbuffer_u8[sys.uart.wpos_u8] = 0;
 2548               	.LM335:
 2549 09e6 E091 0000 		lds r30,sys+4
 2550 09ea F0E0      		ldi r31,0
 2551 09ec E050      		subi r30,lo8(-(sys))
 2552 09ee F040      		sbci r31,hi8(-(sys))
 2553 09f0 1682      		std Z+6,__zero_reg__
 2554               	/* epilogue start */
1223:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 2556               	.LM336:
 2557 09f2 FF91      		pop r31
 2558 09f4 EF91      		pop r30
 2559 09f6 9F91      		pop r25
 2560 09f8 8F91      		pop r24
 2561 09fa 2F91      		pop r18
 2562 09fc 0F90      		pop r0
 2563 09fe 0FBE      		out __SREG__,r0
 2564 0a00 0F90      		pop r0
 2565 0a02 1F90      		pop r1
 2566 0a04 1895      		reti
 2572               	.Lscope33:
 2574               	.global	__vector_14
 2576               	__vector_14:
1224:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
1225:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** 
1226:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** // Timer 0 Output/Compare Interrupt
1227:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** // called every 100us
1228:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** ISR (SYS_TIMER0_VECTOR)
1229:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** {
 2578               	.LM337:
 2579               	.LFBB34:
 2580 0a06 1F92      		push r1
 2581 0a08 0F92      		push r0
 2582 0a0a 0FB6      		in r0,__SREG__
 2583 0a0c 0F92      		push r0
 2584 0a0e 1124      		clr __zero_reg__
 2585 0a10 2F93      		push r18
 2586 0a12 3F93      		push r19
 2587 0a14 4F93      		push r20
 2588 0a16 5F93      		push r21
 2589 0a18 6F93      		push r22
 2590 0a1a 7F93      		push r23
 2591 0a1c 8F93      		push r24
 2592 0a1e 9F93      		push r25
 2593 0a20 AF93      		push r26
 2594 0a22 BF93      		push r27
 2595 0a24 EF93      		push r30
 2596 0a26 FF93      		push r31
 2597               	/* prologue: Signal */
 2598               	/* frame size = 0 */
 2599               	/* stack size = 15 */
 2600               	.L__stack_usage = 15
1230:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     static uint8_t cnt100us = 0;
1231:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     static uint8_t cnt500us = 0;
1232:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     static uint8_t busy = 0;
1233:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1234:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     cnt100us++;
 2602               	.LM338:
 2603 0a28 8091 0000 		lds r24,cnt100us.2600
 2604 0a2c 8F5F      		subi r24,lo8(-(1))
1235:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     if (cnt100us>=5)
 2606               	.LM339:
 2607 0a2e 8530      		cpi r24,lo8(5)
 2608 0a30 00F4      		brsh .L213
1234:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     cnt100us++;
 2610               	.LM340:
 2611 0a32 8093 0000 		sts cnt100us.2600,r24
 2612 0a36 00C0      		rjmp .L212
 2613               	.L213:
1236:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     {
1237:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         cnt100us = 0;
 2615               	.LM341:
 2616 0a38 1092 0000 		sts cnt100us.2600,__zero_reg__
1238:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         cnt500us++;
 2618               	.LM342:
 2619 0a3c 8091 0000 		lds r24,cnt500us.2601
 2620 0a40 8F5F      		subi r24,lo8(-(1))
 2621 0a42 8093 0000 		sts cnt500us.2601,r24
1239:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         if (busy)
 2623               	.LM343:
 2624 0a46 8091 0000 		lds r24,busy.2602
 2625 0a4a 8823      		tst r24
 2626 0a4c 01F0      		breq .L215
1240:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sys.taskErr_u8 = sys_inc8BitCnt(sys.taskErr_u8);
 2628               	.LM344:
 2629 0a4e 8091 0000 		lds r24,sys+1
 2630               	.LBB37:
 2631               	.LBB38:
 215:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     return count<0xff ? count+1 : count;
 2633               	.LM345:
 2634 0a52 8F3F      		cpi r24,lo8(-1)
 2635 0a54 01F0      		breq .L225
 2636 0a56 8F5F      		subi r24,lo8(-(1))
 2637 0a58 00C0      		rjmp .L216
 2638               	.L225:
 2639 0a5a 8FEF      		ldi r24,lo8(-1)
 2640               	.L216:
 2641               	.LBE38:
 2642               	.LBE37:
 2644               	.LM346:
 2645 0a5c 8093 0000 		sts sys+1,r24
 2646 0a60 00C0      		rjmp .L212
 2647               	.L215:
1241:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         else
1242:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         {
1243:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             busy = 1;
 2649               	.LM347:
 2650 0a62 81E0      		ldi r24,lo8(1)
 2651 0a64 8093 0000 		sts busy.2602,r24
1244:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             sei();
 2653               	.LM348:
 2654               	/* #APP */
 2655               	 ;  1244 "/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweir
 2656 0a68 7894      		sei
 2657               	 ;  0 "" 2
1245:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             if      (cnt500us & 0x01) app_task_1ms();
 2659               	.LM349:
 2660               	/* #NOAPP */
 2661 0a6a 8091 0000 		lds r24,cnt500us.2601
 2662 0a6e 80FF      		sbrs r24,0
 2663 0a70 00C0      		rjmp .L217
 2665               	.LM350:
 2666 0a72 0E94 0000 		call app_task_1ms
 2667 0a76 00C0      		rjmp .L218
 2668               	.L217:
1246:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (cnt500us & 0x02)
 2670               	.LM351:
 2671 0a78 81FF      		sbrs r24,1
 2672 0a7a 00C0      		rjmp .L219
1247:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             {
1248:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_SURE_SEG7
1249:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #ifdef GLOBAL_SURE_LCD
1250:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 if (sys.lcd.status != 1)
1251:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                     sys_7seg_refresh();
1252:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 else
1253:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                     PORTA &= ~0xf0; // disable 7-Segment
1254:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #else
1255:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 sys_7seg_refresh();
1256:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif
1257:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** #endif
1258:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****                 app_task_2ms();
 2674               	.LM352:
 2675 0a7c 0E94 0000 		call app_task_2ms
 2676 0a80 00C0      		rjmp .L218
 2677               	.L219:
1259:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             }
1260:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (cnt500us & 0x04) app_task_4ms();
 2679               	.LM353:
 2680 0a82 82FF      		sbrs r24,2
 2681 0a84 00C0      		rjmp .L220
 2683               	.LM354:
 2684 0a86 0E94 0000 		call app_task_4ms
 2685 0a8a 00C0      		rjmp .L218
 2686               	.L220:
1261:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (cnt500us & 0x08) app_task_8ms();
 2688               	.LM355:
 2689 0a8c 83FF      		sbrs r24,3
 2690 0a8e 00C0      		rjmp .L221
 2692               	.LM356:
 2693 0a90 0E94 0000 		call app_task_8ms
 2694 0a94 00C0      		rjmp .L218
 2695               	.L221:
1262:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (cnt500us & 0x10) app_task_16ms();
 2697               	.LM357:
 2698 0a96 84FF      		sbrs r24,4
 2699 0a98 00C0      		rjmp .L222
 2701               	.LM358:
 2702 0a9a 0E94 0000 		call app_task_16ms
 2703 0a9e 00C0      		rjmp .L218
 2704               	.L222:
1263:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (cnt500us & 0x20) app_task_32ms();
 2706               	.LM359:
 2707 0aa0 85FF      		sbrs r24,5
 2708 0aa2 00C0      		rjmp .L223
 2710               	.LM360:
 2711 0aa4 0E94 0000 		call app_task_32ms
 2712 0aa8 00C0      		rjmp .L218
 2713               	.L223:
1264:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (cnt500us & 0x40) app_task_64ms();
 2715               	.LM361:
 2716 0aaa 86FF      		sbrs r24,6
 2717 0aac 00C0      		rjmp .L224
 2719               	.LM362:
 2720 0aae 0E94 0000 		call app_task_64ms
 2721 0ab2 00C0      		rjmp .L218
 2722               	.L224:
1265:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             else if (cnt500us & 0x80) app_task_128ms();
 2724               	.LM363:
 2725 0ab4 87FD      		sbrc r24,7
 2727               	.LM364:
 2728 0ab6 0E94 0000 		call app_task_128ms
 2729               	.L218:
1266:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****             busy = 0;
 2731               	.LM365:
 2732 0aba 1092 0000 		sts busy.2602,__zero_reg__
 2733               	.L212:
 2734               	/* epilogue start */
1267:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****         }
1268:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     }
1269:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c ****     
1270:/Users/emil/OneDrive - HTBLA Kaindorf/Zweiradprüfstand/Software/Zweiradpruefstand/Zweiradpruefstand_AVR/Zweiradpruefstand_AVR/sys.c **** }
 2736               	.LM366:
 2737 0abe FF91      		pop r31
 2738 0ac0 EF91      		pop r30
 2739 0ac2 BF91      		pop r27
 2740 0ac4 AF91      		pop r26
 2741 0ac6 9F91      		pop r25
 2742 0ac8 8F91      		pop r24
 2743 0aca 7F91      		pop r23
 2744 0acc 6F91      		pop r22
 2745 0ace 5F91      		pop r21
 2746 0ad0 4F91      		pop r20
 2747 0ad2 3F91      		pop r19
 2748 0ad4 2F91      		pop r18
 2749 0ad6 0F90      		pop r0
 2750 0ad8 0FBE      		out __SREG__,r0
 2751 0ada 0F90      		pop r0
 2752 0adc 1F90      		pop r1
 2753 0ade 1895      		reti
 2760               	.Lscope34:
 2761               		.local	busy.2602
 2762               		.comm	busy.2602,1,1
 2763               		.local	cnt500us.2601
 2764               		.comm	cnt500us.2601,1,1
 2765               		.local	cnt100us.2600
 2766               		.comm	cnt100us.2600,1,1
 2767               		.local	lastChar.2592
 2768               		.comm	lastChar.2592,1,1
 2769               		.local	lastbyte.2559
 2770               		.comm	lastbyte.2559,1,1
 2771               		.data
 2774               	mystdin:
 2775 0000 0000 00   		.zero	3
 2776 0003 01        		.byte	1
 2777 0004 0000 0000 		.zero	4
 2778 0008 0000      		.word	0
 2779 000a 0000      		.word	gs(sys_uart_getch)
 2780 000c 0000      		.word	0
 2783               	mystdout:
 2784 000e 0000 00   		.zero	3
 2785 0011 02        		.byte	2
 2786 0012 0000 0000 		.zero	4
 2787 0016 0000      		.word	gs(sys_uart_putch)
 2788 0018 0000      		.word	0
 2789 001a 0000      		.word	0
 2790               		.comm	sys,22,1
 2791               	.global	SYS_PMEMSTR_CMDS
 2792               		.section	.progmem.data,"a",@progbits
 2795               	SYS_PMEMSTR_CMDS:
 2796 0000 0000      		.word	SYS_PMEM_CMD_HELP
 2797 0002 0000      		.word	gs(sys_cmd_help)
 2798 0004 0000      		.word	SYS_PMEM_CMD_SINFO
 2799 0006 0000      		.word	gs(sys_cmd_sinfo)
 2800               	.global	SYS_PMEM_CMD_SINFO
 2803               	SYS_PMEM_CMD_SINFO:
 2804 0008 7369 6E66 		.string	"sinfo"
 2804      6F00 
 2805 000e 5379 7374 		.string	"Systeminformation"
 2805      656D 696E 
 2805      666F 726D 
 2805      6174 696F 
 2805      6E00 
 2806 0020 7369 6E66 		.string	"sinfo"
 2806      6F00 
 2807               	.global	SYS_PMEM_CMD_HELP
 2810               	SYS_PMEM_CMD_HELP:
 2811 0026 6865 6C70 		.string	"help"
 2811      00
 2812 002b 4C69 7374 		.string	"List of all commands"
 2812      206F 6620 
 2812      616C 6C20 
 2812      636F 6D6D 
 2812      616E 6473 
 2813 0040 6865 6C70 		.string	"help"
 2813      00
 2814               	.global	SYS_PMEM_ERR2
 2817               	SYS_PMEM_ERR2:
 2818 0045 202D 3E20 		.string	" -> Syntax error\n\rUsage: "
 2818      5379 6E74 
 2818      6178 2065 
 2818      7272 6F72 
 2818      0A0D 5573 
 2819               	.global	SYS_PMEM_ERR1
 2822               	SYS_PMEM_ERR1:
 2823 005f 4572 726F 		.string	"Error: Unknown command\n\r"
 2823      723A 2055 
 2823      6E6B 6E6F 
 2823      776E 2063 
 2823      6F6D 6D61 
 2824               	.global	SYS_PMEM_ERR0
 2827               	SYS_PMEM_ERR0:
 2828 0078 4572 726F 		.string	"Error "
 2828      7220 00
 2829               	.global	SYS_PMEM_LINESTART
 2832               	SYS_PMEM_LINESTART:
 2833 007f 0A0D 3E00 		.string	"\n\r>"
 2834               		.comm	sys_mon,43,1
 2846               		.text
 2848               	.Letext0:
 2849               		.ident	"GCC: (GNU) 4.8.1"
 2850               	.global __do_copy_data
 2851               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 sys.c
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2      *ABS*:0000003e __SP_H__
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:3      *ABS*:0000003d __SP_L__
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:4      *ABS*:0000003f __SREG__
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:6      *ABS*:00000001 __zero_reg__
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:141    .text:00000000 sys_uart_getch
                            *COM*:00000016 sys
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:203    .text:00000044 sys_uart_putch
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:244    .text:00000068 sys_init
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2783   .data:0000000e mystdout
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2774   .data:00000000 mystdin
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:342    .text:000000d2 sys_inc8BitCnt
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:369    .text:000000de sys_inc16BitCnt
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:398    .text:000000f0 sys_sei
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:425    .text:000000fc sys_cli
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:459    .text:0000010e sys_newline
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:483    .text:00000120 sys_printString_P
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:546    .text:00000166 sys_puts_P
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:567    .text:0000016e sys_getByte
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:657    .text:000001c2 sys_printBin
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:749    .text:00000236 sys_printHexBin8
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:803    .text:0000026c sys_cmd_sinfo
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:858    .text:000002a8 sys_printHexBin16
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:925    .text:000002fc sys_readArgument
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:988    .text:00000336 sys_uart_available
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:1030   .text:0000035a sys_uart_getBufferByte
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:1098   .text:00000394 sys_uart_flush
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:1139   .text:000003ba sys_setEvent
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:1183   .text:000003e4 sys_clearEvent
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:1229   .text:00000412 sys_isEventPending
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:1254   .text:00000420 sys_setLed
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:1280   .text:0000042c sys_toggleLed
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:1301   .text:00000436 sys_getMonCmdInfo
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2795   .progmem.data:00000000 SYS_PMEMSTR_CMDS
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:1390   .text:0000049a sys_cmd_help
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:1562   .text:0000054c sys_mon_printUsageInfo
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:1656   .text:000005b6 sys_mon_ExecuteCmd
                            *COM*:0000002b sys_mon
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2822   .progmem.data:0000005f SYS_PMEM_ERR1
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2810   .progmem.data:00000026 SYS_PMEM_CMD_HELP
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2827   .progmem.data:00000078 SYS_PMEM_ERR0
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2817   .progmem.data:00000045 SYS_PMEM_ERR2
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2832   .progmem.data:0000007f SYS_PMEM_LINESTART
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:1951   .text:0000071e sys_mon_CmdLineBack
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:1991   .text:0000074a sys_putnchar
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2041   .text:00000774 sys_mon_main
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2768   .bss:00000004 lastbyte.2559
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2411   .text:0000094c sys_main
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2427   .text:00000950 __vector_18
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2766   .bss:00000003 lastChar.2592
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2576   .text:00000a06 __vector_14
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2764   .bss:00000002 cnt100us.2600
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2762   .bss:00000001 cnt500us.2601
                             .bss:00000000 busy.2602
/var/folders/n0/nrv0hhms1cx0j69_hx06fj7r0000gn/T//ccUX4yD5.s:2803   .progmem.data:00000008 SYS_PMEM_CMD_SINFO

UNDEFINED SYMBOLS
__iob
printf
memcpy_P
fputc
strtol
mon_getCmdCount
MON_PMEMSTR_CMDS
__strlen_P
strcmp_P
fgetc
mon_printLine
putchar
mon_printLineHeader
app_task_1ms
app_task_2ms
app_task_4ms
app_task_8ms
app_task_16ms
app_task_32ms
app_task_64ms
app_task_128ms
__do_copy_data
__do_clear_bss
